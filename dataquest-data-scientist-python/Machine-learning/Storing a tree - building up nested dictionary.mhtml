From: <Saved by Blink>
Snapshot-Content-Location: https://app.dataquest.io/m/90/building-a-decision-tree/6/storing-the-tree
Subject: Building A Decision Tree Using ID3 | Dataquest
Date: Thu, 1 Jul 2021 09:31:55 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----"


------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/html
Content-ID: <frame-D0F2EDED5D8D8CA5E38EF9304BB64397@mhtml.blink>
Content-Transfer-Encoding: quoted-printable
Content-Location: https://app.dataquest.io/m/90/building-a-decision-tree/6/storing-the-tree

<!DOCTYPE html><html lang=3D"en" class=3D"wf-sourcesanspro-n4-active wf-sou=
rcecodepro-i7-active wf-sourcesanspro-i4-active wf-sourcecodepro-n4-active =
wf-sourcesanspro-n7-active wf-sourcecodepro-n7-active wf-sourcesanspro-i7-a=
ctive wf-sourcecodepro-i4-active wf-active"><head><meta http-equiv=3D"Conte=
nt-Type" content=3D"text/html; charset=3DUTF-8"><link rel=3D"stylesheet" ty=
pe=3D"text/css" href=3D"cid:css-7e5fd711-88d4-4dfd-a029-9dfd4bf922d6@mhtml.=
blink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-0523dca=
7-10a9-4971-93b6-028f35d25921@mhtml.blink" /><link rel=3D"stylesheet" type=
=3D"text/css" href=3D"cid:css-8440e048-3abe-4899-b3e4-2944790137f3@mhtml.bl=
ink" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-cfc3cd89-=
2d84-49ae-98b5-478e87363234@mhtml.blink" /><link rel=3D"stylesheet" type=3D=
"text/css" href=3D"cid:css-9d132a9f-6fe1-47d4-b8f8-d95592e2bbf9@mhtml.blink=
" /><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-274d487c-01e=
b-4041-a1e3-45cd78055502@mhtml.blink" /><link rel=3D"stylesheet" type=3D"te=
xt/css" href=3D"cid:css-be4b3e53-2876-4914-971a-0970c8d01a63@mhtml.blink" /=
><link rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-3d3c15be-70f2-4=
463-ac17-7f0f2f203328@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/=
css" href=3D"cid:css-89becc69-433d-4b07-9d92-fab4e80d1969@mhtml.blink" /><l=
ink rel=3D"stylesheet" type=3D"text/css" href=3D"cid:css-576f4bc7-0667-46ec=
-978d-794e91a5ec0f@mhtml.blink" /><link rel=3D"stylesheet" type=3D"text/css=
" href=3D"cid:css-2d431c62-705d-42bb-8f84-1a4b4b486595@mhtml.blink" /><meta=
 name=3D"viewport" content=3D"width=3Ddevice-width,initial-scale=3D1"><meta=
 name=3D"fragment" content=3D"!"><title idle-disabled=3D"true">Building A D=
ecision Tree Using ID3 | Dataquest</title><meta name=3D"description" conten=
t=3D"Learn Python and R for data science. Learn by coding and working with =
data in your browser. Build your portfolio with projects and become a data =
scientist."><link rel=3D"stylesheet" href=3D"https://cdn.jsdelivr.net/npm/k=
atex@0.10.2/dist/katex.min.css" crossorigin=3D"anonymous"><link rel=3D"appl=
e-touch-icon" sizes=3D"57x57" href=3D"https://app.dataquest.io/icons-0de704=
297f9f471310abdd90188e8daf/apple-touch-icon-57x57.png"><link rel=3D"apple-t=
ouch-icon" sizes=3D"60x60" href=3D"https://app.dataquest.io/icons-0de704297=
f9f471310abdd90188e8daf/apple-touch-icon-60x60.png"><link rel=3D"apple-touc=
h-icon" sizes=3D"72x72" href=3D"https://app.dataquest.io/icons-0de704297f9f=
471310abdd90188e8daf/apple-touch-icon-72x72.png"><link rel=3D"apple-touch-i=
con" sizes=3D"76x76" href=3D"https://app.dataquest.io/icons-0de704297f9f471=
310abdd90188e8daf/apple-touch-icon-76x76.png"><link rel=3D"apple-touch-icon=
" sizes=3D"114x114" href=3D"https://app.dataquest.io/icons-0de704297f9f4713=
10abdd90188e8daf/apple-touch-icon-114x114.png"><link rel=3D"apple-touch-ico=
n" sizes=3D"120x120" href=3D"https://app.dataquest.io/icons-0de704297f9f471=
310abdd90188e8daf/apple-touch-icon-120x120.png"><link rel=3D"apple-touch-ic=
on" sizes=3D"144x144" href=3D"https://app.dataquest.io/icons-0de704297f9f47=
1310abdd90188e8daf/apple-touch-icon-144x144.png"><link rel=3D"apple-touch-i=
con" sizes=3D"152x152" href=3D"https://app.dataquest.io/icons-0de704297f9f4=
71310abdd90188e8daf/apple-touch-icon-152x152.png"><link rel=3D"apple-touch-=
icon" sizes=3D"180x180" href=3D"https://app.dataquest.io/icons-0de704297f9f=
471310abdd90188e8daf/apple-touch-icon-180x180.png"><meta name=3D"apple-mobi=
le-web-app-capable" content=3D"yes"><meta name=3D"apple-mobile-web-app-stat=
us-bar-style" content=3D"black-translucent"><meta name=3D"apple-mobile-web-=
app-title" content=3D"Dataquest"><meta name=3D"mobile-web-app-capable" cont=
ent=3D"yes"><meta name=3D"theme-color" content=3D"#fff"><meta name=3D"appli=
cation-name" content=3D"Dataquest"><link rel=3D"icon" type=3D"image/png" si=
zes=3D"32x32" href=3D"https://app.dataquest.io/icons-0de704297f9f471310abdd=
90188e8daf/favicon-32x32.png"><link rel=3D"icon" type=3D"image/png" sizes=
=3D"16x16" href=3D"https://app.dataquest.io/icons-0de704297f9f471310abdd901=
88e8daf/favicon-16x16.png"><link rel=3D"shortcut icon" href=3D"https://app.=
dataquest.io/icons-0de704297f9f471310abdd90188e8daf/favicon.ico"><link rel=
=3D"apple-touch-startup-image" media=3D"(device-width: 320px) and (device-h=
eight: 480px) and (-webkit-device-pixel-ratio: 1)" href=3D"https://app.data=
quest.io/icons-0de704297f9f471310abdd90188e8daf/apple-touch-startup-image-3=
20x460.png"><link rel=3D"apple-touch-startup-image" media=3D"(device-width:=
 320px) and (device-height: 480px) and (-webkit-device-pixel-ratio: 2)" hre=
f=3D"https://app.dataquest.io/icons-0de704297f9f471310abdd90188e8daf/apple-=
touch-startup-image-640x920.png"><link rel=3D"apple-touch-startup-image" me=
dia=3D"(device-width: 320px) and (device-height: 568px) and (-webkit-device=
-pixel-ratio: 2)" href=3D"https://app.dataquest.io/icons-0de704297f9f471310=
abdd90188e8daf/apple-touch-startup-image-640x1096.png"><link rel=3D"apple-t=
ouch-startup-image" media=3D"(device-width: 375px) and (device-height: 667p=
x) and (-webkit-device-pixel-ratio: 2)" href=3D"https://app.dataquest.io/ic=
ons-0de704297f9f471310abdd90188e8daf/apple-touch-startup-image-750x1294.png=
"><link rel=3D"apple-touch-startup-image" media=3D"(device-width: 414px) an=
d (device-height: 736px) and (orientation: landscape) and (-webkit-device-p=
ixel-ratio: 3)" href=3D"https://app.dataquest.io/icons-0de704297f9f471310ab=
dd90188e8daf/apple-touch-startup-image-1182x2208.png"><link rel=3D"apple-to=
uch-startup-image" media=3D"(device-width: 414px) and (device-height: 736px=
) and (orientation: portrait) and (-webkit-device-pixel-ratio: 3)" href=3D"=
https://app.dataquest.io/icons-0de704297f9f471310abdd90188e8daf/apple-touch=
-startup-image-1242x2148.png"><link rel=3D"apple-touch-startup-image" media=
=3D"(device-width: 768px) and (device-height: 1024px) and (orientation: lan=
dscape) and (-webkit-device-pixel-ratio: 1)" href=3D"https://app.dataquest.=
io/icons-0de704297f9f471310abdd90188e8daf/apple-touch-startup-image-748x102=
4.png"><link rel=3D"apple-touch-startup-image" media=3D"(device-width: 768p=
x) and (device-height: 1024px) and (orientation: portrait) and (-webkit-dev=
ice-pixel-ratio: 1)" href=3D"https://app.dataquest.io/icons-0de704297f9f471=
310abdd90188e8daf/apple-touch-startup-image-768x1004.png"><link rel=3D"appl=
e-touch-startup-image" media=3D"(device-width: 768px) and (device-height: 1=
024px) and (orientation: landscape) and (-webkit-device-pixel-ratio: 2)" hr=
ef=3D"https://app.dataquest.io/icons-0de704297f9f471310abdd90188e8daf/apple=
-touch-startup-image-1496x2048.png"><link rel=3D"apple-touch-startup-image"=
 media=3D"(device-width: 768px) and (device-height: 1024px) and (orientatio=
n: portrait) and (-webkit-device-pixel-ratio: 2)" href=3D"https://app.dataq=
uest.io/icons-0de704297f9f471310abdd90188e8daf/apple-touch-startup-image-15=
36x2008.png"><link href=3D"https://app.dataquest.io/app.c4ac270a093ff74e37f=
5.css" rel=3D"stylesheet"><link rel=3D"canonical" href=3D"https://www.dataq=
uest.io/m/90/building-a-decision-tree" data-react-helmet=3D"true"><meta nam=
e=3D"twitter:site" content=3D"@dataquestio" data-react-helmet=3D"true"><met=
a name=3D"twitter:title" content=3D"Building A Decision Tree Using ID3 | Da=
taquest" data-react-helmet=3D"true"><meta name=3D"og:title" content=3D"Buil=
ding A Decision Tree Using ID3 | Dataquest" data-react-helmet=3D"true"><met=
a name=3D"og:site_name" content=3D"Dataquest" data-react-helmet=3D"true"><m=
eta name=3D"fb:app_id" content=3D"1068949113131184" data-react-helmet=3D"tr=
ue"><meta name=3D"twitter:card" content=3D"summary" data-react-helmet=3D"tr=
ue"><meta name=3D"description" content=3D"Learn how to create a decision tr=
ee using the ID3 algorithm.  Includes splitting columns, creating a recursi=
ve algorithm, storing the tree and making predictions." data-react-helmet=
=3D"true"><meta name=3D"twitter:description" content=3D"Learn how to create=
 a decision tree using the ID3 algorithm.  Includes splitting columns, crea=
ting a recursive algorithm, storing the tree and making predictions." data-=
react-helmet=3D"true"><meta name=3D"og:description" content=3D"Learn how to=
 create a decision tree using the ID3 algorithm.  Includes splitting column=
s, creating a recursive algorithm, storing the tree and making predictions.=
" data-react-helmet=3D"true"><meta name=3D"og:url" content=3D"https://www.d=
ataquest.io/m/90/building-a-decision-tree" data-react-helmet=3D"true"></hea=
d><body><div id=3D"MathJax_Message" style=3D"display: none;"></div><div id=
=3D"root" class=3D"dq-h-screen"><div class=3D"dq-min-h-full"><div class=3D"=
dq-h-full dq-bg-gray-50 dq-flex dq-flex-col dq-fixed dq-inset-0 dq-overflow=
-hidden"><nav class=3D"dq-dark dq-bg-gray-700 dq-shadow dq-text-gray-500" d=
ata-test-selector=3D"navigation"><div class=3D"dq-px-4 sm:dq-px-6 lg:dq-px-=
8"><div class=3D"dq-flex dq-justify-between dq-h-16"><div class=3D"dq-flex"=
><div class=3D"dq--ml-2 dq-mr-2 dq-flex dq-items-center lg:dq-hidden"><butt=
on type=3D"button" class=3D"dq-inline-flex dq-items-center dq-justify-cente=
r dq-p-2 dq-rounded-md dq-text-gray-200 hover:dq-text-gray-300 hover:dq-bg-=
gray-50 focus:dq-outline-none focus:dq-ring-2 focus:dq-ring-inset focus:dq-=
ring-blue focus:dq-ring-opacity-50" aria-controls=3D"mobile-menu" aria-expa=
nded=3D"false"><span class=3D"dq-sr-only">Open main menu</span><svg stroke=
=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 5=
12 512" class=3D"dq-h-6 dq-w-6" height=3D"1em" width=3D"1em" xmlns=3D"http:=
//www.w3.org/2000/svg"><path d=3D"M64 384h384v-42.67H64zm0-106.67h384v-42.6=
6H64zM64 128v42.67h384V128z"></path></svg></button></div><a class=3D"dq-hid=
den lg:dq-inline-flex dq-items-center dq-pr-6 dq-text-white hover:dq-text-g=
reen hover:dq-border-green" data-test-selector=3D"HeaderDashboardLink" href=
=3D"https://app.dataquest.io/dashboard"><svg stroke=3D"currentColor" fill=
=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 512 512" class=3D"dq-mr=
-2" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><path=
 fill=3D"none" stroke-linecap=3D"round" stroke-linejoin=3D"round" stroke-wi=
dth=3D"48" d=3D"M328 112L184 256l144 144"></path></svg> Dashboard</a></div>=
<div class=3D"dq-flex dq-items-center dq-font-serif dq-text-white dq-text-x=
s md:dq-text-sm">Building a Decision Tree</div><div class=3D"dq-hidden md:d=
q-flex dq-items-center"><div class=3D"dq-ml-4"></div><div class=3D"dq-hidde=
n dq-flex-shrink-0 sm:dq-block dq-ml-4"><a class=3D"dq-transition-all dq-bo=
rder dq-border-transparent dq-bg-transparent dq-text-base !dq-text-sm dq-ro=
unded-btn !dq-font-bold DqButton__main DqButton__capitalize DqButton__short=
 DqButton__gold" href=3D"https://app.dataquest.io/account/share" title=3D""=
 target=3D"" data-test-selector=3D""><span class=3D"dq-transition-colors dq=
-font-bold DqButton__text">GET FREE LIFETIME ACCESS</span></a></div><div cl=
ass=3D"dq-relative"><div><button class=3D"dq-ml-4 dq-flex hover:dq-text-gra=
y-600 focus:dq-outline-none focus:dq-ring-2 focus:dq-ring-offset-2 focus:dq=
-ring-blue focus:dq-ring-opacity-50 dark:focus:dq-ring-offset-gray-700" id=
=3D"connection-status" aria-haspopup=3D"true" type=3D"button"><span class=
=3D"dq-sr-only">Connections status</span><svg stroke=3D"currentColor" fill=
=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 512 512" class=3D"dq-h-=
6 dq-w-6" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"=
><path d=3D"M464 0H144c-26.5 0-48 21.5-48 48v48H48c-26.5 0-48 21.5-48 48v32=
0c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h48c26.5 0 48-21.5 48-48=
V48c0-26.5-21.5-48-48-48zm-96 464H48V256h320v208zm96-96h-48V144c0-26.5-21.5=
-48-48-48H144V48h320v320z"></path></svg></button></div></div><div class=3D"=
dq-hidden md:dq-flex-shrink-0 md:dq-flex md:dq-items-center"><div class=3D"=
dq-ml-4"><button class=3D"dq-rounded-full dq-flex hover:dq-text-gray-600 fo=
cus:dq-outline-none focus:dq-ring-2 focus:dq-ring-blue focus:dq-ring-opacit=
y-50 dark:focus:dq-ring-offset-gray-700 focus:dq-ring-offset-2" id=3D"relea=
senotes-notification" type=3D"button"><svg stroke=3D"currentColor" fill=3D"=
currentColor" stroke-width=3D"0" viewBox=3D"0 0 512 512" class=3D"dq-h-7 dq=
-w-7" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/2000/svg"><pa=
th d=3D"M440.08 341.31c-1.66-2-3.29-4-4.89-5.93-22-26.61-35.31-42.67-35.31-=
118 0-39-9.33-71-27.72-95-13.56-17.73-31.89-31.18-56.05-41.12a3 3 0 01-.82-=
.67C306.6 51.49 282.82 32 256 32s-50.59 19.49-59.28 48.56a3.13 3.13 0 01-.8=
1.65c-56.38 23.21-83.78 67.74-83.78 136.14 0 75.36-13.29 91.42-35.31 118-1.=
6 1.93-3.23 3.89-4.89 5.93a35.16 35.16 0 00-4.65 37.62c6.17 13 19.32 21.07 =
34.33 21.07H410.5c14.94 0 28-8.06 34.19-21a35.17 35.17 0 00-4.61-37.66zM256=
 480a80.06 80.06 0 0070.44-42.13 4 4 0 00-3.54-5.87H189.12a4 4 0 00-3.55 5.=
87A80.06 80.06 0 00256 480z"></path></svg></button></div><div class=3D"dq-m=
l-4"><button class=3D"dq-rounded-full dq-flex hover:dq-text-gray-600 focus:=
dq-outline-none focus:dq-ring-2 focus:dq-ring-blue focus:dq-ring-opacity-50=
 dark:focus:dq-ring-offset-gray-700" id=3D"elevio-menu" type=3D"button"><sv=
g stroke=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=
=3D"0 0 512 512" class=3D"dq-h-8 dq-w-8" height=3D"1em" width=3D"1em" xmlns=
=3D"http://www.w3.org/2000/svg"><path fill=3D"none" stroke-miterlimit=3D"10=
" stroke-width=3D"32" d=3D"M256 80a176 176 0 10176 176A176 176 0 00256 80z"=
></path><path fill=3D"none" stroke-linecap=3D"round" stroke-miterlimit=3D"1=
0" stroke-width=3D"28" d=3D"M200 202.29s.84-17.5 19.57-32.57C230.68 160.77 =
244 158.18 256 158c10.93-.14 20.69 1.67 26.53 4.45 10 4.76 29.47 16.38 29.4=
7 41.09 0 26-17 37.81-36.37 50.8S251 281.43 251 296"></path><circle cx=3D"2=
50" cy=3D"348" r=3D"20"></circle></svg></button></div><div class=3D"dq-ml-3=
"><div class=3D"dq-relative"><div><button class=3D"dq-rounded-full dq-flex =
hover:dq-text-gray-600 focus:dq-outline-none focus:dq-ring-2 focus:dq-ring-=
blue focus:dq-ring-opacity-50 dark:focus:dq-ring-offset-gray-700 focus:dq-r=
ing-offset-0" id=3D"user-menu" aria-haspopup=3D"true" data-test-selector=3D=
"user-menu" type=3D"button"><span class=3D"dq-sr-only">User menu</span><svg=
 stroke=3D"currentColor" fill=3D"currentColor" stroke-width=3D"0" viewBox=
=3D"0 0 512 512" class=3D"dq-text-3xl" height=3D"1em" width=3D"1em" xmlns=
=3D"http://www.w3.org/2000/svg"><path d=3D"M256 48C141.31 48 48 141.31 48 2=
56s93.31 208 208 208 208-93.31 208-208S370.69 48 256 48zm-50.22 116.82C218.=
45 151.39 236.28 144 256 144s37.39 7.44 50.11 20.94c12.89 13.68 19.16 32.06=
 17.68 51.82C320.83 256 290.43 288 256 288s-64.89-32-67.79-71.25c-1.47-19.9=
2 4.79-38.36 17.57-51.93zM256 432a175.49 175.49 0 01-126-53.22 122.91 122.9=
1 0 0135.14-33.44C190.63 329 222.89 320 256 320s65.37 9 90.83 25.34A122.87 =
122.87 0 01382 378.78 175.45 175.45 0 01256 432z"></path></svg></button></d=
iv></div></div></div></div><div class=3D"dq-flex md:dq-hidden dq-items-cent=
er"><div class=3D"dq-relative"><div><button class=3D"dq-ml-4 dq-flex hover:=
dq-text-gray-600 focus:dq-outline-none focus:dq-ring-2 focus:dq-ring-offset=
-2 focus:dq-ring-blue focus:dq-ring-opacity-50 dark:focus:dq-ring-offset-gr=
ay-700" id=3D"connection-status" aria-haspopup=3D"true" type=3D"button"><sp=
an class=3D"dq-sr-only">Connections status</span><svg stroke=3D"currentColo=
r" fill=3D"currentColor" stroke-width=3D"0" viewBox=3D"0 0 512 512" class=
=3D"dq-h-6 dq-w-6" height=3D"1em" width=3D"1em" xmlns=3D"http://www.w3.org/=
2000/svg"><path d=3D"M464 0H144c-26.5 0-48 21.5-48 48v48H48c-26.5 0-48 21.5=
-48 48v320c0 26.5 21.5 48 48 48h320c26.5 0 48-21.5 48-48v-48h48c26.5 0 48-2=
1.5 48-48V48c0-26.5-21.5-48-48-48zm-96 464H48V256h320v208zm96-96h-48V144c0-=
26.5-21.5-48-48-48H144V48h320v320z"></path></svg></button></div></div></div=
></div></div></nav><div class=3D"dq-h-full dq-relative dq-flex-auto dq-over=
flow-auto"><div class=3D"dq-w-full dq-inset-y-0 dq-absolute" data-test-sele=
ctor=3D"MissionView"><div class=3D"dq-flex dq-flex-col TheMission__root"><d=
iv class=3D"SplitPane TheMission__split_pane vertical " style=3D"display: f=
lex; flex: 1 1 0%; height: 100%; position: absolute; outline: none; overflo=
w: hidden; user-select: text; flex-direction: row; left: 0px; right: 0px;">=
<div class=3D"Pane vertical Pane1  " style=3D"flex: 0 0 auto; position: rel=
ative; outline: none; width: 100%;"><div class=3D"dq-prose dq-prose-lg dq-m=
ax-w-none TheMission__is_interactive"><div class=3D"dq-flex dq-flex-col dq-=
h-full dq-bg-white dark:dq-bg-black dark:dq-text-gray-50"><div class=3D"dq-=
flex-grow"><div class=3D"ScrollAccordion__root"><div class=3D"dq-z-10 Scrol=
lAccordion__top_headers" style=3D"width: 1579px;"><div class=3D"dq-px-6 dq-=
py-2 dq-bg-gray-150 dq-text-gray-600 dq-border-b dq-border-white dark:dq-bg=
-gray-600 dark:dq-text-gray-150 dark:dq-border-black ScrollAccordion__in_he=
ader SidePanelTitle__root" id=3D"onboarding-tip-learn" icon=3D"">Learn</div=
></div><div class=3D"ScrollAccordion__body"><div class=3D"ScrollAccordion__=
section"><div class=3D"dq-px-6 dq-py-2 dq-bg-gray-150 dq-text-gray-600 dq-b=
order-b dq-border-white dark:dq-bg-gray-600 dark:dq-text-gray-150 dark:dq-b=
order-black ScrollAccordion__in_text SidePanelTitle__root" id=3D"" icon=3D"=
" style=3D"opacity: 0;">Learn</div><iframe title=3D"Resize Sensor iFrame" s=
tyle=3D"height: 100%; width: 100%; border: none; background: transparent; p=
osition: absolute; z-index: -1; top: 0px; left: 0px;"></iframe><div class=
=3D"dq-px-8"><div id=3D"body" class=3D"dq-mission-markup MissionLearn__sect=
ion"><div><p>Now we can store the entire tree, instead of the leaf labels o=
nly.  We'll use nested dictionaries to do this.  We can represent the root =
node with a dictionary, and branches with the keys <code>left</code> and <c=
ode>right</code>.  We'll store the column we're splitting on as the key <co=
de>column</code> and the median value as the key <code>median</code>.  Fina=
lly, we can store the label for a leaf as the key <code>label</code>.  We'l=
l also number each node as we go along using the <code>number</code> key.</=
p>
<p>We'll use the same data set we've been working with:</p>
</div><div class=3D"react-codemirror2 dq-editor dq-mb-4 dq-p-2 dq-bg-gray-5=
0 dark:dq-bg-gray-800"><div class=3D"CodeMirror cm-s-default CodeMirror-wra=
p"><div style=3D"overflow: hidden; position: relative; width: 3px; height: =
0px; top: 128px; left: 224.812px;"><textarea autocorrect=3D"off" autocapita=
lize=3D"off" spellcheck=3D"false" readonly=3D"" tabindex=3D"0" style=3D"pos=
ition: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; ou=
tline: none;"></textarea></div><div class=3D"CodeMirror-vscrollbar" tabinde=
x=3D"-1" cm-not-content=3D"true"><div style=3D"min-width: 1px; height: 0px;=
"></div></div><div class=3D"CodeMirror-hscrollbar" tabindex=3D"-1" cm-not-c=
ontent=3D"true"><div style=3D"height: 100%; min-height: 1px; width: 0px;"><=
/div></div><div class=3D"CodeMirror-scrollbar-filler" cm-not-content=3D"tru=
e"></div><div class=3D"CodeMirror-gutter-filler" cm-not-content=3D"true"></=
div><div class=3D"CodeMirror-scroll" tabindex=3D"-1"><div class=3D"CodeMirr=
or-sizer" style=3D"margin-left: 0px; margin-bottom: -21px; border-right-wid=
th: 29px; min-height: 160px; padding-right: 0px; padding-bottom: 0px;"><div=
 style=3D"position: relative; top: 0px;"><div class=3D"CodeMirror-lines" ro=
le=3D"presentation"><div role=3D"presentation" style=3D"position: relative;=
 outline: none;"><div class=3D"CodeMirror-measure"><pre class=3D"CodeMirror=
-line-like"><span>xxxxxxxxxx</span></pre></div><div class=3D"CodeMirror-mea=
sure"></div><div style=3D"position: relative; z-index: 1;"></div><div class=
=3D"CodeMirror-cursors"><div class=3D"CodeMirror-cursor" style=3D"left: 224=
.812px; top: 120px; height: 20px;">&nbsp;</div></div><div class=3D"CodeMirr=
or-code" role=3D"presentation" style=3D""><pre class=3D" CodeMirror-line " =
role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0=
.1px;"><span class=3D"cm-variable">high_income</span> &nbsp; &nbsp;<span cl=
ass=3D"cm-variable">age</span> &nbsp; &nbsp;<span class=3D"cm-variable">mar=
ital_status</span></span></pre><pre class=3D" CodeMirror-line " role=3D"pre=
sentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><spa=
n class=3D"cm-number">0</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &n=
bsp;<span class=3D"cm-number">20</span> &nbsp; &nbsp; <span class=3D"cm-num=
ber">0</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presenta=
tion"><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span cla=
ss=3D"cm-number">0</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<=
span class=3D"cm-number">60</span> &nbsp; &nbsp; <span class=3D"cm-number">=
2</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"=
><span role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D=
"cm-number">0</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span =
class=3D"cm-number">40</span> &nbsp; &nbsp; <span class=3D"cm-number">1</sp=
an></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><spa=
n role=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-n=
umber">1</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=
=3D"cm-number">25</span> &nbsp; &nbsp; <span class=3D"cm-number">1</span></=
span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span rol=
e=3D"presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-number=
">1</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=3D"c=
m-number">35</span> &nbsp; &nbsp; <span class=3D"cm-number">2</span></span>=
</pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"=
presentation" style=3D"padding-right: 0.1px;"><span class=3D"cm-number">1</=
span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=3D"cm-num=
ber">55</span> &nbsp; &nbsp; <span class=3D"cm-number">1</span></span></pre=
></div></div></div></div></div><div style=3D"position: absolute; height: 29=
px; width: 1px; border-bottom: 0px solid transparent; top: 160px;"></div><d=
iv class=3D"CodeMirror-gutters" style=3D"display: none; height: 189px;"></d=
iv></div></div></div><div>
<p>Here's what the dictionary for the decision tree looks like:</p>
</div><div class=3D"react-codemirror2 dq-editor dq-mb-4 dq-p-2 dq-bg-gray-5=
0 dark:dq-bg-gray-800"><div class=3D"CodeMirror cm-s-default CodeMirror-wra=
p"><div style=3D"overflow: hidden; position: relative; width: 3px; height: =
0px; top: 808px; left: 205.609px;"><textarea autocorrect=3D"off" autocapita=
lize=3D"off" spellcheck=3D"false" readonly=3D"" tabindex=3D"0" style=3D"pos=
ition: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; ou=
tline: none;"></textarea></div><div class=3D"CodeMirror-vscrollbar" tabinde=
x=3D"-1" cm-not-content=3D"true" style=3D"bottom: 0px;"><div style=3D"min-w=
idth: 1px; height: 0px;"></div></div><div class=3D"CodeMirror-hscrollbar" t=
abindex=3D"-1" cm-not-content=3D"true"><div style=3D"height: 100%; min-heig=
ht: 1px; width: 0px;"></div></div><div class=3D"CodeMirror-scrollbar-filler=
" cm-not-content=3D"true"></div><div class=3D"CodeMirror-gutter-filler" cm-=
not-content=3D"true"></div><div class=3D"CodeMirror-scroll" tabindex=3D"-1"=
><div class=3D"CodeMirror-sizer" style=3D"margin-left: 0px; margin-bottom: =
-21px; border-right-width: 29px; min-height: 1000px; padding-right: 0px; pa=
dding-bottom: 0px;"><div style=3D"position: relative; top: 0px;"><div class=
=3D"CodeMirror-lines" role=3D"presentation"><div role=3D"presentation" styl=
e=3D"position: relative; outline: none;"><div class=3D"CodeMirror-measure">=
<pre class=3D"CodeMirror-line-like"><span>xxxxxxxxxx</span></pre></div><div=
 class=3D"CodeMirror-measure"></div><div style=3D"position: relative; z-ind=
ex: 1;"></div><div class=3D"CodeMirror-cursors" style=3D""><div class=3D"Co=
deMirror-cursor" style=3D"left: 205.609px; top: 800px; height: 20px;">&nbsp=
;</div></div><div class=3D"CodeMirror-code" role=3D"presentation" style=3D"=
"><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"pres=
entation" style=3D"padding-right: 0.1px;">{ &nbsp;</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"> &nbsp; <span class=3D"cm-string">"left"</spa=
n>:{ &nbsp;</span></pre><pre class=3D" CodeMirror-line " role=3D"presentati=
on"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nb=
sp; &nbsp;<span class=3D"cm-string">"left"</span>:{ &nbsp;</span></pre><pre=
 class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentati=
on" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span clas=
s=3D"cm-string">"left"</span>:{ &nbsp;</span></pre><pre class=3D" CodeMirro=
r-line " role=3D"presentation"><span role=3D"presentation" style=3D"padding=
-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=3D"cm=
-string">"number"</span>:<span class=3D"cm-number">4</span>,</span></pre><p=
re class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presenta=
tion" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &=
nbsp;<span class=3D"cm-string">"label"</span>:<span class=3D"cm-number">0</=
span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><s=
pan role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &n=
bsp; &nbsp; },</span></pre><pre class=3D" CodeMirror-line " role=3D"present=
ation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; =
&nbsp; &nbsp; &nbsp; <span class=3D"cm-string">"column"</span>:<span class=
=3D"cm-string">"age"</span>,</span></pre><pre class=3D" CodeMirror-line " r=
ole=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.=
1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=3D"cm-string">"median"</span=
>:<span class=3D"cm-number">22.5</span>,</span></pre><pre class=3D" CodeMir=
ror-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddi=
ng-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=3D"cm-string">"n=
umber"</span>:<span class=3D"cm-number">3</span>,</span></pre><pre class=3D=
" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=3D"cm-s=
tring">"right"</span>:{ &nbsp;</span></pre><pre class=3D" CodeMirror-line "=
 role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: =
0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=3D"cm-string"=
>"number"</span>:<span class=3D"cm-number">5</span>,</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<sp=
an class=3D"cm-string">"label"</span>:<span class=3D"cm-number">1</span></s=
pan></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nb=
sp; }</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><s=
pan role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp;  }=
,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span =
role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;=
<span class=3D"cm-string">"column"</span>:<span class=3D"cm-string">"age"</=
span>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><=
span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &=
nbsp;<span class=3D"cm-string">"median"</span>:<span class=3D"cm-number">25=
.0</span>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentatio=
n"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbs=
p; &nbsp;<span class=3D"cm-string">"number"</span>:<span class=3D"cm-number=
">2</span>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentati=
on"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nb=
sp; &nbsp;<span class=3D"cm-string">"right"</span>:{ &nbsp;</span></pre><pr=
e class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentat=
ion" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span cla=
ss=3D"cm-string">"number"</span>:<span class=3D"cm-number">6</span>,</span>=
</pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"=
presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; =
<span class=3D"cm-string">"label"</span>:<span class=3D"cm-number">1</span>=
</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span r=
ole=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp;  }</spa=
n></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=
=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; },</span></pre><p=
re class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presenta=
tion" style=3D"padding-right: 0.1px;"> &nbsp; <span class=3D"cm-string">"co=
lumn"</span>:<span class=3D"cm-string">"age"</span>,</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"> &nbsp; <span class=3D"cm-string">"median"</s=
pan>:<span class=3D"cm-number">37.5</span>,</span></pre><pre class=3D" Code=
Mirror-line " role=3D"presentation"><span role=3D"presentation" style=3D"pa=
dding-right: 0.1px;"> &nbsp; <span class=3D"cm-string">"number"</span>:<spa=
n class=3D"cm-number">1</span>,</span></pre><pre class=3D" CodeMirror-line =
" role=3D"presentation"><span role=3D"presentation" style=3D"padding-right:=
 0.1px;"> &nbsp; <span class=3D"cm-string">"right"</span>:{ &nbsp;</span></=
pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"pr=
esentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span clas=
s=3D"cm-string">"left"</span>:{ &nbsp;</span></pre><pre class=3D" CodeMirro=
r-line " role=3D"presentation"><span role=3D"presentation" style=3D"padding=
-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=3D"cm-string">"lef=
t"</span>:{ &nbsp;</span></pre><pre class=3D" CodeMirror-line " role=3D"pre=
sentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nb=
sp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=3D"cm-string">"number"</s=
pan>:<span class=3D"cm-number">9</span>,</span></pre><pre class=3D" CodeMir=
ror-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddi=
ng-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=3D"=
cm-string">"label"</span>:<span class=3D"cm-number">0</span></span></pre><p=
re class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presenta=
tion" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; },</span=
></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D=
"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;=
 <span class=3D"cm-string">"column"</span>:<span class=3D"cm-string">"age"<=
/span>,</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation">=
<span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; =
&nbsp; &nbsp; <span class=3D"cm-string">"median"</span>:<span class=3D"cm-n=
umber">47.5</span>,</span></pre><pre class=3D" CodeMirror-line " role=3D"pr=
esentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &n=
bsp; &nbsp; &nbsp; &nbsp; <span class=3D"cm-string">"number"</span>:<span c=
lass=3D"cm-number">8</span>,</span></pre><pre class=3D" CodeMirror-line " r=
ole=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.=
1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=3D"cm-string">"right"</span>=
:{ &nbsp;</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation=
"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp=
; &nbsp; &nbsp; &nbsp; &nbsp;<span class=3D"cm-string">"number"</span>:<spa=
n class=3D"cm-number">10</span>,</span></pre><pre class=3D" CodeMirror-line=
 " role=3D"presentation"><span role=3D"presentation" style=3D"padding-right=
: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class=3D"cm-strin=
g">"label"</span>:<span class=3D"cm-number">1</span></span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; }</span></pre><p=
re class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presenta=
tion" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp;  },</span></pre><pre c=
lass=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation=
" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class=3D"cm-st=
ring">"column"</span>:<span class=3D"cm-string">"age"</span>,</span></pre><=
pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"present=
ation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class=3D"=
cm-string">"median"</span>:<span class=3D"cm-number">55.0</span>,</span></p=
re><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"pre=
sentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span class=
=3D"cm-string">"number"</span>:<span class=3D"cm-number">7</span>,</span></=
pre><pre class=3D" CodeMirror-line " role=3D"presentation"><span role=3D"pr=
esentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp;<span clas=
s=3D"cm-string">"right"</span>:{ &nbsp;</span></pre><pre class=3D" CodeMirr=
or-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddin=
g-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=3D"cm-string">"nu=
mber"</span>:<span class=3D"cm-number">11</span>,</span></pre><pre class=3D=
" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp; <span class=3D"cm-s=
tring">"label"</span>:<span class=3D"cm-number">0</span></span></pre><pre c=
lass=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation=
" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp;  }</span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"> &nbsp; }</span></pre><pre class=3D" CodeMirr=
or-line " role=3D"presentation"><span role=3D"presentation" style=3D"paddin=
g-right: 0.1px;">}</span></pre></div></div></div></div></div><div style=3D"=
position: absolute; height: 29px; width: 1px; border-bottom: 0px solid tran=
sparent; top: 1000px;"></div><div class=3D"CodeMirror-gutters" style=3D"dis=
play: none; height: 1029px;"></div></div></div></div><div>
<p>If we look at node 2 (the left branch of the root node), it matches the =
hand exercise we completed a few screens ago.  It splits, creating a right =
branch (node 6) with the label 1 and a left branch (node 3) that splits aga=
in.</p>
<p>In order to keep track of the tree, we'll need to make some modification=
s to <code>id3()</code>.  The first modification involves changing the defi=
nition to pass in the <code>tree</code> dictionary:</p>
</div><div class=3D"react-codemirror2 dq-editor dq-mb-4 dq-p-2 dq-bg-gray-5=
0 dark:dq-bg-gray-800"><div class=3D"CodeMirror cm-s-default CodeMirror-wra=
p"><div style=3D"overflow: hidden; position: relative; width: 3px; height: =
0px; top: 308px; left: 167.219px;"><textarea autocorrect=3D"off" autocapita=
lize=3D"off" spellcheck=3D"false" readonly=3D"" tabindex=3D"0" style=3D"pos=
ition: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; ou=
tline: none;"></textarea></div><div class=3D"CodeMirror-vscrollbar" tabinde=
x=3D"-1" cm-not-content=3D"true" style=3D"bottom: 0px;"><div style=3D"min-w=
idth: 1px; height: 0px;"></div></div><div class=3D"CodeMirror-hscrollbar" t=
abindex=3D"-1" cm-not-content=3D"true"><div style=3D"height: 100%; min-heig=
ht: 1px; width: 0px;"></div></div><div class=3D"CodeMirror-scrollbar-filler=
" cm-not-content=3D"true"></div><div class=3D"CodeMirror-gutter-filler" cm-=
not-content=3D"true"></div><div class=3D"CodeMirror-scroll" tabindex=3D"-1"=
><div class=3D"CodeMirror-sizer" style=3D"margin-left: 0px; margin-bottom: =
-21px; border-right-width: 29px; min-height: 340px; padding-right: 0px; pad=
ding-bottom: 0px;"><div style=3D"position: relative; top: 0px;"><div class=
=3D"CodeMirror-lines" role=3D"presentation"><div role=3D"presentation" styl=
e=3D"position: relative; outline: none;"><div class=3D"CodeMirror-measure">=
<pre class=3D"CodeMirror-line-like"><span>xxxxxxxxxx</span></pre></div><div=
 class=3D"CodeMirror-measure"></div><div style=3D"position: relative; z-ind=
ex: 1;"></div><div class=3D"CodeMirror-cursors"><div class=3D"CodeMirror-cu=
rsor" style=3D"left: 167.219px; top: 300px; height: 20px;">&nbsp;</div></di=
v><div class=3D"CodeMirror-code" role=3D"presentation" style=3D""><pre clas=
s=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" s=
tyle=3D"padding-right: 0.1px;"><span class=3D"cm-keyword">def</span> <span =
class=3D"cm-def">id3</span>(<span class=3D"cm-variable">data</span>, <span =
class=3D"cm-variable">target</span>, <span class=3D"cm-variable">columns</s=
pan>, <span class=3D"cm-variable">tree</span>)</span></pre><pre class=3D" C=
odeMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D=
"padding-right: 0.1px;"> &nbsp; &nbsp;<span class=3D"cm-number">1</span> <s=
pan class=3D"cm-variable">Create</span> <span class=3D"cm-variable">a</span=
> <span class=3D"cm-variable">node</span> <span class=3D"cm-keyword">for</s=
pan> <span class=3D"cm-variable">the</span> <span class=3D"cm-variable">tre=
e</span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"=
><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp;=
<span class=3D"cm-number">2</span> <span class=3D"cm-variable">Number</span=
> <span class=3D"cm-variable">the</span> <span class=3D"cm-variable">node</=
span></span></pre><pre class=3D" CodeMirror-line " role=3D"presentation"><s=
pan role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp;<sp=
an class=3D"cm-number">3</span> <span class=3D"cm-variable">If</span> <span=
 class=3D"cm-builtin">all</span> <span class=3D"cm-variable">of</span> <spa=
n class=3D"cm-variable">the</span> <span class=3D"cm-variable">values</span=
> <span class=3D"cm-variable">of</span> <span class=3D"cm-variable">the</sp=
an> <span class=3D"cm-variable">target</span> <span class=3D"cm-variable">a=
ttribute</span> <span class=3D"cm-variable">are</span> <span class=3D"cm-nu=
mber">1</span>, <span class=3D"cm-variable">assign</span> <span class=3D"cm=
-number">1</span> <span class=3D"cm-variable">to</span> <span class=3D"cm-v=
ariable">the</span> <span class=3D"cm-variable">label</span> <span class=3D=
"cm-variable">key</span> <span class=3D"cm-keyword">in</span> <span class=
=3D"cm-variable">tree</span></span></pre><pre class=3D" CodeMirror-line " r=
ole=3D"presentation"><span role=3D"presentation" style=3D"padding-right: 0.=
1px;"> &nbsp; &nbsp;<span class=3D"cm-number">4</span> <span class=3D"cm-va=
riable">If</span> <span class=3D"cm-builtin">all</span> <span class=3D"cm-v=
ariable">of</span> <span class=3D"cm-variable">the</span> <span class=3D"cm=
-variable">values</span> <span class=3D"cm-variable">of</span> <span class=
=3D"cm-variable">the</span> <span class=3D"cm-variable">target</span> <span=
 class=3D"cm-variable">attribute</span> <span class=3D"cm-variable">are</sp=
an> <span class=3D"cm-number">0</span>, <span class=3D"cm-variable">assign<=
/span> <span class=3D"cm-number">0</span> <span class=3D"cm-variable">to</s=
pan> <span class=3D"cm-variable">the</span> <span class=3D"cm-variable">lab=
el</span> <span class=3D"cm-variable">key</span> <span class=3D"cm-keyword"=
>in</span> <span class=3D"cm-variable">tree</span></span></pre><pre class=
=3D" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" st=
yle=3D"padding-right: 0.1px;"> &nbsp; &nbsp;<span class=3D"cm-number">5</sp=
an> <span class=3D"cm-variable">Using</span> <span class=3D"cm-variable">in=
formation</span> <span class=3D"cm-variable">gain</span>, <span class=3D"cm=
-variable">find</span> <span class=3D"cm-variable">A</span>, <span class=3D=
"cm-variable">the</span> <span class=3D"cm-variable">column</span> <span cl=
ass=3D"cm-variable">that</span> <span class=3D"cm-variable">splits</span> <=
span class=3D"cm-variable">the</span> <span class=3D"cm-variable">data</spa=
n> <span class=3D"cm-variable">best</span></span></pre><pre class=3D" CodeM=
irror-line " role=3D"presentation"><span role=3D"presentation" style=3D"pad=
ding-right: 0.1px;"> &nbsp; &nbsp;<span class=3D"cm-number">6</span> <span =
class=3D"cm-variable">Find</span> <span class=3D"cm-variable">the</span> <s=
pan class=3D"cm-variable">median</span> <span class=3D"cm-variable">value</=
span> <span class=3D"cm-keyword">in</span> <span class=3D"cm-variable">colu=
mn</span> <span class=3D"cm-variable">A</span></span></pre><pre class=3D" C=
odeMirror-line " role=3D"presentation"><span role=3D"presentation" style=3D=
"padding-right: 0.1px;"> &nbsp; &nbsp;<span class=3D"cm-number">7</span> <s=
pan class=3D"cm-variable">Assign</span> <span class=3D"cm-variable">the</sp=
an> <span class=3D"cm-variable">column</span> <span class=3D"cm-keyword">an=
d</span> <span class=3D"cm-variable">median</span> <span class=3D"cm-variab=
le">keys</span> <span class=3D"cm-keyword">in</span> <span class=3D"cm-vari=
able">tree</span></span></pre><pre class=3D" CodeMirror-line " role=3D"pres=
entation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbs=
p; &nbsp;<span class=3D"cm-number">8</span> <span class=3D"cm-variable">Spl=
it</span> <span class=3D"cm-variable">A</span> <span class=3D"cm-variable">=
into</span> <span class=3D"cm-variable">values</span> <span class=3D"cm-var=
iable">less</span> <span class=3D"cm-variable">than</span> <span class=3D"c=
m-keyword">or</span> <span class=3D"cm-variable">equal</span> <span class=
=3D"cm-variable">to</span> <span class=3D"cm-variable">the</span> <span cla=
ss=3D"cm-variable">median</span> (<span class=3D"cm-number">0</span>), <spa=
n class=3D"cm-keyword">and</span> <span class=3D"cm-variable">values</span>=
 <span class=3D"cm-variable">above</span> <span class=3D"cm-variable">the</=
span> <span class=3D"cm-variable">median</span> (<span class=3D"cm-number">=
1</span>)</span></pre><pre class=3D" CodeMirror-line " role=3D"presentation=
"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp; &nbsp=
;<span class=3D"cm-number">9</span> <span class=3D"cm-variable">For</span> =
<span class=3D"cm-variable">each</span> <span class=3D"cm-variable">possibl=
e</span> <span class=3D"cm-variable">value</span> (<span class=3D"cm-number=
">0</span> <span class=3D"cm-keyword">or</span> <span class=3D"cm-number">1=
</span>), <span class=3D"cm-variable">vi</span>, <span class=3D"cm-variable=
">of</span> <span class=3D"cm-variable">A</span>,</span></pre><pre class=3D=
" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"> &nbsp; <span class=3D"cm-number cm-error">10</s=
pan> &nbsp; &nbsp;<span class=3D"cm-variable">Add</span> <span class=3D"cm-=
variable">a</span> <span class=3D"cm-variable">new</span> <span class=3D"cm=
-variable">tree</span> <span class=3D"cm-variable">branch</span> <span clas=
s=3D"cm-variable">below</span> <span class=3D"cm-variable">Root</span> <spa=
n class=3D"cm-variable">that</span> <span class=3D"cm-variable">corresponds=
</span> <span class=3D"cm-variable">to</span> <span class=3D"cm-variable">r=
ows</span> <span class=3D"cm-variable">of</span> <span class=3D"cm-variable=
">data</span> <span class=3D"cm-variable">where</span> <span class=3D"cm-va=
riable">A</span> <span class=3D"cm-operator">=3D</span> <span class=3D"cm-v=
ariable">vi</span></span></pre><pre class=3D" CodeMirror-line " role=3D"pre=
sentation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nb=
sp; <span class=3D"cm-number">11</span> &nbsp; &nbsp;<span class=3D"cm-vari=
able">Let</span> <span class=3D"cm-variable">Examples</span>(<span class=3D=
"cm-variable">vi</span>) <span class=3D"cm-variable">be</span> <span class=
=3D"cm-variable">the</span> <span class=3D"cm-variable">subset</span> <span=
 class=3D"cm-variable">of</span> <span class=3D"cm-variable">examples</span=
> <span class=3D"cm-variable">that</span> <span class=3D"cm-variable">have<=
/span> <span class=3D"cm-variable">the</span> <span class=3D"cm-variable">v=
alue</span> <span class=3D"cm-variable">vi</span> <span class=3D"cm-keyword=
">for</span> <span class=3D"cm-variable">A</span></span></pre><pre class=3D=
" CodeMirror-line " role=3D"presentation"><span role=3D"presentation" style=
=3D"padding-right: 0.1px;"> &nbsp; <span class=3D"cm-number cm-error">12</s=
pan> &nbsp; &nbsp;<span class=3D"cm-variable">Create</span> <span class=3D"=
cm-variable">a</span> <span class=3D"cm-variable">new</span> <span class=3D=
"cm-variable">key</span> <span class=3D"cm-keyword">with</span> <span class=
=3D"cm-variable">the</span> <span class=3D"cm-variable">name</span> <span c=
lass=3D"cm-variable">corresponding</span> <span class=3D"cm-variable">to</s=
pan> <span class=3D"cm-variable">the</span> <span class=3D"cm-variable">sid=
e</span> <span class=3D"cm-variable">of</span> <span class=3D"cm-variable">=
the</span> <span class=3D"cm-variable">split</span> (<span class=3D"cm-numb=
er">0</span><span class=3D"cm-operator">=3D</span><span class=3D"cm-variabl=
e">left</span>, <span class=3D"cm-number">1</span><span class=3D"cm-operato=
r">=3D</span><span class=3D"cm-variable">right</span>). &nbsp;<span class=
=3D"cm-property">The</span> <span class=3D"cm-variable">value</span> <span =
class=3D"cm-variable">of</span> <span class=3D"cm-variable">this</span> <sp=
an class=3D"cm-variable">key</span> <span class=3D"cm-variable">should</spa=
n> <span class=3D"cm-variable">be</span> <span class=3D"cm-variable">an</sp=
an> <span class=3D"cm-variable">empty</span> <span class=3D"cm-variable">di=
ctionary</span>.</span></pre><pre class=3D" CodeMirror-line " role=3D"prese=
ntation"><span role=3D"presentation" style=3D"padding-right: 0.1px;"> &nbsp=
; <span class=3D"cm-number">13</span> &nbsp; &nbsp;<span class=3D"cm-variab=
le">Below</span> <span class=3D"cm-variable">this</span> <span class=3D"cm-=
variable">new</span> <span class=3D"cm-variable">branch</span>, <span class=
=3D"cm-variable">add</span> <span class=3D"cm-variable">the</span> <span cl=
ass=3D"cm-variable">subtree</span> <span class=3D"cm-variable">id3</span>(<=
span class=3D"cm-variable">data</span>[<span class=3D"cm-variable">A</span>=
<span class=3D"cm-operator">=3D=3D</span><span class=3D"cm-variable">vi</sp=
an>], <span class=3D"cm-variable">target</span>, <span class=3D"cm-variable=
">columns</span>, <span class=3D"cm-variable">tree</span>[<span class=3D"cm=
-variable">split_side</span>])</span></pre><pre class=3D" CodeMirror-line "=
 role=3D"presentation"><span role=3D"presentation" style=3D"padding-right: =
0.1px;"> &nbsp; <span class=3D"cm-number cm-error">14</span> <span class=3D=
"cm-variable">Return</span> <span class=3D"cm-variable">Root</span></span><=
/pre></div></div></div></div></div><div style=3D"position: absolute; height=
: 29px; width: 1px; border-bottom: 0px solid transparent; top: 340px;"></di=
v><div class=3D"CodeMirror-gutters" style=3D"display: none; height: 369px;"=
></div></div></div></div><div>
<p>Under this approach, we're now passing the <code>tree</code> dictionary =
into our <code>id3</code> function and setting some keys on it.  One comple=
xity is in how we're creating the nested dictionary.  For the left split, w=
e're adding a key to the <code>tree</code> dictionary that looks like this:=
</p>
<p><code>tree["left"] =3D {}</code></p>
<p>For the right side, we're adding: </p>
<p><code>tree["right"] =3D {}</code> </p>
<p>Now that we've added this key, we're able to pass our new dictionary int=
o the recursive call to <code>id3()</code>.  While this new dictionary will=
 be the dictionary for that specific node, it will be tied back to the pare=
nt dictionary (because it's a key of the original dictionary).</p>
<p>This process continues building up the nested dictionary.  We'll be able=
 to access the entire dictionary using the variable <code>tree</code> we de=
fine before the function.  Think of each recursive call as building a piece=
 of the tree, which we can then access after all of the functions have term=
inated.</p></div></div></div></div></div><div class=3D"dq-z-10 ScrollAccord=
ion__bottom_headers" style=3D"width: 1579px;"></div></div></div></div></div=
></div><span role=3D"presentation" class=3D"Resizer vertical "></span><div =
class=3D"Pane vertical Pane2  " style=3D"flex: 1 1 0%; position: relative; =
outline: none;"><div class=3D"dq-dark TheMission__is_interactive"></div></d=
iv></div><div class=3D"dq-grid dq-grid-cols-5 dq-px-4 dq-py-3 dq-text-white=
 dq-bg-gray-700"><div class=3D"dq-col-span-1 md:dq-col-span-2 dq-group dq-f=
lex dq-gap-4 dq-items-center"><svg stroke=3D"currentColor" fill=3D"currentC=
olor" stroke-width=3D"0" viewBox=3D"0 0 512 512" class=3D"dq-transition-col=
ors group-hover:dq-text-green" height=3D"1em" width=3D"1em" xmlns=3D"http:/=
/www.w3.org/2000/svg"><path d=3D"M64 384h384v-42.67H64zm0-106.67h384v-42.66=
H64zM64 128v42.67h384V128z"></path></svg><div class=3D"dq-hidden md:dq-bloc=
k">6. Storing the Tree</div></div><div class=3D"dq-col-span-4 md:dq-col-spa=
n-2 xl:dq-col-span-1 dq-flex dq-justify-center xl:dq-justify-between dq-ite=
ms-center" data-test-selector=3D"MissionFooterNavigation"><button title=3D"=
[alt+b] Back a Screen" type=3D"" data-test-selector=3D"" class=3D"dq-transi=
tion-all dq-border dq-border-transparent dq-bg-transparent dq-text-base !dq=
-text-sm dq-rounded-btn DqButton__main DqButton__capitalize DqButton__short=
 DqButton__white DqButton__on_dark DqButton__hollow"><span class=3D"dq-tran=
sition-colors DqButton__text">back</span></button><div class=3D"dq-px-6">6 =
/ 13</div><button title=3D"[alt+n] Next Screen" type=3D"" data-test-selecto=
r=3D"MissionFooterNextBtn" class=3D"dq-transition-all dq-border dq-border-t=
ransparent dq-bg-transparent dq-text-base !dq-text-sm dq-rounded-btn DqButt=
on__main DqButton__capitalize DqButton__short DqButton__white DqButton__on_=
dark DqButton__hollow"><span class=3D"dq-transition-colors DqButton__text">=
Next</span></button></div></div></div></div></div></div><div></div></div></=
div>
</body></html>
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-7e5fd711-88d4-4dfd-a029-9dfd4bf922d6@mhtml.blink

@charset "utf-8";

.grecaptcha-badge { visibility: collapse !important; }

.ant-form-explain { color: red; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-0523dca7-10a9-4971-93b6-028f35d25921@mhtml.blink

@charset "utf-8";

.tk-source-sans-pro { font-family: source-sans-pro, sans-serif; }

.tk-source-code-pro { font-family: source-code-pro, monospace; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-8440e048-3abe-4899-b3e4-2944790137f3@mhtml.blink

@charset "utf-8";

@font-face { font-family: tk-source-sans-pro-n4; src: url("https://use.type=
kit.net/af/61f808/00000000000000003b9b3d63/27/l?primer=3D7cdcb44be4a7db8877=
ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("wof=
f2"), url("https://use.typekit.net/af/61f808/00000000000000003b9b3d63/27/d?=
primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&f=
vd=3Dn4&v=3D3") format("woff"), url("https://use.typekit.net/af/61f808/0000=
0000000000003b9b3d63/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc3=
83831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-weight: =
400; font-style: normal; font-display: auto; }

@font-face { font-family: tk-source-sans-pro-n7; src: url("https://use.type=
kit.net/af/422d60/00000000000000003b9b3d67/27/l?primer=3D7cdcb44be4a7db8877=
ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("wof=
f2"), url("https://use.typekit.net/af/422d60/00000000000000003b9b3d67/27/d?=
primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&f=
vd=3Dn7&v=3D3") format("woff"), url("https://use.typekit.net/af/422d60/0000=
0000000000003b9b3d67/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc3=
83831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-weight: =
700; font-style: normal; font-display: auto; }

@font-face { font-family: tk-source-sans-pro-i7; src: url("https://use.type=
kit.net/af/9373a0/00000000000000003b9b3d68/27/l?primer=3D7cdcb44be4a7db8877=
ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di7&v=3D3") format("wof=
f2"), url("https://use.typekit.net/af/9373a0/00000000000000003b9b3d68/27/d?=
primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&f=
vd=3Di7&v=3D3") format("woff"), url("https://use.typekit.net/af/9373a0/0000=
0000000000003b9b3d68/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc3=
83831fe2ea177f62257a9191&fvd=3Di7&v=3D3") format("opentype"); font-weight: =
700; font-style: italic; font-display: auto; }

@font-face { font-family: tk-source-sans-pro-i4; src: url("https://use.type=
kit.net/af/ffb1e2/00000000000000003b9b3d64/27/l?primer=3D7cdcb44be4a7db8877=
ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("wof=
f2"), url("https://use.typekit.net/af/ffb1e2/00000000000000003b9b3d64/27/d?=
primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&f=
vd=3Di4&v=3D3") format("woff"), url("https://use.typekit.net/af/ffb1e2/0000=
0000000000003b9b3d64/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc3=
83831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-weight: =
400; font-style: italic; font-display: auto; }

@font-face { font-family: tk-source-code-pro-n7; src: url("https://use.type=
kit.net/af/826d1b/00000000000000007735dc09/30/l?primer=3D7cdcb44be4a7db8877=
ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("wof=
f2"), url("https://use.typekit.net/af/826d1b/00000000000000007735dc09/30/d?=
primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&f=
vd=3Dn7&v=3D3") format("woff"), url("https://use.typekit.net/af/826d1b/0000=
0000000000007735dc09/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc3=
83831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-weight: =
700; font-style: normal; font-display: auto; }

@font-face { font-family: tk-source-code-pro-n4; src: url("https://use.type=
kit.net/af/398a64/00000000000000007735dc06/30/l?primer=3D7cdcb44be4a7db8877=
ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("wof=
f2"), url("https://use.typekit.net/af/398a64/00000000000000007735dc06/30/d?=
primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&f=
vd=3Dn4&v=3D3") format("woff"), url("https://use.typekit.net/af/398a64/0000=
0000000000007735dc06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc3=
83831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-weight: =
400; font-style: normal; font-display: auto; }

@font-face { font-family: tk-source-code-pro-i7; src: url("https://use.type=
kit.net/af/934b0c/00000000000000007735dbfd/30/l?primer=3D7cdcb44be4a7db8877=
ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di7&v=3D3") format("wof=
f2"), url("https://use.typekit.net/af/934b0c/00000000000000007735dbfd/30/d?=
primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&f=
vd=3Di7&v=3D3") format("woff"), url("https://use.typekit.net/af/934b0c/0000=
0000000000007735dbfd/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc3=
83831fe2ea177f62257a9191&fvd=3Di7&v=3D3") format("opentype"); font-weight: =
700; font-style: italic; font-display: auto; }

@font-face { font-family: tk-source-code-pro-i4; src: url("https://use.type=
kit.net/af/b0fedd/00000000000000007735dc01/30/l?primer=3D7cdcb44be4a7db8877=
ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("wof=
f2"), url("https://use.typekit.net/af/b0fedd/00000000000000007735dc01/30/d?=
primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&f=
vd=3Di4&v=3D3") format("woff"), url("https://use.typekit.net/af/b0fedd/0000=
0000000000007735dc01/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc3=
83831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-weight: =
400; font-style: italic; font-display: auto; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-cfc3cd89-2d84-49ae-98b5-478e87363234@mhtml.blink

@charset "utf-8";

@font-face { font-family: source-sans-pro; src: url("https://use.typekit.ne=
t/af/61f808/00000000000000003b9b3d63/27/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/61f808/00000000000000003b9b3d63/27/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/61f808/0000000000=
0000003b9b3d63/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-weight: 400; f=
ont-style: normal; font-display: auto; }

@font-face { font-family: source-sans-pro; src: url("https://use.typekit.ne=
t/af/422d60/00000000000000003b9b3d67/27/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/422d60/00000000000000003b9b3d67/27/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn=
7&v=3D3") format("woff"), url("https://use.typekit.net/af/422d60/0000000000=
0000003b9b3d67/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-weight: 700; f=
ont-style: normal; font-display: auto; }

@font-face { font-family: source-sans-pro; src: url("https://use.typekit.ne=
t/af/9373a0/00000000000000003b9b3d68/27/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di7&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/9373a0/00000000000000003b9b3d68/27/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di=
7&v=3D3") format("woff"), url("https://use.typekit.net/af/9373a0/0000000000=
0000003b9b3d68/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Di7&v=3D3") format("opentype"); font-weight: 700; f=
ont-style: italic; font-display: auto; }

@font-face { font-family: source-sans-pro; src: url("https://use.typekit.ne=
t/af/ffb1e2/00000000000000003b9b3d64/27/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/ffb1e2/00000000000000003b9b3d64/27/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/ffb1e2/0000000000=
0000003b9b3d64/27/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-weight: 400; f=
ont-style: italic; font-display: auto; }

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/826d1b/00000000000000007735dc09/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn7&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/826d1b/00000000000000007735dc09/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn=
7&v=3D3") format("woff"), url("https://use.typekit.net/af/826d1b/0000000000=
0000007735dc09/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Dn7&v=3D3") format("opentype"); font-weight: 700; f=
ont-style: normal; font-display: auto; }

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/398a64/00000000000000007735dc06/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/398a64/00000000000000007735dc06/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Dn=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/398a64/0000000000=
0000007735dc06/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Dn4&v=3D3") format("opentype"); font-weight: 400; f=
ont-style: normal; font-display: auto; }

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/934b0c/00000000000000007735dbfd/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di7&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/934b0c/00000000000000007735dbfd/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di=
7&v=3D3") format("woff"), url("https://use.typekit.net/af/934b0c/0000000000=
0000007735dbfd/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Di7&v=3D3") format("opentype"); font-weight: 700; f=
ont-style: italic; font-display: auto; }

@font-face { font-family: source-code-pro; src: url("https://use.typekit.ne=
t/af/b0fedd/00000000000000007735dc01/30/l?primer=3D7cdcb44be4a7db8877ffa5c0=
007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di4&v=3D3") format("woff2"), =
url("https://use.typekit.net/af/b0fedd/00000000000000007735dc01/30/d?primer=
=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831fe2ea177f62257a9191&fvd=3Di=
4&v=3D3") format("woff"), url("https://use.typekit.net/af/b0fedd/0000000000=
0000007735dc01/30/a?primer=3D7cdcb44be4a7db8877ffa5c0007b8dd865b3bbc383831f=
e2ea177f62257a9191&fvd=3Di4&v=3D3") format("opentype"); font-weight: 400; f=
ont-style: italic; font-display: auto; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-9d132a9f-6fe1-47d4-b8f8-d95592e2bbf9@mhtml.blink

@charset "utf-8";

.MathJax_Hover_Frame { border-radius: 0.25em; box-shadow: rgb(136, 51, 170)=
 0px 0px 15px; display: inline-block; position: absolute; border: 1px solid=
 rgb(170, 102, 221) !important; }

.MathJax_Menu_Button .MathJax_Hover_Arrow { position: absolute; cursor: poi=
nter; display: inline-block; border: 2px solid rgb(170, 170, 170); border-r=
adius: 4px; font-family: "Courier New", Courier; font-size: 9px; color: rgb=
(240, 240, 240); }

.MathJax_Menu_Button .MathJax_Hover_Arrow span { display: block; background=
-color: rgb(170, 170, 170); border: 1px solid; border-radius: 3px; line-hei=
ght: 0; padding: 4px; }

.MathJax_Hover_Arrow:hover { color: white !important; border: 2px solid rgb=
(204, 204, 204) !important; }

.MathJax_Hover_Arrow:hover span { background-color: rgb(204, 204, 204) !imp=
ortant; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-274d487c-01eb-4041-a1e3-45cd78055502@mhtml.blink

@charset "utf-8";

#MathJax_About { position: fixed; left: 50%; width: auto; text-align: cente=
r; border: 3px outset; padding: 1em 2em; background-color: rgb(221, 221, 22=
1); color: black; cursor: default; font-family: message-box; font-size: 120=
%; font-style: normal; text-indent: 0px; text-transform: none; line-height:=
 normal; letter-spacing: normal; word-spacing: normal; overflow-wrap: norma=
l; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; box=
-shadow: rgb(128, 128, 128) 0px 10px 20px; }

#MathJax_About.MathJax_MousePost { outline: none; }

.MathJax_Menu { position: absolute; background-color: white; color: black; =
width: auto; padding: 2px; border: 1px solid rgb(204, 204, 204); margin: 0p=
x; cursor: default; font: 400 12px "Segoe UI"; text-align: left; text-inden=
t: 0px; text-transform: none; letter-spacing: normal; word-spacing: normal;=
 overflow-wrap: normal; white-space: nowrap; float: none; z-index: 201; box=
-shadow: rgb(128, 128, 128) 0px 10px 20px; }

.MathJax_MenuItem { padding: 2px 2em; background: transparent; }

.MathJax_MenuArrow { position: absolute; right: 0.5em; padding-top: 0.25em;=
 color: rgb(102, 102, 102); font-size: 0.75em; }

.MathJax_MenuActive .MathJax_MenuArrow { color: white; }

.MathJax_MenuArrow.RTL { left: 0.5em; right: auto; }

.MathJax_MenuCheck { position: absolute; left: 0.7em; }

.MathJax_MenuCheck.RTL { right: 0.7em; left: auto; }

.MathJax_MenuRadioCheck { position: absolute; left: 1em; }

.MathJax_MenuRadioCheck.RTL { right: 1em; left: auto; }

.MathJax_MenuLabel { padding: 2px 2em 4px 1.33em; font-style: italic; }

.MathJax_MenuRule { border-top: 1px solid rgb(204, 204, 204); margin: 4px 1=
px 0px; }

.MathJax_MenuDisabled { color: graytext; }

.MathJax_MenuActive { background-color: highlight; color: highlighttext; }

.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus { background-color: r=
gb(232, 232, 232); }

.MathJax_ContextMenu:focus { outline: none; }

.MathJax_ContextMenu .MathJax_MenuItem:focus { outline: none; }

#MathJax_AboutClose { top: 0.2em; right: 0.2em; }

.MathJax_Menu .MathJax_MenuClose { top: -10px; left: -10px; }

.MathJax_MenuClose { position: absolute; cursor: pointer; display: inline-b=
lock; border: 2px solid rgb(170, 170, 170); border-radius: 18px; font-famil=
y: "Courier New", Courier; font-size: 24px; color: rgb(240, 240, 240); }

.MathJax_MenuClose span { display: block; background-color: rgb(170, 170, 1=
70); border: 1.5px solid; border-radius: 18px; line-height: 0; padding: 8px=
 0px 6px; }

.MathJax_MenuClose:hover { color: white !important; border: 2px solid rgb(2=
04, 204, 204) !important; }

.MathJax_MenuClose:hover span { background-color: rgb(204, 204, 204) !impor=
tant; }

.MathJax_MenuClose:hover:focus { outline: none; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-be4b3e53-2876-4914-971a-0970c8d01a63@mhtml.blink

@charset "utf-8";

.MathJax_Preview .MJXf-math { color: inherit !important; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-3d3c15be-70f2-4463-ac17-7f0f2f203328@mhtml.blink

@charset "utf-8";

.MJX_Assistive_MathML { top: 0px; left: 0px; clip: rect(1px, 1px, 1px, 1px)=
; user-select: none; position: absolute !important; padding: 1px 0px 0px !i=
mportant; border: 0px !important; height: 1px !important; width: 1px !impor=
tant; overflow: hidden !important; display: block !important; }

.MJX_Assistive_MathML.MJX_Assistive_MathML_Block { width: 100% !important; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-89becc69-433d-4b07-9d92-fab4e80d1969@mhtml.blink

@charset "utf-8";

#MathJax_Zoom { position: absolute; background-color: rgb(240, 240, 240); o=
verflow: auto; display: block; z-index: 301; padding: 0.5em; border: 1px so=
lid black; margin: 0px; font-weight: normal; font-style: normal; text-align=
: left; text-indent: 0px; text-transform: none; line-height: normal; letter=
-spacing: normal; word-spacing: normal; overflow-wrap: normal; white-space:=
 nowrap; float: none; box-sizing: content-box; box-shadow: rgb(170, 170, 17=
0) 5px 5px 15px; }

#MathJax_ZoomOverlay { position: absolute; left: 0px; top: 0px; z-index: 30=
0; display: inline-block; width: 100%; height: 100%; border: 0px; padding: =
0px; margin: 0px; background-color: white; opacity: 0; }

#MathJax_ZoomFrame { position: relative; display: inline-block; height: 0px=
; width: 0px; }

#MathJax_ZoomEventTrap { position: absolute; left: 0px; top: 0px; z-index: =
302; display: inline-block; border: 0px; padding: 0px; margin: 0px; backgro=
und-color: white; opacity: 0; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-576f4bc7-0667-46ec-978d-794e91a5ec0f@mhtml.blink

@charset "utf-8";

.MathJax_Preview { color: rgb(136, 136, 136); }

#MathJax_Message { position: fixed; left: 1em; bottom: 1.5em; background-co=
lor: rgb(230, 230, 230); border: 1px solid rgb(149, 149, 149); margin: 0px;=
 padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto;=
 white-space: nowrap; }

#MathJax_MSIE_Frame { position: absolute; top: 0px; left: 0px; width: 0px; =
z-index: 101; border: 0px; margin: 0px; padding: 0px; }

.MathJax_Error { color: rgb(204, 0, 0); font-style: italic; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: cid:css-2d431c62-705d-42bb-8f84-1a4b4b486595@mhtml.blink

@charset "utf-8";

.MJXp-script { font-size: 0.8em; }

.MJXp-right { transform-origin: right center; }

.MJXp-bold { font-weight: bold; }

.MJXp-italic { font-style: italic; }

.MJXp-scr { font-family: MathJax_Script, "Times New Roman", Times, STIXGene=
ral, serif; }

.MJXp-frak { font-family: MathJax_Fraktur, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-sf { font-family: MathJax_SansSerif, "Times New Roman", Times, STIXGe=
neral, serif; }

.MJXp-cal { font-family: MathJax_Caligraphic, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-mono { font-family: MathJax_Typewriter, "Times New Roman", Times, STI=
XGeneral, serif; }

.MJXp-largeop { font-size: 150%; }

.MJXp-largeop.MJXp-int { vertical-align: -0.2em; }

.MJXp-math { display: inline-block; line-height: 1.2; text-indent: 0px; fon=
t-family: "Times New Roman", Times, STIXGeneral, serif; white-space: nowrap=
; border-collapse: collapse; }

.MJXp-display { display: block; text-align: center; margin: 1em 0px; }

.MJXp-math span { display: inline-block; }

.MJXp-box { text-align: center; display: block !important; }

.MJXp-box::after { content: " "; }

.MJXp-rule { margin-top: 0.1em; display: block !important; }

.MJXp-char { display: block !important; }

.MJXp-mo { margin: 0px 0.15em; }

.MJXp-mfrac { margin: 0px 0.125em; vertical-align: 0.25em; }

.MJXp-denom { width: 100%; display: inline-table !important; }

.MJXp-denom > * { display: table-row !important; }

.MJXp-surd { vertical-align: top; }

.MJXp-surd > * { display: block !important; }

.MJXp-script-box > * { height: 50%; display: table !important; }

.MJXp-script-box > * > * { vertical-align: top; display: table-cell !import=
ant; }

.MJXp-script-box > :last-child > * { vertical-align: bottom; }

.MJXp-script-box > * > * > * { display: block !important; }

.MJXp-mphantom { visibility: hidden; }

.MJXp-munderover { display: inline-table !important; }

.MJXp-over { text-align: center; display: inline-block !important; }

.MJXp-over > * { display: block !important; }

.MJXp-munderover > * { display: table-row !important; }

.MJXp-mtable { vertical-align: 0.25em; margin: 0px 0.125em; }

.MJXp-mtable > * { vertical-align: middle; display: inline-table !important=
; }

.MJXp-mtr { display: table-row !important; }

.MJXp-mtd { text-align: center; padding: 0.5em 0px 0px 0.5em; display: tabl=
e-cell !important; }

.MJXp-mtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-mlabeledtr { display: table-row !important; }

.MJXp-mlabeledtr > .MJXp-mtd:first-child { padding-left: 0px; }

.MJXp-mlabeledtr:first-child > .MJXp-mtd { padding-top: 0px; }

.MJXp-merror { background-color: rgb(255, 255, 136); color: rgb(204, 0, 0);=
 border: 1px solid rgb(204, 0, 0); padding: 1px 3px; font-style: normal; fo=
nt-size: 90%; }

.MJXp-scale0 { transform: scaleX(0); }

.MJXp-scale1 { transform: scaleX(0.1); }

.MJXp-scale2 { transform: scaleX(0.2); }

.MJXp-scale3 { transform: scaleX(0.3); }

.MJXp-scale4 { transform: scaleX(0.4); }

.MJXp-scale5 { transform: scaleX(0.5); }

.MJXp-scale6 { transform: scaleX(0.6); }

.MJXp-scale7 { transform: scaleX(0.7); }

.MJXp-scale8 { transform: scaleX(0.8); }

.MJXp-scale9 { transform: scaleX(0.9); }

.MathJax_PHTML .noError { font-size: 90%; text-align: left; color: black; p=
adding: 1px 3px; border: 1px solid; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://cdn.jsdelivr.net/npm/katex@0.10.2/dist/katex.min.css

@charset "utf-8";

@font-face { font-family: KaTeX_AMS; src: url("fonts/KaTeX_AMS-Regular.woff=
2") format("woff2"), url("fonts/KaTeX_AMS-Regular.woff") format("woff"), ur=
l("fonts/KaTeX_AMS-Regular.ttf") format("truetype"); font-weight: 400; font=
-style: normal; }

@font-face { font-family: KaTeX_Caligraphic; src: url("fonts/KaTeX_Caligrap=
hic-Bold.woff2") format("woff2"), url("fonts/KaTeX_Caligraphic-Bold.woff") =
format("woff"), url("fonts/KaTeX_Caligraphic-Bold.ttf") format("truetype");=
 font-weight: 700; font-style: normal; }

@font-face { font-family: KaTeX_Caligraphic; src: url("fonts/KaTeX_Caligrap=
hic-Regular.woff2") format("woff2"), url("fonts/KaTeX_Caligraphic-Regular.w=
off") format("woff"), url("fonts/KaTeX_Caligraphic-Regular.ttf") format("tr=
uetype"); font-weight: 400; font-style: normal; }

@font-face { font-family: KaTeX_Fraktur; src: url("fonts/KaTeX_Fraktur-Bold=
.woff2") format("woff2"), url("fonts/KaTeX_Fraktur-Bold.woff") format("woff=
"), url("fonts/KaTeX_Fraktur-Bold.ttf") format("truetype"); font-weight: 70=
0; font-style: normal; }

@font-face { font-family: KaTeX_Fraktur; src: url("fonts/KaTeX_Fraktur-Regu=
lar.woff2") format("woff2"), url("fonts/KaTeX_Fraktur-Regular.woff") format=
("woff"), url("fonts/KaTeX_Fraktur-Regular.ttf") format("truetype"); font-w=
eight: 400; font-style: normal; }

@font-face { font-family: KaTeX_Main; src: url("fonts/KaTeX_Main-Bold.woff2=
") format("woff2"), url("fonts/KaTeX_Main-Bold.woff") format("woff"), url("=
fonts/KaTeX_Main-Bold.ttf") format("truetype"); font-weight: 700; font-styl=
e: normal; }

@font-face { font-family: KaTeX_Main; src: url("fonts/KaTeX_Main-BoldItalic=
.woff2") format("woff2"), url("fonts/KaTeX_Main-BoldItalic.woff") format("w=
off"), url("fonts/KaTeX_Main-BoldItalic.ttf") format("truetype"); font-weig=
ht: 700; font-style: italic; }

@font-face { font-family: KaTeX_Main; src: url("fonts/KaTeX_Main-Italic.wof=
f2") format("woff2"), url("fonts/KaTeX_Main-Italic.woff") format("woff"), u=
rl("fonts/KaTeX_Main-Italic.ttf") format("truetype"); font-weight: 400; fon=
t-style: italic; }

@font-face { font-family: KaTeX_Main; src: url("fonts/KaTeX_Main-Regular.wo=
ff2") format("woff2"), url("fonts/KaTeX_Main-Regular.woff") format("woff"),=
 url("fonts/KaTeX_Main-Regular.ttf") format("truetype"); font-weight: 400; =
font-style: normal; }

@font-face { font-family: KaTeX_Math; src: url("fonts/KaTeX_Math-BoldItalic=
.woff2") format("woff2"), url("fonts/KaTeX_Math-BoldItalic.woff") format("w=
off"), url("fonts/KaTeX_Math-BoldItalic.ttf") format("truetype"); font-weig=
ht: 700; font-style: italic; }

@font-face { font-family: KaTeX_Math; src: url("fonts/KaTeX_Math-Italic.wof=
f2") format("woff2"), url("fonts/KaTeX_Math-Italic.woff") format("woff"), u=
rl("fonts/KaTeX_Math-Italic.ttf") format("truetype"); font-weight: 400; fon=
t-style: italic; }

@font-face { font-family: KaTeX_SansSerif; src: url("fonts/KaTeX_SansSerif-=
Bold.woff2") format("woff2"), url("fonts/KaTeX_SansSerif-Bold.woff") format=
("woff"), url("fonts/KaTeX_SansSerif-Bold.ttf") format("truetype"); font-we=
ight: 700; font-style: normal; }

@font-face { font-family: KaTeX_SansSerif; src: url("fonts/KaTeX_SansSerif-=
Italic.woff2") format("woff2"), url("fonts/KaTeX_SansSerif-Italic.woff") fo=
rmat("woff"), url("fonts/KaTeX_SansSerif-Italic.ttf") format("truetype"); f=
ont-weight: 400; font-style: italic; }

@font-face { font-family: KaTeX_SansSerif; src: url("fonts/KaTeX_SansSerif-=
Regular.woff2") format("woff2"), url("fonts/KaTeX_SansSerif-Regular.woff") =
format("woff"), url("fonts/KaTeX_SansSerif-Regular.ttf") format("truetype")=
; font-weight: 400; font-style: normal; }

@font-face { font-family: KaTeX_Script; src: url("fonts/KaTeX_Script-Regula=
r.woff2") format("woff2"), url("fonts/KaTeX_Script-Regular.woff") format("w=
off"), url("fonts/KaTeX_Script-Regular.ttf") format("truetype"); font-weigh=
t: 400; font-style: normal; }

@font-face { font-family: KaTeX_Size1; src: url("fonts/KaTeX_Size1-Regular.=
woff2") format("woff2"), url("fonts/KaTeX_Size1-Regular.woff") format("woff=
"), url("fonts/KaTeX_Size1-Regular.ttf") format("truetype"); font-weight: 4=
00; font-style: normal; }

@font-face { font-family: KaTeX_Size2; src: url("fonts/KaTeX_Size2-Regular.=
woff2") format("woff2"), url("fonts/KaTeX_Size2-Regular.woff") format("woff=
"), url("fonts/KaTeX_Size2-Regular.ttf") format("truetype"); font-weight: 4=
00; font-style: normal; }

@font-face { font-family: KaTeX_Size3; src: url("fonts/KaTeX_Size3-Regular.=
woff2") format("woff2"), url("fonts/KaTeX_Size3-Regular.woff") format("woff=
"), url("fonts/KaTeX_Size3-Regular.ttf") format("truetype"); font-weight: 4=
00; font-style: normal; }

@font-face { font-family: KaTeX_Size4; src: url("fonts/KaTeX_Size4-Regular.=
woff2") format("woff2"), url("fonts/KaTeX_Size4-Regular.woff") format("woff=
"), url("fonts/KaTeX_Size4-Regular.ttf") format("truetype"); font-weight: 4=
00; font-style: normal; }

@font-face { font-family: KaTeX_Typewriter; src: url("fonts/KaTeX_Typewrite=
r-Regular.woff2") format("woff2"), url("fonts/KaTeX_Typewriter-Regular.woff=
") format("woff"), url("fonts/KaTeX_Typewriter-Regular.ttf") format("truety=
pe"); font-weight: 400; font-style: normal; }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-inde=
nt: 0px; text-rendering: auto; }

.katex * { }

.katex .katex-version::after { content: "0.10.2"; }

.katex .katex-mathml { position: absolute; clip: rect(1px, 1px, 1px, 1px); =
padding: 0px; border: 0px; height: 1px; width: 1px; overflow: hidden; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content;=
 }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathdefault { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-weight: 700; font-style:=
 italic; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font=
-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-sty=
le: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { display: inline-table; table-layout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; vertical-align: bottom; position: rela=
tive; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { display: table-cell; vertical-align: bottom; font-size: 1=
px; width: 2px; min-width: 2px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { display: inline-block; width: 100%; border-botto=
m-style: solid; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overlin=
e .overline-line, .katex .rule, .katex .underline .underline-line { min-hei=
ght: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { width: 0px; position: relative; =
}

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { posit=
ion: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: in=
line-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { display: inline-block; border: 0px solid; position: relative=
; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underlin=
e-line { display: inline-block; width: 100%; border-bottom-style: solid; }

.katex .hdashline { display: inline-block; width: 100%; border-bottom-style=
: dashed; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; =
}

.katex .fontsize-ensurer, .katex .sizing { display: inline-block; }

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size=
1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size=
2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size=
3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size=
4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size=
5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size=
6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size=
7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size=
8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size=
9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.siz=
e10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.siz=
e11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size=
1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size=
2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size=
3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size=
4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size=
5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size=
6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size=
7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size=
8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size=
9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.siz=
e10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.siz=
e11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size=
1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size=
2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size=
3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size=
4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size=
5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size=
6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size=
7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size=
8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size=
9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.siz=
e10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.siz=
e11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size=
1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size=
2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size=
3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size=
4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size=
5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size=
6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size=
7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size=
8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size=
9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.siz=
e10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.siz=
e11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size=
1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size=
2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size=
3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size=
4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size=
5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size=
6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size=
7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size=
8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size=
9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.siz=
e10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.siz=
e11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size=
1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size=
2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size=
3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size=
4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size=
5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size=
6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size=
7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size=
8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size=
9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.siz=
e10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.siz=
e11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size=
1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size=
2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size=
3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size=
4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size=
5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size=
6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size=
7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size=
8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size=
9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.siz=
e10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.siz=
e11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size=
1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size=
2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size=
3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size=
4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size=
5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size=
6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size=
7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size=
8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size=
9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.siz=
e10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.siz=
e11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size=
1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size=
2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size=
3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size=
4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size=
5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size=
6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size=
7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size=
8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size=
9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.siz=
e10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.siz=
e11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.si=
ze1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.si=
ze2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.si=
ze3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.si=
ze4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.si=
ze5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.si=
ze6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.si=
ze7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.si=
ze8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.si=
ze9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.s=
ize10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.s=
ize11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.si=
ze1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.si=
ze2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.si=
ze3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.si=
ze4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.si=
ze5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.si=
ze6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.si=
ze7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.si=
ze8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.si=
ze9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.s=
ize10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.s=
ize11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .op-limits > .vlist-t { text-align: center; }

.katex .accent > .vlist-t { text-align: center; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; margin: 0px -0.=
025em; border-right: 0.05em solid; min-width: 1px; }

.katex .mtable .vs-dashed { border-right: 0.05em dashed; }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { display: block; position: absolute; width: 100%; height: inher=
it; fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; fill-opac=
ity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: miter; stro=
ke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; stroke-opac=
ity: 1; }

.katex svg path { stroke: none; }

.katex img { border-style: none; min-width: 0px; min-height: 0px; max-width=
: none; max-height: none; }

.katex .stretchy { width: 100%; display: block; position: relative; overflo=
w: hidden; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { width: 100%; position: relative; overflow: hidden; }

.katex .halfarrow-left { position: absolute; left: 0px; width: 50.2%; overf=
low: hidden; }

.katex .halfarrow-right { position: absolute; right: 0px; width: 50.2%; ove=
rflow: hidden; }

.katex .brace-left { position: absolute; left: 0px; width: 25.1%; overflow:=
 hidden; }

.katex .brace-center { position: absolute; left: 25%; width: 50%; overflow:=
 hidden; }

.katex .brace-right { position: absolute; right: 0px; width: 25.1%; overflo=
w: hidden; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { box-sizing: border-box; border: 0.04em so=
lid; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: =
nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative;=
 }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0=
px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto=
; }

.katex-display.fleqn > .katex { text-align: left; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/css
Content-Transfer-Encoding: quoted-printable
Content-Location: https://app.dataquest.io/app.c4ac270a093ff74e37f5.css

@charset "utf-8";

.dq-code-in-pre { display: block; padding: 1em; margin: 0px; white-space: p=
re-wrap; }

.dq-code-in-results, .dq-mission-variable-line .html_value, .dq-mission-var=
iable-line .value { white-space: pre-wrap; overflow-wrap: break-word; overf=
low-x: auto; }

.dq-drop-down-on-toolbar { transition-property: all; transition-timing-func=
tion: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; display: in=
line-flex; flex-direction: row; place-content: center; align-items: center;=
 text-align: center; white-space: nowrap; font-weight: 700; text-transform:=
 capitalize; padding: 6px 20px; border-width: 1px; border-style: solid; bor=
der-image: initial; background-color: transparent; --tw-text-opacity:1; col=
or: rgba(125,143,168,var(--tw-text-opacity)); --tw-border-opacity:1; border=
-color: rgba(125,143,168,var(--tw-border-opacity)); border-radius: 0px; cur=
sor: pointer; }

.disabled.dq-drop-down-on-toolbar, .disabled.dq-drop-down-on-toolbar:hover =
{ --tw-text-opacity:1; color: rgba(186,196,209,var(--tw-text-opacity)); cur=
sor: default; }

.dq-drop-down-on-toolbar:focus { outline: none; }

.dq-drop-down-on-toolbar:hover { --tw-text-opacity:1; color: rgba(125,143,1=
68,var(--tw-text-opacity)); }

.dq-sidebar-standard-list { position: absolute; inset: 0px; overflow-y: scr=
oll; }

.dq-editor-header { border-bottom-width: 1px; --tw-border-opacity:1; border=
-color: rgba(77,92,114,var(--tw-border-opacity)); display: flex; align-item=
s: center; justify-content: flex-start; flex-wrap: wrap; padding: 0px; z-in=
dex: 6; }

.dq-editor-header a, .dq-editor-header button { margin-right: 1px; }

.dq-password-reset-form h1, .dq-password-reset-form h2, .dq-password-reset-=
form h3, .dq-password-reset-form h4, .dq-profile-edit h1, .dq-profile-edit =
h2, .dq-profile-edit h3, .dq-profile-edit h4, .dq-sidebar-standard-list h1,=
 .dq-sidebar-standard-list h2, .dq-sidebar-standard-list h3, .dq-sidebar-st=
andard-list h4 { margin-top: 1.25em; margin-bottom: 0.25em; }

.dq-password-reset-form p, .dq-profile-edit p, .dq-sidebar-standard-list p =
{ margin: 0.5em 0px 1em; font-weight: 400; }

.dq-sidebar-standard-list { padding: 1.25rem 2.5rem; }

.dq-sidebar-standard-list > :first-child { margin-top: 0px; }

.dq-social-button-3r { --tw-text-opacity:1; color: rgba(255,255,255,var(--t=
w-text-opacity)); height: 1.5rem; display: inline-flex; cursor: pointer; bo=
rder: 1px solid rgba(0, 0, 0, 0.2); }

.dq-social-button-3r h3 { text-transform: capitalize; font-weight: 700; mar=
gin: 0px; padding: 0px 0.375rem; height: 100%; }

.dq-social-icon-3r { display: flex; align-items: center; justify-content: c=
enter; width: 1.5rem; border-right: 1px solid rgba(0, 0, 0, 0.2); height: 1=
00%; }

.dq-social-icon-3r span { top: -4px; }

.dq-input-block, .dq-input-pattern, .dq-login .dq-general-errors, .dq-login=
 form input, .dq-missing-email-errors, .dq-missing-email input, .dq-passwor=
d-reset-form-errors, .dq-password-reset-form input, .dq-profile-edit input,=
 .dq-profile-edit select, .dq-profile-edit textarea, .dq-select, .dq-sign-u=
p .dq-general-errors, .dq-sign-up form input, .dq-standard-error-box { tran=
sition-property: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2,=
 1); transition-duration: 0.15s; min-height: 3rem; border-radius: 5px; marg=
in-bottom: 1.5rem; border-width: 2px; border-style: solid; }

.dq-input-pattern, .dq-login form input, .dq-missing-email input, .dq-passw=
ord-reset-form input, .dq-profile-edit input, .dq-profile-edit select, .dq-=
profile-edit textarea, .dq-select, .dq-sign-up form input { --tw-bg-opacity=
:1; background-color: rgba(247,248,250,var(--tw-bg-opacity)); box-shadow: n=
one; outline: none; padding: 0px 1rem; }

.dq-input-pattern:focus, .dq-login form input:focus, .dq-missing-email inpu=
t:focus, .dq-password-reset-form input:focus, .dq-profile-edit input:focus,=
 .dq-profile-edit select:focus, .dq-profile-edit textarea:focus, .dq-select=
:focus, .dq-sign-up form input:focus { --tw-border-opacity:1; border-color:=
 rgba(57,207,144,var(--tw-border-opacity)); }

.dq-plot-image { max-height: 350px; max-width: 100%; }

.dq-standard-error-box { --tw-text-opacity:1; color: rgba(199,78,78,var(--t=
w-text-opacity)); --tw-border-opacity:1; border-color: rgba(199,78,78,var(-=
-tw-border-opacity)); --tw-bg-opacity:1; background-color: rgba(242,222,222=
,var(--tw-bg-opacity)); padding: 0.5rem 1rem; }

.dq-account-table { width: 100%; max-width: 31.25rem; }

.dq-account-table th { min-width: 10ch; text-align: right; padding-right: 2=
rem; }

.dq-panels { flex: 1 1 200px; overflow: auto; }

.dq-panels-extra-lines { position: relative; flex: 1 1 1em; min-height: 1em=
; width: 30px; }

.dq-account-list-item { --tw-border-opacity:1; border-color: rgba(77,92,114=
,var(--tw-border-opacity)); border-width: 1px; --tw-bg-opacity:1; backgroun=
d-color: rgba(255,255,255,var(--tw-bg-opacity)); padding: 1rem; }

.dq-account-list-item:first-of-type { border-top-left-radius: 0.5rem; borde=
r-top-right-radius: 0.5rem; }

.dq-account-list-item:last-of-type { border-bottom-left-radius: 0.5rem; bor=
der-bottom-right-radius: 0.5rem; }

.dq-typography-header, .dq-typography h1, .dq-typography h2, .dq-typography=
 h3, .dq-typography h4 { margin-top: 1.25em; margin-bottom: 0.25em; }

.dq-typography-p, .dq-typography p { margin: 0.5em 0px 1em; font-weight: 40=
0; }

.dq-standard-checkbox { display: flex; }

.dq-standard-checkbox input { width: 3rem; height: 3rem; margin-top: 0.5rem=
; margin-right: 1rem; }

.dq-strike::after { content: ""; border-bottom: 2px solid red; position: ab=
solute; left: 0px; top: 45%; width: 100%; }

.dq-child-spacing > * { margin-bottom: 24px; }

.dq-braintree-fixes .braintree-placeholder, .dq-braintree-fixes .braintree-=
toggle { display: none; }

.dq-braintree-fixes.dq-braintree-wallets .braintree-googlePay { border: non=
e; --tw-bg-opacity:1; background-color: rgba(247,248,250,var(--tw-bg-opacit=
y)); }

.dq-braintree-fixes.dq-braintree-wallets .braintree-googlePay [data-braintr=
ee-id=3D"google-pay-sheet-header"] { display: none; }

.dq-braintree-fixes.dq-braintree-wallets .braintree-googlePay .braintree-sh=
eet__content { padding: 0px; }

.dq-braintree-fixes.dq-braintree-wallets .braintree-googlePay .google-pay-b=
utton { width: 100%; --tw-shadow:0 0 transparent; box-shadow: var(--tw-ring=
-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(-=
-tw-shadow); height: 54px; padding: 12px; background-image: url("/img/dark-=
8191afec51483e108a2dc5f17fb0efd0.svg"); background-color: rgb(0, 0, 0); bor=
der: none; }

.dq-path-steps-header p { --tw-text-opacity:1; color: rgba(97,117,145,var(-=
-tw-text-opacity)); margin: 0px; }

.dq-path-steps-header h2 { --tw-text-opacity:1; color: rgba(77,92,114,var(-=
-tw-text-opacity)); font-weight: 700; margin: 8px 0px 48px; }

.dq-icon-white [fill^=3D"#"] { fill: rgb(255, 255, 255) !important; }

.dq-icon-white [stroke^=3D"#"] { stroke: rgb(255, 255, 255) !important; }

.dq-scroll-focus > :focus { outline: none; }

.dq-skill-level { --tw-text-opacity:1; color: rgba(77,92,114,var(--tw-text-=
opacity)); display: inline-flex; margin-right: 8px; }

.dq-takeaways-paper canvas { margin: 0px auto; }

.dq-panel-outputs { border-top-width: 1px; --tw-border-opacity:1; border-co=
lor: rgba(186,196,209,var(--tw-border-opacity)); }

.dq-panel-outputs > :last-child { border-bottom: none; }

.dq-select { --tw-text-opacity:1; color: rgba(36,43,53,var(--tw-text-opacit=
y)); --tw-bg-opacity:1; margin-bottom: 1.5rem; appearance: none; background=
: url("data:image/svg+xml;utf8,<svg xmlns=3D'http://www.w3.org/2000/svg' wi=
dth=3D'100' height=3D'100' fill=3D'%238C98F2'><polygon points=3D'0,0 100,0 =
50,50'/></svg>") calc(100% - 10px) calc(50% + 4px) / 12px no-repeat; paddin=
g-right: 30px; }

.dq-login, .dq-login form, .dq-sign-up, .dq-sign-up form { width: 22.5rem; =
}

.dq-login form h2, .dq-sign-up form h2 { margin: 0px 0px 1rem; }

.dq-login form input, .dq-sign-up form input { --tw-text-opacity:1; color: =
rgba(36,43,53,var(--tw-text-opacity)); margin-bottom: 1.5rem; }

.dq-progress-circle { --tw-border-opacity:1; border-color: rgba(217,222,229=
,var(--tw-border-opacity)); border-width: 2px; border-radius: 50%; width: 2=
rem; height: 2rem !important; display: flex !important; }

.dq-progress-circle-finished { --tw-border-opacity:1; border-color: rgba(57=
,207,144,var(--tw-border-opacity)); }

.dq-progress-circle2 { width: 24px; height: 24px; }

.dq-progress-circle2-finished, .dq-progress-circle2-locked { border-radius:=
 50%; }

.dq-progress-circle2-locked svg { --tw-text-opacity:1; color: rgba(97,117,1=
45,var(--tw-text-opacity)); }

.dq-anchor-cta { border-radius: 3px; padding: 16px 20px; min-width: 120px; =
}

.dq-anchor-cta.primary { --tw-bg-opacity:1; background-color: rgba(41,161,2=
48,var(--tw-bg-opacity)); border-width: 1px; --tw-border-opacity:1; border-=
color: rgba(41,161,248,var(--tw-border-opacity)); }

.dq-anchor-cta.primary, .dq-anchor-cta.primary:hover { --tw-text-opacity:1;=
 color: rgba(255,255,255,var(--tw-text-opacity)); }

.dq-anchor-cta.primary:hover { background-color: rgb(92, 155, 229); }

.dq-anchor-cta.primary.outline { --tw-bg-opacity:1; background-color: rgba(=
255,255,255,var(--tw-bg-opacity)); --tw-text-opacity:1; color: rgba(41,161,=
248,var(--tw-text-opacity)); }

.dq-anchor-cta.primary.outline:hover { --tw-bg-opacity:1; background-color:=
 rgba(247,248,250,var(--tw-bg-opacity)); }

.dq-anchor-cta.secondary { --tw-bg-opacity:1; background-color: rgba(57,207=
,144,var(--tw-bg-opacity)); border-width: 1px; --tw-border-opacity:1; borde=
r-color: rgba(57,207,144,var(--tw-border-opacity)); }

.dq-anchor-cta.secondary, .dq-anchor-cta.secondary:hover { --tw-text-opacit=
y:1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dq-anchor-cta.secondary:hover { background-color: rgb(14, 216, 179); }

.dq-anchor-cta.secondary.outline { --tw-border-opacity:1; border-color: rgb=
a(255,255,255,var(--tw-border-opacity)); --tw-text-opacity:1; color: rgba(5=
7,207,144,var(--tw-text-opacity)); }

.dq-anchor-cta.secondary.outline:hover { --tw-bg-opacity:1; background-colo=
r: rgba(247,248,250,var(--tw-bg-opacity)); }

.dq-anchor-cta.gold { --tw-text-opacity:1; color: rgba(255,255,255,var(--tw=
-text-opacity)); --tw-bg-opacity:1; background-color: rgba(247,224,142,var(=
--tw-bg-opacity)); border-width: 1px; --tw-border-opacity:1; border-color: =
rgba(247,224,142,var(--tw-border-opacity)); }

.dq-anchor-cta.gold:hover { background-color: rgb(246, 224, 167); }

.dq-anchor-cta.gold.outline { --tw-bg-opacity:1; background-color: rgba(255=
,255,255,var(--tw-bg-opacity)); --tw-text-opacity:1; color: rgba(247,224,14=
2,var(--tw-text-opacity)); }

.dq-anchor-cta.gold.outline:hover { --tw-bg-opacity:1; background-color: rg=
ba(247,248,250,var(--tw-bg-opacity)); }

.dq-anchor-cta.gray { --tw-bg-opacity:1; background-color: rgba(97,117,145,=
var(--tw-bg-opacity)); border-width: 1px; border-color: rgba(97,117,145,var=
(--tw-border-opacity)); }

.dq-anchor-cta.gray, .dq-anchor-cta.gray:hover { --tw-text-opacity:1; color=
: rgba(255,255,255,var(--tw-text-opacity)); --tw-border-opacity:1; }

.dq-anchor-cta.gray:hover { border-color: rgba(125,143,168,var(--tw-border-=
opacity)); }

.dq-anchor-cta.gray.outline { --tw-bg-opacity:1; background-color: rgba(255=
,255,255,var(--tw-bg-opacity)); --tw-text-opacity:1; color: rgba(97,117,145=
,var(--tw-text-opacity)); }

.dq-anchor-cta.gray.outline:hover { --tw-bg-opacity:1; background-color: rg=
ba(247,248,250,var(--tw-bg-opacity)); }

.dq-anchor-cta.hollow { --tw-text-opacity:1; color: rgba(42,84,167,var(--tw=
-text-opacity)); background-color: transparent; border-width: 2px; --tw-bor=
der-opacity:1; border-color: rgba(42,84,167,var(--tw-border-opacity)); }

.dq-anchor-cta.hollow:hover { --tw-text-opacity:1; color: rgba(41,161,248,v=
ar(--tw-text-opacity)); --tw-border-opacity:1; border-color: rgba(41,161,24=
8,var(--tw-border-opacity)); }

:root { tab-size: 4; }

html { line-height: 1.15; text-size-adjust: 100%; }

body { margin: 0px; font-family: system-ui, -apple-system, "Segoe UI", Robo=
to, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji"; }

hr { height: 0px; color: inherit; }

abbr[title] { text-decoration: underline dotted; }

b, strong { font-weight: bolder; }

code, kbd, pre, samp { font-family: ui-monospace, SFMono-Regular, Consolas,=
 "Liberation Mono", Menlo, monospace; font-size: 1em; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-ali=
gn: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { text-indent: 0px; border-color: inherit; }

button, input, optgroup, select, textarea { font-family: inherit; font-size=
: 100%; line-height: 1.15; margin: 0px; }

button, select { text-transform: none; }

[type=3D"button"], [type=3D"reset"], [type=3D"submit"], button { appearance=
: button; }

legend { padding: 0px; }

progress { vertical-align: baseline; }

[type=3D"search"] { appearance: textfield; outline-offset: -2px; }

summary { display: list-item; }

blockquote, dd, dl, figure, h1, h2, h3, h4, h5, h6, hr, p, pre { margin: 0p=
x; }

button { background-color: transparent; background-image: none; }

button:focus { outline: -webkit-focus-ring-color auto 5px; }

fieldset, ol, ul { margin: 0px; padding: 0px; }

ol, ul { list-style: none; }

html { font-family: source-sans-pro, sans-serif; line-height: 1.5; }

body { font-family: inherit; line-height: inherit; }

*, ::after, ::before { box-sizing: border-box; border: 0px solid rgb(186, 1=
96, 209); }

hr { border-top-width: 1px; }

img { border-style: solid; }

textarea { resize: vertical; }

input::placeholder, textarea::placeholder { opacity: 1; color: rgb(125, 143=
, 168); }

[role=3D"button"], button { cursor: pointer; }

table { border-collapse: collapse; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

button, input, optgroup, select, textarea { padding: 0px; line-height: inhe=
rit; color: inherit; }

code, kbd, pre, samp { font-family: source-code-pro, monospace; }

audio, canvas, embed, iframe, img, object, svg, video { display: block; ver=
tical-align: middle; }

img, video { max-width: 100%; height: auto; }

html { font-size: 16px; font-family: source-sans-pro, sans-serif; --tw-text=
-opacity:1; color: rgba(77,92,114,var(--tw-text-opacity)); }

h1, h2, h3, h4, h5, h6 { font-family: source-code-pro, serif; }

h1 { font-size: 3.75rem; line-height: 1; }

h2 { font-size: 2.25rem; line-height: 2.5rem; }

h3 { font-size: 1.5rem; line-height: 2rem; }

h4 { font-size: 1.25rem; }

h4, h5 { line-height: 1.75rem; font-weight: 700; }

h5 { font-size: 1.125rem; }

h6 { font-size: 1rem; line-height: 1.5rem; font-weight: 700; }

a, a:active, a:hover { --tw-text-opacity:1; color: rgba(57,207,144,var(--tw=
-text-opacity)); }

.code, .diagram, code { font-family: source-code-pro, monospace; }

.dq-dark.dq-prose code, .dq-dark .dq-prose code, .dq-dark.dq-prose pre, .dq=
-dark .dq-prose pre, .dq-dark code, .dq-dark pre { --tw-bg-opacity:1; backg=
round-color: rgba(36,43,53,var(--tw-bg-opacity)); --tw-text-opacity:1; colo=
r: rgba(247,248,250,var(--tw-text-opacity)); }

.dq-dark .diagram { --tw-bg-opacity:1; background-color: rgba(255,255,255,v=
ar(--tw-bg-opacity)); }

.dq-dark.dq-prose thead, .dq-dark .dq-prose thead { --tw-text-opacity:1; co=
lor: rgba(217,222,229,var(--tw-text-opacity)); }

.dq-dark.dq-prose blockquote, .dq-dark .dq-prose blockquote, .dq-dark.dq-pr=
ose ol > li::before, .dq-dark .dq-prose ol > li::before, .dq-dark.dq-prose =
strong, .dq-dark .dq-prose strong { --tw-text-opacity:1; color: rgba(255,25=
5,255,var(--tw-text-opacity)); }

.dq-dark.dq-prose ul > li::before, .dq-dark .dq-prose ul > li::before { --t=
w-bg-opacity:1; background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.dq-container { width: 100%; }

@media (min-width: 640px) {
  .dq-container { max-width: 640px; }
}

@media (min-width: 768px) {
  .dq-container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .dq-container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .dq-container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .dq-container { max-width: 1536px; }
}

@media (min-width: 1600px) {
  .dq-container { max-width: 1600px; }
}

.dq-prose { color: rgb(56, 68, 84); max-width: 65ch; }

.dq-prose [class~=3D"lead"] { color: rgb(77, 92, 114); font-size: 1.25em; l=
ine-height: 1.6; margin-top: 1.2em; margin-bottom: 1.2em; }

.dq-prose a { color: rgb(49, 203, 138); text-decoration: none; font-weight:=
 500; }

.dq-prose strong { color: rgb(15, 18, 23); font-weight: 600; }

.dq-prose ol { counter-reset: list-counter 0; margin-top: 1.25em; margin-bo=
ttom: 1.25em; }

.dq-prose ol > li { position: relative; counter-increment: list-counter 1; =
padding-left: 1.75em; }

.dq-prose ol > li::before { content: counter(list-counter) "."; position: a=
bsolute; font-weight: 400; color: rgb(97, 117, 145); left: 0px; }

.dq-prose ul > li { position: relative; padding-left: 1.75em; }

.dq-prose ul > li::before { content: ""; position: absolute; background-col=
or: rgb(156, 169, 188); border-radius: 50%; width: 0.375em; height: 0.375em=
; top: 0.6875em; left: 0.25em; }

.dq-prose hr { border-color: rgb(186, 196, 209); border-top-width: 1px; mar=
gin-top: 3em; margin-bottom: 3em; }

.dq-prose blockquote { font-weight: 500; font-style: italic; color: rgb(15,=
 18, 23); border-left-width: 0.25rem; border-left-color: rgb(186, 196, 209)=
; quotes: "=E2=80=9C" "=E2=80=9D" "=E2=80=98" "=E2=80=99"; margin-top: 1.6e=
m; margin-bottom: 1.6em; padding-left: 1em; }

.dq-prose blockquote p:first-of-type::before { content: open-quote; }

.dq-prose blockquote p:last-of-type::after { content: close-quote; }

.dq-prose h1 { color: rgb(15, 18, 23); font-weight: 800; font-size: 2.25em;=
 margin-top: 0px; margin-bottom: 0.888889em; line-height: 1.11111; }

.dq-prose h2 { color: rgb(15, 18, 23); font-weight: 700; font-size: 1.5em; =
margin-top: 2em; margin-bottom: 1em; line-height: 1.33333; }

.dq-prose h3 { font-size: 1.25em; margin-top: 1.6em; margin-bottom: 0.6em; =
line-height: 1.6; }

.dq-prose h3, .dq-prose h4 { color: rgb(15, 18, 23); font-weight: 600; }

.dq-prose h4 { margin-top: 1.5em; margin-bottom: 0.5em; line-height: 1.5; }

.dq-prose figure figcaption { color: rgb(97, 117, 145); font-size: 0.875em;=
 line-height: 1.42857; margin-top: 0.857143em; }

.dq-prose code { color: rgb(198, 36, 77); font-weight: 400; font-size: 0.87=
5rem; background-color: rgb(249, 241, 243); line-height: 1.25rem; padding: =
0px 8px; }

.dq-prose a code { color: rgb(198, 36, 77); }

.dq-prose pre { overflow-x: auto; margin-top: 1.71429em; margin-bottom: 1.7=
1429em; padding: 8px; }

.dq-prose pre, .dq-prose pre code { color: rgb(198, 36, 77); background-col=
or: rgb(249, 241, 243); font-size: 0.875rem; line-height: 1.25rem; border-r=
adius: 0px; font-weight: 400; }

.dq-prose pre code { border-width: 0px; padding: 0px; font-family: inherit;=
 }

.dq-prose pre code::after, .dq-prose pre code::before { content: ""; }

.dq-prose table { width: 100%; table-layout: auto; text-align: left; margin=
-top: 2em; margin-bottom: 2em; font-size: 0.875em; line-height: 1.71429; }

.dq-prose thead { color: rgb(15, 18, 23); font-weight: 600; border-bottom-w=
idth: 1px; border-bottom-color: rgb(156, 169, 188); }

.dq-prose thead th { vertical-align: bottom; padding-right: 0.571429em; pad=
ding-bottom: 0.571429em; padding-left: 0.571429em; }

.dq-prose tbody tr { border-bottom-width: 1px; border-bottom-color: rgb(186=
, 196, 209); }

.dq-prose tbody tr:last-child { border-bottom-width: 0px; }

.dq-prose tbody td { vertical-align: top; padding: 8px !important; }

.dq-prose { font-size: 1rem; line-height: 1.75; }

.dq-prose p { margin-top: 1.25em; margin-bottom: 1.25em; }

.dq-prose figure, .dq-prose img, .dq-prose video { margin-top: 2em; margin-=
bottom: 2em; }

.dq-prose figure > * { margin-top: 0px; margin-bottom: 0px; }

.dq-prose h2 code { font-size: 0.875em; }

.dq-prose h3 code { font-size: 0.9em; }

.dq-prose ul { margin-top: 1.25em; margin-bottom: 1.25em; }

.dq-prose li { margin-top: 0.5em; margin-bottom: 0.5em; }

.dq-prose > ul > li p { margin-top: 0.75em; margin-bottom: 0.75em; }

.dq-prose > ul > li > :first-child { margin-top: 1.25em; }

.dq-prose > ul > li > :last-child { margin-bottom: 1.25em; }

.dq-prose > ol > li > :first-child { margin-top: 1.25em; }

.dq-prose > ol > li > :last-child { margin-bottom: 1.25em; }

.dq-prose ol ol, .dq-prose ol ul, .dq-prose ul ol, .dq-prose ul ul { margin=
-top: 0.75em; margin-bottom: 0.75em; }

.dq-prose h2 + *, .dq-prose h3 + *, .dq-prose h4 + *, .dq-prose hr + * { ma=
rgin-top: 0px; }

.dq-prose thead th:first-child { padding-left: 0px; }

.dq-prose thead th:last-child { padding-right: 0px; }

.dq-prose tbody td:first-child { padding-left: 0px; }

.dq-prose tbody td:last-child { padding-right: 0px; }

.dq-prose > :first-child { margin-top: 0px; }

.dq-prose > :last-child { margin-bottom: 0px; }

.dq-prose ul > li::before { background-color: rgb(54, 61, 73); }

.dq-prose ul > li ul > li::before { background-color: rgb(255, 255, 255); b=
order-color: rgb(54, 61, 73); border-width: 1px; }

.dq-prose ol > li::before { color: rgb(54, 61, 73); }

.dq-prose a:hover { text-decoration: underline; }

.dq-prose table th { padding: 8px !important; }

.dq-prose-lg { font-size: 1.125rem; line-height: 1.77778; }

.dq-prose-lg p { margin-top: 1.33333em; margin-bottom: 1.33333em; }

.dq-prose-lg [class~=3D"lead"] { font-size: 1.22222em; line-height: 1.45455=
; margin-top: 1.09091em; margin-bottom: 1.09091em; }

.dq-prose-lg blockquote { margin-top: 1.66667em; margin-bottom: 1.66667em; =
padding-left: 1em; }

.dq-prose-lg h1 { font-size: 2.66667em; margin-top: 0px; margin-bottom: 0.8=
33333em; line-height: 1; }

.dq-prose-lg h2 { font-size: 1.66667em; margin-top: 1.86667em; margin-botto=
m: 1.06667em; line-height: 1.33333; }

.dq-prose-lg h3 { font-size: 1.33333em; margin-top: 1.66667em; margin-botto=
m: 0.666667em; line-height: 1.5; }

.dq-prose-lg h4 { margin-top: 1.77778em; margin-bottom: 0.444444em; line-he=
ight: 1.55556; }

.dq-prose-lg figure, .dq-prose-lg img, .dq-prose-lg video { margin-top: 1.7=
7778em; margin-bottom: 1.77778em; }

.dq-prose-lg figure > * { margin-top: 0px; margin-bottom: 0px; }

.dq-prose-lg figure figcaption { font-size: 0.888889em; line-height: 1.5; m=
argin-top: 1em; }

.dq-prose-lg code { font-size: 0.888889em; }

.dq-prose-lg h2 code { font-size: 0.866667em; }

.dq-prose-lg h3 code { font-size: 0.875em; }

.dq-prose-lg pre { font-size: 0.888889em; line-height: 1.75; margin-top: 2e=
m; margin-bottom: 2em; border-radius: 0.375rem; padding: 1em 1.5em; }

.dq-prose-lg ol, .dq-prose-lg ul { margin-top: 1.33333em; margin-bottom: 1.=
33333em; }

.dq-prose-lg li { margin-top: 0.666667em; margin-bottom: 0.666667em; }

.dq-prose-lg ol > li { padding-left: 1.66667em; }

.dq-prose-lg ol > li::before { left: 0px; }

.dq-prose-lg ul > li { padding-left: 1.66667em; }

.dq-prose-lg ul > li::before { width: 0.333333em; height: 0.333333em; top: =
0.72222em; left: 0.222222em; }

.dq-prose-lg > ul > li p { margin-top: 0.888889em; margin-bottom: 0.888889e=
m; }

.dq-prose-lg > ul > li > :first-child { margin-top: 1.33333em; }

.dq-prose-lg > ul > li > :last-child { margin-bottom: 1.33333em; }

.dq-prose-lg > ol > li > :first-child { margin-top: 1.33333em; }

.dq-prose-lg > ol > li > :last-child { margin-bottom: 1.33333em; }

.dq-prose-lg ol ol, .dq-prose-lg ol ul, .dq-prose-lg ul ol, .dq-prose-lg ul=
 ul { margin-top: 0.888889em; margin-bottom: 0.888889em; }

.dq-prose-lg hr { margin-top: 3.11111em; margin-bottom: 3.11111em; }

.dq-prose-lg h2 + *, .dq-prose-lg h3 + *, .dq-prose-lg h4 + *, .dq-prose-lg=
 hr + * { margin-top: 0px; }

.dq-prose-lg table { font-size: 0.888889em; line-height: 1.5; }

.dq-prose-lg thead th { padding-right: 0.75em; padding-bottom: 0.75em; padd=
ing-left: 0.75em; }

.dq-prose-lg thead th:first-child { padding-left: 0px; }

.dq-prose-lg thead th:last-child { padding-right: 0px; }

.dq-prose-lg tbody td { padding: 0.75em; }

.dq-prose-lg tbody td:first-child { padding-left: 0px; }

.dq-prose-lg tbody td:last-child { padding-right: 0px; }

.dq-prose-lg > :first-child { margin-top: 0px; }

.dq-prose-lg > :last-child { margin-bottom: 0px; }

.dq-spinner.dq-animate-spin { animation-duration: 0.7s; }

#mobile-menu { overflow-y: auto; max-height: calc(100vh - 64px); }

.dq-mission-run-feedback-error .dq-prose ul > li { margin-top: 0px; margin-=
bottom: 0px; }

.dq-mission-run-feedback-error .dq-prose ul > li::before { --tw-bg-opacity:=
1; background-color: rgba(199,78,78,var(--tw-bg-opacity)); }

.dq-mission-variable-line .button { padding: 0px; cursor: pointer; }

.dq-mission-variable-line .html_value, .dq-mission-variable-line .value { p=
adding-left: 2.5rem; padding-bottom: 1em; width: 100%; overflow-x: auto; }

.dq-mission-variable-line .html_value table td, .dq-mission-variable-line .=
html_value table th { --tw-border-opacity:1; border-color: rgba(77,92,114,v=
ar(--tw-border-opacity)); border-width: 1px; padding: 8px; }

.dq-mission-markup { overflow-x: auto; }

.dq-mission-markup diagram, .dq-mission-markup table { max-width: 100%; dis=
play: inline-block; overflow-x: auto; }

.dq-mission-markup diagram::-webkit-scrollbar, .dq-mission-markup table::-w=
ebkit-scrollbar { appearance: none; height: 7px; width: 7px; }

.dq-mission-markup diagram::-webkit-scrollbar-thumb, .dq-mission-markup tab=
le::-webkit-scrollbar-thumb { background-color: rgba(0,0,0,var(--tw-bg-opac=
ity)); --tw-bg-opacity:0.5; border-radius: 4px; box-shadow: rgba(255, 255, =
255, 0.5) 0px 0px 1px; }

.dq-mission-markup .diagram { --tw-bg-opacity:1; background-color: rgba(255=
,255,255,var(--tw-bg-opacity)); display: block; text-align: center; stroke-=
linecap: round; stroke-width: 2px; }

.dq-mission-markup code, .dq-mission-markup pre code { overflow-wrap: break=
-word; }

.dq-mission-markup table td, .dq-mission-markup table th { border-width: 1p=
x; --tw-border-opacity:1; border-color: rgba(77,92,114,var(--tw-border-opac=
ity)); }

.dq-mission-markup img { --tw-bg-opacity:1; background-color: rgba(255,255,=
255,var(--tw-bg-opacity)); max-width: 100%; display: block; overflow-x: aut=
o; padding: 1rem; }

.dq-dark .dq-mission-markup diagram path { stroke: rgb(217, 222, 229) !impo=
rtant; }

.dq-dark .dq-mission-markup diagram text { fill: rgb(217, 222, 229) !import=
ant; }

.dq-password-reset-form { position: relative; }

.dq-password-reset-form input { width: 600px; margin-bottom: 8px; }

.dq-password-reset-form-errors { display: block; padding: 1rem 2rem; width:=
 600px; }

.dq-profile-edit { position: relative; padding: 2.5rem 5rem; }

.dq-profile-edit textarea { padding: 2rem; height: 6em; }

.dq-profile-edit h2 { display: inline-block; margin-top: 0px; }

.dq-profile-edit .input_error, .dq-profile-edit .input_group { display: fle=
x; flex-direction: column; margin-bottom: 1rem; }

.dq-profile-edit .input_error input, .dq-profile-edit .input_error textarea=
 { --tw-border-opacity:1; border-color: rgba(199,78,78,var(--tw-border-opac=
ity)); --tw-bg-opacity:1; background-color: rgba(242,222,222,var(--tw-bg-op=
acity)); }

.dq-missing-email input { margin-right: 2rem; min-width: 18.75rem; }

.dq-missing-email-errors { margin-top: 2rem; display: block; padding: 1rem =
2rem; }

.dq-payment-field input:focus-within ~ label, .dq-payment-field input:not(:=
placeholder-shown) ~ label { --tw-text-opacity:1; color: rgba(42,84,167,var=
(--tw-text-opacity)); --tw-translate-x:0; --tw-rotate:0; --tw-skew-x:0; --t=
w-skew-y:0; transform: translateX(var(--tw-translate-x)) translateY(var(--t=
w-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(=
--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); --tw-sca=
le-x:0.75; --tw-scale-y:0.75; --tw-translate-y:-1.5rem; }

.dq-payment-field input::placeholder { color: transparent; }

.dq-line-through-thin { text-decoration: line-through 1px rgb(156, 169, 188=
); }

.dq-space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse:0; m=
argin-top: calc(0.25rem*(1 - var(--tw-space-y-reverse))); margin-bottom: ca=
lc(0.25rem*var(--tw-space-y-reverse)); }

.dq-space-x-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse:0; m=
argin-right: calc(0.5rem*var(--tw-space-x-reverse)); margin-left: calc(0.5r=
em*(1 - var(--tw-space-x-reverse))); }

.dq-space-x-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse:0; m=
argin-right: calc(0.75rem*var(--tw-space-x-reverse)); margin-left: calc(0.7=
5rem*(1 - var(--tw-space-x-reverse))); }

.dq-space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse:0; m=
argin-top: calc(1rem*(1 - var(--tw-space-y-reverse))); margin-bottom: calc(=
1rem*var(--tw-space-y-reverse)); }

.dq-space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse:0; m=
argin-right: calc(1rem*var(--tw-space-x-reverse)); margin-left: calc(1rem*(=
1 - var(--tw-space-x-reverse))); }

.dq-space-y-6 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse:0; m=
argin-top: calc(1.5rem*(1 - var(--tw-space-y-reverse))); margin-bottom: cal=
c(1.5rem*var(--tw-space-y-reverse)); }

.dq-space-x-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse:0; m=
argin-right: calc(2rem*var(--tw-space-x-reverse)); margin-left: calc(2rem*(=
1 - var(--tw-space-x-reverse))); }

.dq-divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse:0; b=
order-right-width: calc(1px*var(--tw-divide-x-reverse)); border-left-width:=
 calc(1px*(1 - var(--tw-divide-x-reverse))); }

.dq-divide-gray-300 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity=
:1; border-color: rgba(156,169,188,var(--tw-divide-opacity)); }

.dq-sr-only { position: absolute; width: 1px; height: 1px; padding: 0px; ma=
rgin: -1px; overflow: hidden; clip: rect(0px, 0px, 0px, 0px); white-space: =
nowrap; border-width: 0px; }

.dq-appearance-none { appearance: none; }

.dq-bg-transparent { background-color: transparent; }

.dq-bg-white { --tw-bg-opacity:1; background-color: rgba(255,255,255,var(--=
tw-bg-opacity)); }

.dq-bg-gray-50 { --tw-bg-opacity:1; background-color: rgba(247,248,250,var(=
--tw-bg-opacity)); }

.dq-bg-gray-100 { --tw-bg-opacity:1; background-color: rgba(232,235,240,var=
(--tw-bg-opacity)); }

.dq-bg-gray-150 { --tw-bg-opacity:1; background-color: rgba(217,222,229,var=
(--tw-bg-opacity)); }

.dq-bg-gray-200 { --tw-bg-opacity:1; background-color: rgba(186,196,209,var=
(--tw-bg-opacity)); }

.dq-bg-gray-300 { --tw-bg-opacity:1; background-color: rgba(156,169,188,var=
(--tw-bg-opacity)); }

.dq-bg-gray-500 { --tw-bg-opacity:1; background-color: rgba(97,117,145,var(=
--tw-bg-opacity)); }

.dq-bg-gray-600 { --tw-bg-opacity:1; background-color: rgba(77,92,114,var(-=
-tw-bg-opacity)); }

.dq-bg-gray-700 { --tw-bg-opacity:1; background-color: rgba(56,68,84,var(--=
tw-bg-opacity)); }

.dq-bg-gray-800 { --tw-bg-opacity:1; background-color: rgba(36,43,53,var(--=
tw-bg-opacity)); }

.dq-bg-black { --tw-bg-opacity:1; background-color: rgba(0,0,0,var(--tw-bg-=
opacity)); }

.dq-bg-green-100 { --tw-bg-opacity:1; background-color: rgba(222,239,215,va=
r(--tw-bg-opacity)); }

.dq-bg-green-300 { --tw-bg-opacity:1; background-color: rgba(94,224,169,var=
(--tw-bg-opacity)); }

.dq-bg-green { --tw-bg-opacity:1; background-color: rgba(57,207,144,var(--t=
w-bg-opacity)); }

.dq-bg-blue-100 { --tw-bg-opacity:1; background-color: rgba(42,84,167,var(-=
-tw-bg-opacity)); }

.dq-bg-blue { --tw-bg-opacity:1; background-color: rgba(41,161,248,var(--tw=
-bg-opacity)); }

.dq-bg-gold { --tw-bg-opacity:1; background-color: rgba(247,224,142,var(--t=
w-bg-opacity)); }

.dq-bg-red-100 { --tw-bg-opacity:1; background-color: rgba(242,222,222,var(=
--tw-bg-opacity)); }

.dq-bg-red { --tw-bg-opacity:1; background-color: rgba(199,78,78,var(--tw-b=
g-opacity)); }

.dq-bg-orange-100 { --tw-bg-opacity:1; background-color: rgba(252,248,227,v=
ar(--tw-bg-opacity)); }

.dq-bg-orange { --tw-bg-opacity:1; background-color: rgba(239,164,96,var(--=
tw-bg-opacity)); }

.dq-bg-linkedin { --tw-bg-opacity:1; background-color: rgba(0,125,184,var(-=
-tw-bg-opacity)); }

.\!dq-bg-transparent { background-color: transparent !important; }

.\!dq-bg-white { --tw-bg-opacity:1 !important; background-color: rgba(255,2=
55,255,var(--tw-bg-opacity)) !important; }

.\!dq-bg-gray-50 { --tw-bg-opacity:1 !important; background-color: rgba(247=
,248,250,var(--tw-bg-opacity)) !important; }

.\!dq-bg-gray-100 { --tw-bg-opacity:1 !important; background-color: rgba(23=
2,235,240,var(--tw-bg-opacity)) !important; }

.\!dq-bg-green { --tw-bg-opacity:1 !important; background-color: rgba(57,20=
7,144,var(--tw-bg-opacity)) !important; }

.\!dq-bg-blue-100 { --tw-bg-opacity:1 !important; background-color: rgba(42=
,84,167,var(--tw-bg-opacity)) !important; }

.\!dq-bg-blue { --tw-bg-opacity:1 !important; background-color: rgba(41,161=
,248,var(--tw-bg-opacity)) !important; }

.\!dq-bg-gold { --tw-bg-opacity:1 !important; background-color: rgba(247,22=
4,142,var(--tw-bg-opacity)) !important; }

.dq-group:hover .group-hover\:dq-bg-blue { --tw-bg-opacity:1; background-co=
lor: rgba(41,161,248,var(--tw-bg-opacity)); }

.hover\:dq-bg-gray-50:hover { --tw-bg-opacity:1; background-color: rgba(247=
,248,250,var(--tw-bg-opacity)); }

.hover\:dq-bg-gray-100:hover { --tw-bg-opacity:1; background-color: rgba(23=
2,235,240,var(--tw-bg-opacity)); }

.hover\:dq-bg-gray-150:hover { --tw-bg-opacity:1; background-color: rgba(21=
7,222,229,var(--tw-bg-opacity)); }

.hover\:dq-bg-gray-700:hover { --tw-bg-opacity:1; background-color: rgba(56=
,68,84,var(--tw-bg-opacity)); }

.hover\:dq-bg-green:hover { --tw-bg-opacity:1; background-color: rgba(57,20=
7,144,var(--tw-bg-opacity)); }

.hover\:dq-bg-blue-100:hover { --tw-bg-opacity:1; background-color: rgba(42=
,84,167,var(--tw-bg-opacity)); }

.hover\:dq-bg-linkedin-100:hover { --tw-bg-opacity:1; background-color: rgb=
a(0,91,133,var(--tw-bg-opacity)); }

.focus\:dq-bg-gray-150:focus { --tw-bg-opacity:1; background-color: rgba(21=
7,222,229,var(--tw-bg-opacity)); }

.focus\:dq-bg-green:focus { --tw-bg-opacity:1; background-color: rgba(57,20=
7,144,var(--tw-bg-opacity)); }

.dq-dark .dark\:dq-bg-gray-600 { --tw-bg-opacity:1; background-color: rgba(=
77,92,114,var(--tw-bg-opacity)); }

.dq-dark .dark\:dq-bg-gray-700 { --tw-bg-opacity:1; background-color: rgba(=
56,68,84,var(--tw-bg-opacity)); }

.dq-dark .dark\:dq-bg-gray-800 { --tw-bg-opacity:1; background-color: rgba(=
36,43,53,var(--tw-bg-opacity)); }

.dq-dark .dark\:dq-bg-black { --tw-bg-opacity:1; background-color: rgba(0,0=
,0,var(--tw-bg-opacity)); }

.dq-bg-opacity-10 { --tw-bg-opacity:0.1; }

.dq-bg-opacity-20 { --tw-bg-opacity:0.2; }

.dq-bg-opacity-25 { --tw-bg-opacity:0.25; }

.dq-bg-opacity-50 { --tw-bg-opacity:0.5; }

.dq-bg-opacity-80 { --tw-bg-opacity:0.8; }

.dq-bg-opacity-95 { --tw-bg-opacity:0.95; }

.dq-bg-opacity-100 { --tw-bg-opacity:1; }

.dq-bg-center { background-position: 50% center; }

.dq-bg-right { background-position: 100% center; }

.dq-bg-cover { background-size: cover; }

.dq-border-transparent { border-color: transparent; }

.dq-border-white { --tw-border-opacity:1; border-color: rgba(255,255,255,va=
r(--tw-border-opacity)); }

.dq-border-gray-100 { --tw-border-opacity:1; border-color: rgba(232,235,240=
,var(--tw-border-opacity)); }

.dq-border-gray-150 { --tw-border-opacity:1; border-color: rgba(217,222,229=
,var(--tw-border-opacity)); }

.dq-border-gray-200 { --tw-border-opacity:1; border-color: rgba(186,196,209=
,var(--tw-border-opacity)); }

.dq-border-gray-300 { --tw-border-opacity:1; border-color: rgba(156,169,188=
,var(--tw-border-opacity)); }

.dq-border-gray-600 { --tw-border-opacity:1; border-color: rgba(77,92,114,v=
ar(--tw-border-opacity)); }

.dq-border-gray-700 { --tw-border-opacity:1; border-color: rgba(56,68,84,va=
r(--tw-border-opacity)); }

.dq-border-gray-800 { --tw-border-opacity:1; border-color: rgba(36,43,53,va=
r(--tw-border-opacity)); }

.dq-border-black { --tw-border-opacity:1; border-color: rgba(0,0,0,var(--tw=
-border-opacity)); }

.dq-border-green-200 { --tw-border-opacity:1; border-color: rgba(60,119,61,=
var(--tw-border-opacity)); }

.dq-border-green { --tw-border-opacity:1; border-color: rgba(57,207,144,var=
(--tw-border-opacity)); }

.dq-border-blue-100 { --tw-border-opacity:1; border-color: rgba(42,84,167,v=
ar(--tw-border-opacity)); }

.dq-border-blue { --tw-border-opacity:1; border-color: rgba(41,161,248,var(=
--tw-border-opacity)); }

.dq-border-red-100 { --tw-border-opacity:1; border-color: rgba(242,222,222,=
var(--tw-border-opacity)); }

.dq-border-red { --tw-border-opacity:1; border-color: rgba(199,78,78,var(--=
tw-border-opacity)); }

.dq-border-orange { --tw-border-opacity:1; border-color: rgba(239,164,96,va=
r(--tw-border-opacity)); }

.\!dq-border-gray-100 { --tw-border-opacity:1 !important; border-color: rgb=
a(232,235,240,var(--tw-border-opacity)) !important; }

.\!dq-border-green { --tw-border-opacity:1 !important; border-color: rgba(5=
7,207,144,var(--tw-border-opacity)) !important; }

.\!dq-border-blue { --tw-border-opacity:1 !important; border-color: rgba(41=
,161,248,var(--tw-border-opacity)) !important; }

.focus-within\:dq-border-blue-100:focus-within { --tw-border-opacity:1; bor=
der-color: rgba(42,84,167,var(--tw-border-opacity)); }

.hover\:dq-border-gray-150:hover { --tw-border-opacity:1; border-color: rgb=
a(217,222,229,var(--tw-border-opacity)); }

.hover\:dq-border-green:hover { --tw-border-opacity:1; border-color: rgba(5=
7,207,144,var(--tw-border-opacity)); }

.focus\:dq-border-blue:focus { --tw-border-opacity:1; border-color: rgba(41=
,161,248,var(--tw-border-opacity)); }

.dq-dark .dark\:dq-border-black { --tw-border-opacity:1; border-color: rgba=
(0,0,0,var(--tw-border-opacity)); }

.dq-rounded-none { border-radius: 0px; }

.dq-rounded-sm { border-radius: 0.125rem; }

.dq-rounded { border-radius: 0.25rem; }

.dq-rounded-md { border-radius: 0.375rem; }

.dq-rounded-lg { border-radius: 0.5rem; }

.dq-rounded-full { border-radius: 9999px; }

.dq-rounded-btn { border-radius: 5px; }

.dq-rounded-t-none { border-top-left-radius: 0px; border-top-right-radius: =
0px; }

.dq-rounded-r-none { border-top-right-radius: 0px; border-bottom-right-radi=
us: 0px; }

.dq-rounded-b { border-bottom-right-radius: 0.25rem; border-bottom-left-rad=
ius: 0.25rem; }

.\!dq-rounded-none { border-radius: 0px !important; }

.\!dq-rounded-full { border-radius: 9999px !important; }

.\!dq-rounded-l-none { border-top-left-radius: 0px !important; border-botto=
m-left-radius: 0px !important; }

.first\:dq-rounded-l-btn:first-child { border-top-left-radius: 5px; border-=
bottom-left-radius: 5px; }

.last\:dq-rounded-r-btn:last-child { border-top-right-radius: 5px; border-b=
ottom-right-radius: 5px; }

.dq-border-solid { border-style: solid; }

.dq-border-none { border-style: none; }

.dq-border-0 { border-width: 0px; }

.dq-border-2 { border-width: 2px; }

.dq-border { border-width: 1px; }

.dq-border-t-0 { border-top-width: 0px; }

.dq-border-r-0 { border-right-width: 0px; }

.dq-border-b-0 { border-bottom-width: 0px; }

.dq-border-l-0 { border-left-width: 0px; }

.dq-border-l-2 { border-left-width: 2px; }

.dq-border-t { border-top-width: 1px; }

.dq-border-r { border-right-width: 1px; }

.dq-border-b { border-bottom-width: 1px; }

.dq-border-l { border-left-width: 1px; }

.\!dq-border-0 { border-width: 0px !important; }

.\!dq-border-2 { border-width: 2px !important; }

.dq-cursor-default { cursor: default; }

.dq-cursor-pointer { cursor: pointer; }

.dq-cursor-not-allowed { cursor: not-allowed; }

.dq-block { display: block; }

.dq-inline-block { display: inline-block; }

.dq-inline { display: inline; }

.dq-flex { display: flex; }

.dq-inline-flex { display: inline-flex; }

.dq-grid { display: grid; }

.dq-hidden { display: none; }

.dq-flex-row { flex-direction: row; }

.dq-flex-col { flex-direction: column; }

.dq-flex-col-reverse { flex-direction: column-reverse; }

.dq-flex-wrap { flex-wrap: wrap; }

.dq-items-start { align-items: flex-start; }

.dq-items-end { align-items: flex-end; }

.dq-items-center { align-items: center; }

.dq-items-baseline { align-items: baseline; }

.dq-items-stretch { align-items: stretch; }

.\!dq-items-start { align-items: flex-start !important; }

.dq-self-end { align-self: flex-end; }

.dq-self-center { align-self: center; }

.dq-justify-start { justify-content: flex-start; }

.dq-justify-end { justify-content: flex-end; }

.dq-justify-center { justify-content: center; }

.dq-justify-between { justify-content: space-between; }

.\!dq-justify-start { justify-content: flex-start !important; }

.dq-flex-1 { flex: 1 1 0%; }

.dq-flex-auto { flex: 1 1 auto; }

.dq-flex-grow { flex-grow: 1; }

.dq-flex-shrink-0 { flex-shrink: 0; }

.dq-flex-shrink { flex-shrink: 1; }

.dq-float-right { float: right; }

.dq-font-sans { font-family: source-sans-pro, sans-serif; }

.dq-font-serif { font-family: source-code-pro, serif; }

.dq-font-mono { font-family: source-code-pro, monospace; }

.dq-font-thin { font-weight: 100; }

.dq-font-normal { font-weight: 400; }

.dq-font-medium { font-weight: 500; }

.dq-font-semibold { font-weight: 600; }

.dq-font-bold { font-weight: 700; }

.\!dq-font-bold { font-weight: 700 !important; }

.dq-h-0 { height: 0px; }

.dq-h-2 { height: 0.5rem; }

.dq-h-4 { height: 1rem; }

.dq-h-5 { height: 1.25rem; }

.dq-h-6 { height: 1.5rem; }

.dq-h-7 { height: 1.75rem; }

.dq-h-8 { height: 2rem; }

.dq-h-10 { height: 2.5rem; }

.dq-h-12 { height: 3rem; }

.dq-h-16 { height: 4rem; }

.dq-h-20 { height: 5rem; }

.dq-h-64 { height: 16rem; }

.dq-h-auto { height: auto; }

.dq-h-px { height: 1px; }

.dq-h-0\.5 { height: 0.125rem; }

.dq-h-2\.5 { height: 21px; }

.dq-h-full { height: 100%; }

.dq-h-screen { height: 100vh; }

.dq-h-btn-md { height: 35px; }

.dq-h-console { height: 35%; }

.dq-h-130p { height: 130px; }

.\!dq-h-3 { height: 0.75rem !important; }

.\!dq-h-full { height: 100% !important; }

.\!dq-h-btn-md { height: 35px !important; }

.dq-text-xs { font-size: 0.75rem; line-height: 1rem; }

.dq-text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.dq-text-base { font-size: 1rem; line-height: 1.5rem; }

.dq-text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.dq-text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.dq-text-2xl { font-size: 1.5rem; line-height: 2rem; }

.dq-text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.dq-text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.dq-text-5xl { font-size: 3rem; line-height: 1; }

.dq-text-6xl { font-size: 3.75rem; line-height: 1; }

.dq-text-7xl { font-size: 4.5rem; line-height: 1; }

.\!dq-text-sm { font-size: 0.875rem !important; line-height: 1.25rem !impor=
tant; }

.\!dq-text-xl { font-size: 1.25rem !important; line-height: 1.75rem !import=
ant; }

.\!dq-text-2xl { font-size: 1.5rem !important; line-height: 2rem !important=
; }

.dq-leading-4 { line-height: 1rem; }

.dq-leading-5 { line-height: 1.25rem; }

.dq-leading-9 { line-height: 2.25rem; }

.dq-leading-none { line-height: 1; }

.dq-leading-tight { line-height: 1.25; }

.dq-leading-normal { line-height: 1.5; }

.dq-leading-relaxed { line-height: 1.625; }

.dq-leading-loose { line-height: 2; }

.dq-list-none { list-style-type: none; }

.dq-list-disc { list-style-type: disc; }

.dq-list-decimal { list-style-type: decimal; }

.dq-m-0 { margin: 0px; }

.dq-m-1 { margin: 0.25rem; }

.dq-m-2 { margin: 0.5rem; }

.dq-m-6 { margin: 1.5rem; }

.dq-m-auto { margin: auto; }

.dq-my-0 { margin-top: 0px; margin-bottom: 0px; }

.dq-mx-0 { margin-left: 0px; margin-right: 0px; }

.dq-my-1 { margin-top: 0.25rem; margin-bottom: 0.25rem; }

.dq-my-2 { margin-top: 0.5rem; margin-bottom: 0.5rem; }

.dq-mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; }

.dq-mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; }

.dq-my-4 { margin-top: 1rem; margin-bottom: 1rem; }

.dq-mx-4 { margin-left: 1rem; margin-right: 1rem; }

.dq-my-6 { margin-top: 1.5rem; margin-bottom: 1.5rem; }

.dq-my-8 { margin-top: 2rem; margin-bottom: 2rem; }

.dq-mx-8 { margin-left: 2rem; margin-right: 2rem; }

.dq-mx-20 { margin-left: 5rem; margin-right: 5rem; }

.dq-mx-auto { margin-left: auto; margin-right: auto; }

.dq--mx-2 { margin-left: -0.5rem; margin-right: -0.5rem; }

.dq--mx-4 { margin-left: -1rem; margin-right: -1rem; }

.dq-mt-0 { margin-top: 0px; }

.dq-mr-0 { margin-right: 0px; }

.dq-mb-0 { margin-bottom: 0px; }

.dq-ml-0 { margin-left: 0px; }

.dq-mt-1 { margin-top: 0.25rem; }

.dq-mr-1 { margin-right: 0.25rem; }

.dq-mb-1 { margin-bottom: 0.25rem; }

.dq-ml-1 { margin-left: 0.25rem; }

.dq-mt-2 { margin-top: 0.5rem; }

.dq-mr-2 { margin-right: 0.5rem; }

.dq-mb-2 { margin-bottom: 0.5rem; }

.dq-ml-2 { margin-left: 0.5rem; }

.dq-mb-3 { margin-bottom: 0.75rem; }

.dq-ml-3 { margin-left: 0.75rem; }

.dq-mt-4 { margin-top: 1rem; }

.dq-mr-4 { margin-right: 1rem; }

.dq-mb-4 { margin-bottom: 1rem; }

.dq-ml-4 { margin-left: 1rem; }

.dq-mt-5 { margin-top: 1.25rem; }

.dq-mb-5 { margin-bottom: 1.25rem; }

.dq-mt-6 { margin-top: 1.5rem; }

.dq-mr-6 { margin-right: 1.5rem; }

.dq-mb-6 { margin-bottom: 1.5rem; }

.dq-ml-6 { margin-left: 1.5rem; }

.dq-ml-7 { margin-left: 1.75rem; }

.dq-mt-8 { margin-top: 2rem; }

.dq-mr-8 { margin-right: 2rem; }

.dq-mb-8 { margin-bottom: 2rem; }

.dq-ml-8 { margin-left: 2rem; }

.dq-mt-10 { margin-top: 2.5rem; }

.dq-mb-10 { margin-bottom: 2.5rem; }

.dq-mt-11 { margin-top: 2.75rem; }

.dq-mb-12 { margin-bottom: 3rem; }

.dq-ml-12 { margin-left: 3rem; }

.dq-mt-14 { margin-top: 3.5rem; }

.dq-mr-14 { margin-right: 3.5rem; }

.dq-mb-14 { margin-bottom: 3.5rem; }

.dq-mt-16 { margin-top: 4rem; }

.dq-mr-16 { margin-right: 4rem; }

.dq-mb-16 { margin-bottom: 4rem; }

.dq-mt-36 { margin-top: 9rem; }

.dq-mt-auto { margin-top: auto; }

.dq-mt-1\.5 { margin-top: 0.375rem; }

.dq--mt-1 { margin-top: -0.25rem; }

.dq--ml-2 { margin-left: -0.5rem; }

.dq--mt-4 { margin-top: -1rem; }

.dq--mt-44 { margin-top: -11rem; }

.\!dq-m-0 { margin: 0px !important; }

.\!dq-my-0 { margin-top: 0px !important; margin-bottom: 0px !important; }

.\!dq-mx-2 { margin-left: 0.5rem !important; margin-right: 0.5rem !importan=
t; }

.\!dq-mb-0 { margin-bottom: 0px !important; }

.\!dq-mb-2 { margin-bottom: 0.5rem !important; }

.\!dq-mb-6 { margin-bottom: 1.5rem !important; }

.first\:dq-mt-0:first-child { margin-top: 0px; }

.first\:dq-mr-1:first-child { margin-right: 0.25rem; }

.first\:dq-mr-2:first-child { margin-right: 0.5rem; }

.first\:dq-mr-4:first-child { margin-right: 1rem; }

.last\:dq-mb-0:last-child { margin-bottom: 0px; }

.last\:dq-ml-1:last-child { margin-left: 0.25rem; }

.last\:dq-ml-2:last-child { margin-left: 0.5rem; }

.last\:dq-ml-4:last-child { margin-left: 1rem; }

.dq-max-h-80 { max-height: 20rem; }

.dq-max-w-600 { max-width: 37.5rem; }

.dq-max-w-700 { max-width: 43.75rem; }

.dq-max-w-800 { max-width: 800px; }

.dq-max-w-none { max-width: none; }

.dq-max-w-6xl { max-width: 72rem; }

.dq-max-w-7xl { max-width: 80rem; }

.dq-max-w-full { max-width: 100%; }

.dq-max-w-screen-lg { max-width: 1024px; }

.dq-max-w-content { max-width: 78.125rem; }

.dq-max-w-account-preferred-width { max-width: 31.25rem; }

.dq-min-h-200 { min-height: 200px; }

.dq-min-h-250 { min-height: 250px; }

.dq-min-h-600 { min-height: 600px; }

.dq-min-h-full { min-height: 100%; }

.dq-min-h-screen { min-height: 100vh; }

.dq-min-h-paper { min-height: 11.75in; }

.dq-min-h-header { min-height: 260px; }

.dq-min-w-100 { min-width: 6.25rem; }

.dq-min-w-150 { min-width: 9.375rem; }

.dq-min-w-200 { min-width: 12.5rem; }

.dq-min-w-1\/2 { min-width: 50%; }

.dq-min-w-3\/4 { min-width: 75%; }

.dq-min-w-badge { min-width: 0.625rem; }

.dq-opacity-0 { opacity: 0; }

.dq-opacity-100 { opacity: 1; }

.dq-group:hover .group-hover\:dq-opacity-90 { opacity: 0.9; }

.dq-outline-none, .focus\:dq-outline-none:focus { outline: transparent soli=
d 2px; outline-offset: 2px; }

.\!dq-outline-none { outline: transparent solid 2px !important; outline-off=
set: 2px !important; }

.dq-overflow-auto { overflow: auto; }

.dq-overflow-hidden { overflow: hidden; }

.dq-overflow-x-auto { overflow-x: auto; }

.dq-overflow-y-auto { overflow-y: auto; }

.dq-overflow-x-scroll { overflow-x: scroll; }

.dq-overflow-y-scroll { overflow-y: scroll; }

.dq-p-0 { padding: 0px; }

.dq-p-1 { padding: 0.25rem; }

.dq-p-2 { padding: 0.5rem; }

.dq-p-4 { padding: 1rem; }

.dq-p-6 { padding: 1.5rem; }

.dq-p-8 { padding: 2rem; }

.dq-p-10 { padding: 2.5rem; }

.dq-p-12 { padding: 3rem; }

.dq-py-0 { padding-top: 0px; padding-bottom: 0px; }

.dq-py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }

.dq-px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }

.dq-py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }

.dq-px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }

.dq-py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }

.dq-px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.dq-py-4 { padding-top: 1rem; padding-bottom: 1rem; }

.dq-px-4 { padding-left: 1rem; padding-right: 1rem; }

.dq-py-5 { padding-top: 1.25rem; padding-bottom: 1.25rem; }

.dq-px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.dq-px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.dq-px-7 { padding-left: 1.75rem; padding-right: 1.75rem; }

.dq-py-8 { padding-top: 2rem; padding-bottom: 2rem; }

.dq-px-8 { padding-left: 2rem; padding-right: 2rem; }

.dq-py-10 { padding-top: 2.5rem; padding-bottom: 2.5rem; }

.dq-px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }

.dq-px-12 { padding-left: 3rem; padding-right: 3rem; }

.dq-px-14 { padding-left: 3.5rem; padding-right: 3.5rem; }

.dq-py-20 { padding-top: 5rem; padding-bottom: 5rem; }

.dq-py-3\.5 { padding-top: 0.875rem; padding-bottom: 0.875rem; }

.dq-pr-0 { padding-right: 0px; }

.dq-pl-0 { padding-left: 0px; }

.dq-pt-1 { padding-top: 0.25rem; }

.dq-pr-1 { padding-right: 0.25rem; }

.dq-pt-2 { padding-top: 0.5rem; }

.dq-pr-2 { padding-right: 0.5rem; }

.dq-pb-2 { padding-bottom: 0.5rem; }

.dq-pl-2 { padding-left: 0.5rem; }

.dq-pl-3 { padding-left: 0.75rem; }

.dq-pt-4 { padding-top: 1rem; }

.dq-pr-4 { padding-right: 1rem; }

.dq-pb-4 { padding-bottom: 1rem; }

.dq-pl-4 { padding-left: 1rem; }

.dq-pt-6 { padding-top: 1.5rem; }

.dq-pr-6 { padding-right: 1.5rem; }

.dq-pb-6 { padding-bottom: 1.5rem; }

.dq-pl-6 { padding-left: 1.5rem; }

.dq-pt-8 { padding-top: 2rem; }

.dq-pb-8 { padding-bottom: 2rem; }

.dq-pt-10 { padding-top: 2.5rem; }

.dq-pl-10 { padding-left: 2.5rem; }

.dq-pt-12 { padding-top: 3rem; }

.dq-pr-12 { padding-right: 3rem; }

.dq-pb-12 { padding-bottom: 3rem; }

.dq-pb-20 { padding-bottom: 5rem; }

.dq-pr-24 { padding-right: 6rem; }

.\!dq-p-0 { padding: 0px !important; }

.\!dq-p-2 { padding: 0.5rem !important; }

.\!dq-py-0 { padding-top: 0px !important; padding-bottom: 0px !important; }

.\!dq-py-1 { padding-top: 0.25rem !important; padding-bottom: 0.25rem !impo=
rtant; }

.\!dq-py-2 { padding-top: 0.5rem !important; padding-bottom: 0.5rem !import=
ant; }

.\!dq-px-2 { padding-left: 0.5rem !important; padding-right: 0.5rem !import=
ant; }

.\!dq-px-4 { padding-left: 1rem !important; padding-right: 1rem !important;=
 }

.\!dq-px-6 { padding-left: 1.5rem !important; padding-right: 1.5rem !import=
ant; }

.dq-placeholder-gray-300::placeholder { --tw-placeholder-opacity:1; color: =
rgba(156,169,188,var(--tw-placeholder-opacity)); }

.dq-pointer-events-none { pointer-events: none; }

.dq-fixed { position: fixed; }

.dq-absolute { position: absolute; }

.dq-relative { position: relative; }

.dq-inset-0 { right: 0px; left: 0px; }

.dq-inset-0, .dq-inset-y-0 { top: 0px; bottom: 0px; }

.dq--inset-y-1 { top: -4px; bottom: -4px; }

.dq--inset-y-1\.2e { top: -1.2em; bottom: -1.2em; }

.dq-top-0 { top: 0px; }

.dq-right-0 { right: 0px; }

.dq-bottom-0 { bottom: 0px; }

.dq-left-0 { left: 0px; }

.dq-top-1 { top: 8px; }

.dq-top-3 { top: 24px; }

.dq-right-3 { right: 24px; }

.dq-top-4 { top: 32px; }

.dq-right-4 { right: 32px; }

.dq-right-5 { right: 40px; }

.dq-right-8 { right: 64px; }

.dq-top-base { top: 4px; }

.dq-right-base { right: 4px; }

.dq-left-base { left: 4px; }

.dq--top-1 { top: -4px; }

.dq-top-6p { top: 6px; }

.dq-top-1r { top: 1rem; }

.dq-right-1r { right: 1rem; }

.dq-left-1r { left: 1rem; }

.dq-top-1\/2 { top: 50%; }

.dq-top-2\/5 { top: 40%; }

.dq-top-compact { top: -56px; }

.dq--top-paper { top: -0.5in; }

.dq--top-gutter { top: -40px; }

.\!dq-top-0 { top: 0px !important; }

* { --tw-shadow:0 0 transparent; }

.dq-shadow-sm { --tw-shadow:0 1px 2px 0 rgba(0,0,0,0.05); }

.dq-shadow, .dq-shadow-sm { box-shadow: var(--tw-ring-offset-shadow,0 0 tra=
nsparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.dq-shadow { --tw-shadow:0 1px 3px 0 rgba(0,0,0,0.1),0 1px 2px 0 rgba(0,0,0=
,0.06); }

.dq-shadow-md { --tw-shadow:0 4px 6px -1px rgba(0,0,0,0.1),0 2px 4px -1px r=
gba(0,0,0,0.06); }

.dq-shadow-lg, .dq-shadow-md { box-shadow: var(--tw-ring-offset-shadow,0 0 =
transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.dq-shadow-lg { --tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0 4px 6px -2px=
 rgba(0,0,0,0.05); }

.dq-shadow-xl { --tw-shadow:0 20px 25px -5px rgba(0,0,0,0.1),0 10px 10px -5=
px rgba(0,0,0,0.04); }

.dq-shadow-none, .dq-shadow-xl { box-shadow: var(--tw-ring-offset-shadow,0 =
0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.dq-shadow-none { --tw-shadow:0 0 transparent; }

.dq-shadow-paper { --tw-shadow:0 1rem 2rem rgba(0,0,0,0.9); }

.dq-shadow-card, .dq-shadow-paper { box-shadow: var(--tw-ring-offset-shadow=
,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.dq-shadow-card { --tw-shadow:0 2px 3px 0 #9fb0d0; }

.hover\:dq-shadow-lg:hover { --tw-shadow:0 10px 15px -3px rgba(0,0,0,0.1),0=
 4px 6px -2px rgba(0,0,0,0.05); box-shadow: var(--tw-ring-offset-shadow,0 0=
 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

* { --tw-ring-inset:var(--tw-empty, ); --tw-ring-offset-width:0px; --tw-rin=
g-offset-color:#fff; --tw-ring-color:rgba(59,130,246,0.5); --tw-ring-offset=
-shadow:0 0 transparent; --tw-ring-shadow:0 0 transparent; }

.dq-ring-1 { --tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 var(--tw-ri=
ng-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow:var(--tw-rin=
g-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color)=
; }

.dq-ring-1, .focus\:dq-ring-2:focus { box-shadow: var(--tw-ring-offset-shad=
ow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus\:dq-ring-2:focus { --tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 =
0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow=
:var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--t=
w-ring-color); }

.focus\:dq-ring:focus { --tw-ring-offset-shadow:var(--tw-ring-inset) 0 0 0 =
var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow:v=
ar(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-=
ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow)=
,var(--tw-shadow,0 0 transparent); }

.focus\:dq-ring-inset:focus { --tw-ring-inset:inset; }

.dq-dark .dark\:focus\:dq-ring-offset-gray-700:focus { --tw-ring-offset-col=
or:#384454; }

.focus\:dq-ring-offset-0:focus { --tw-ring-offset-width:0px; }

.focus\:dq-ring-offset-2:focus { --tw-ring-offset-width:2px; }

.dq-ring-black { --tw-ring-opacity:1; --tw-ring-color:rgba(0,0,0,var(--tw-r=
ing-opacity)); }

.focus\:dq-ring-blue-100:focus { --tw-ring-opacity:1; --tw-ring-color:rgba(=
42,84,167,var(--tw-ring-opacity)); }

.focus\:dq-ring-blue:focus { --tw-ring-opacity:1; --tw-ring-color:rgba(41,1=
61,248,var(--tw-ring-opacity)); }

.dq-ring-opacity-5 { --tw-ring-opacity:0.05; }

.focus\:dq-ring-opacity-50:focus { --tw-ring-opacity:0.5; }

.dq-text-left { text-align: left; }

.dq-text-center { text-align: center; }

.dq-text-right { text-align: right; }

.dq-text-inherit { color: inherit; }

.dq-text-white { --tw-text-opacity:1; color: rgba(255,255,255,var(--tw-text=
-opacity)); }

.dq-text-gray-50 { --tw-text-opacity:1; color: rgba(247,248,250,var(--tw-te=
xt-opacity)); }

.dq-text-gray-100 { --tw-text-opacity:1; color: rgba(232,235,240,var(--tw-t=
ext-opacity)); }

.dq-text-gray-150 { --tw-text-opacity:1; color: rgba(217,222,229,var(--tw-t=
ext-opacity)); }

.dq-text-gray-200 { --tw-text-opacity:1; color: rgba(186,196,209,var(--tw-t=
ext-opacity)); }

.dq-text-gray-300 { --tw-text-opacity:1; color: rgba(156,169,188,var(--tw-t=
ext-opacity)); }

.dq-text-gray-400 { --tw-text-opacity:1; color: rgba(125,143,168,var(--tw-t=
ext-opacity)); }

.dq-text-gray-500 { --tw-text-opacity:1; color: rgba(97,117,145,var(--tw-te=
xt-opacity)); }

.dq-text-gray-600 { --tw-text-opacity:1; color: rgba(77,92,114,var(--tw-tex=
t-opacity)); }

.dq-text-gray-700 { --tw-text-opacity:1; color: rgba(56,68,84,var(--tw-text=
-opacity)); }

.dq-text-gray-800 { --tw-text-opacity:1; color: rgba(36,43,53,var(--tw-text=
-opacity)); }

.dq-text-black { --tw-text-opacity:1; color: rgba(0,0,0,var(--tw-text-opaci=
ty)); }

.dq-text-green-200 { --tw-text-opacity:1; color: rgba(60,119,61,var(--tw-te=
xt-opacity)); }

.dq-text-green { --tw-text-opacity:1; color: rgba(57,207,144,var(--tw-text-=
opacity)); }

.dq-text-blue-100 { --tw-text-opacity:1; color: rgba(42,84,167,var(--tw-tex=
t-opacity)); }

.dq-text-blue { --tw-text-opacity:1; color: rgba(41,161,248,var(--tw-text-o=
pacity)); }

.dq-text-red { --tw-text-opacity:1; color: rgba(199,78,78,var(--tw-text-opa=
city)); }

.dq-text-orange { --tw-text-opacity:1; color: rgba(239,164,96,var(--tw-text=
-opacity)); }

.\!dq-text-white { --tw-text-opacity:1 !important; color: rgba(255,255,255,=
var(--tw-text-opacity)) !important; }

.\!dq-text-gray-400 { --tw-text-opacity:1 !important; color: rgba(125,143,1=
68,var(--tw-text-opacity)) !important; }

.\!dq-text-gray-500 { --tw-text-opacity:1 !important; color: rgba(97,117,14=
5,var(--tw-text-opacity)) !important; }

.\!dq-text-gray-600 { --tw-text-opacity:1 !important; color: rgba(77,92,114=
,var(--tw-text-opacity)) !important; }

.\!dq-text-gray-700 { --tw-text-opacity:1 !important; color: rgba(56,68,84,=
var(--tw-text-opacity)) !important; }

.\!dq-text-black { --tw-text-opacity:1 !important; color: rgba(0,0,0,var(--=
tw-text-opacity)) !important; }

.\!dq-text-blue-100 { --tw-text-opacity:1 !important; color: rgba(42,84,167=
,var(--tw-text-opacity)) !important; }

.\!dq-text-facebook { --tw-text-opacity:1 !important; color: rgba(66,104,17=
9,var(--tw-text-opacity)) !important; }

.dq-group:hover .group-hover\:dq-text-white { --tw-text-opacity:1; color: r=
gba(255,255,255,var(--tw-text-opacity)); }

.dq-group:hover .group-hover\:dq-text-green { --tw-text-opacity:1; color: r=
gba(57,207,144,var(--tw-text-opacity)); }

.hover\:dq-text-white:hover { --tw-text-opacity:1; color: rgba(255,255,255,=
var(--tw-text-opacity)); }

.hover\:dq-text-gray-300:hover { --tw-text-opacity:1; color: rgba(156,169,1=
88,var(--tw-text-opacity)); }

.hover\:dq-text-gray-600:hover { --tw-text-opacity:1; color: rgba(77,92,114=
,var(--tw-text-opacity)); }

.hover\:dq-text-gray-700:hover { --tw-text-opacity:1; color: rgba(56,68,84,=
var(--tw-text-opacity)); }

.hover\:dq-text-black:hover { --tw-text-opacity:1; color: rgba(0,0,0,var(--=
tw-text-opacity)); }

.hover\:dq-text-green:hover { --tw-text-opacity:1; color: rgba(57,207,144,v=
ar(--tw-text-opacity)); }

.hover\:dq-text-blue-100:hover { --tw-text-opacity:1; color: rgba(42,84,167=
,var(--tw-text-opacity)); }

.dq-dark .dark\:dq-text-white { --tw-text-opacity:1; color: rgba(255,255,25=
5,var(--tw-text-opacity)); }

.dq-dark .dark\:dq-text-gray-50 { --tw-text-opacity:1; color: rgba(247,248,=
250,var(--tw-text-opacity)); }

.dq-dark .dark\:dq-text-gray-150 { --tw-text-opacity:1; color: rgba(217,222=
,229,var(--tw-text-opacity)); }

.dq-dark .dark\:hover\:dq-text-gray-500:hover { --tw-text-opacity:1; color:=
 rgba(97,117,145,var(--tw-text-opacity)); }

.dq-dark .dark\:hover\:dq-text-gray-700:hover { --tw-text-opacity:1; color:=
 rgba(56,68,84,var(--tw-text-opacity)); }

.dq-truncate { overflow: hidden; text-overflow: ellipsis; white-space: nowr=
ap; }

.dq-italic { font-style: italic; }

.dq-uppercase { text-transform: uppercase; }

.dq-lowercase { text-transform: lowercase; }

.dq-capitalize { text-transform: capitalize; }

.\!dq-uppercase { text-transform: uppercase !important; }

.dq-underline, .hover\:dq-underline:hover { text-decoration: underline; }

.hover\:dq-no-underline:hover { text-decoration: none; }

.\!dq-no-underline { text-decoration: none !important; }

.dq-antialiased { -webkit-font-smoothing: antialiased; }

.dq-tracking-wide { letter-spacing: 0.025em; }

.dq-align-middle { vertical-align: middle; }

.dq-invisible { visibility: hidden; }

.dq-whitespace-nowrap { white-space: nowrap; }

.dq-whitespace-pre-wrap { white-space: pre-wrap; }

.dq-w-0 { width: 0px; }

.dq-w-2 { width: 0.5rem; }

.dq-w-4 { width: 1rem; }

.dq-w-5 { width: 1.25rem; }

.dq-w-6 { width: 1.5rem; }

.dq-w-7 { width: 1.75rem; }

.dq-w-8 { width: 2rem; }

.dq-w-12 { width: 3rem; }

.dq-w-16 { width: 4rem; }

.dq-w-20 { width: 5rem; }

.dq-w-28 { width: 7rem; }

.dq-w-52 { width: 13rem; }

.dq-w-72 { width: 18rem; }

.dq-w-96 { width: 24rem; }

.dq-w-auto { width: auto; }

.dq-w-px { width: 1px; }

.dq-w-2\.5 { width: 21px; }

.dq-w-1\/2 { width: 50%; }

.dq-w-1\/3 { width: 33.3333%; }

.dq-w-2\/3 { width: 66.6667%; }

.dq-w-1\/4 { width: 25%; }

.dq-w-2\/5 { width: 40%; }

.dq-w-4\/5 { width: 80%; }

.dq-w-1\/6 { width: 16.6667%; }

.dq-w-2\/6 { width: 33.3333%; }

.dq-w-3\/6 { width: 50%; }

.dq-w-11\/12 { width: 91.6667%; }

.dq-w-full { width: 100%; }

.dq-w-130p { width: 130px; }

.dq-w-paper { width: 8.25in; }

.dq-z-0 { z-index: 0; }

.dq-z-10 { z-index: 10; }

.dq-z-20 { z-index: 20; }

.dq-z-50 { z-index: 50; }

.dq-gap-4 { gap: 1rem; }

.dq-grid-flow-col { grid-auto-flow: column; }

.dq-grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.dq-grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.dq-grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.dq-grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }

.dq-col-span-1 { grid-column: span 1 / span 1; }

.dq-col-span-4 { grid-column: span 4 / span 4; }

.dq-col-span-full { grid-column: 1 / -1; }

.dq-transform { --tw-translate-x:0; --tw-translate-y:0; --tw-rotate:0; --tw=
-skew-x:0; --tw-skew-y:0; --tw-scale-x:1; --tw-scale-y:1; transform: transl=
ateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--=
tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw=
-scale-x)) scaleY(var(--tw-scale-y)); }

.dq-origin-top-right { transform-origin: right top; }

.dq-scale-0 { --tw-scale-x:0; --tw-scale-y:0; }

.dq-scale-75 { --tw-scale-x:0.75; --tw-scale-y:0.75; }

.hover\:dq-scale-105:hover { --tw-scale-x:1.05; --tw-scale-y:1.05; }

.dq-translate-x-2\/4 { --tw-translate-x:50%; }

.dq--translate-y-6 { --tw-translate-y:-1.5rem; }

.dq--translate-y-1\/2 { --tw-translate-y:-50%; }

.dq-transition-all { transition-property: all; transition-timing-function: =
cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.dq-transition-colors { transition-property: background-color, border-color=
, color, fill, stroke; transition-timing-function: cubic-bezier(0.4, 0, 0.2=
, 1); transition-duration: 0.15s; }

.dq-transition-opacity { transition-property: opacity; transition-timing-fu=
nction: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.dq-transition-transform { transition-property: transform; transition-timin=
g-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 0.15s; }

.dq-duration-300 { transition-duration: 0.3s; }

@keyframes dq-spin {=20
  100% { transform: rotate(1turn); }
}

@keyframes dq-ping {=20
  75%, 100% { transform: scale(2); opacity: 0; }
}

@keyframes dq-pulse {=20
  50% { opacity: 0.5; }
}

@keyframes dq-bounce {=20
  0%, 100% { transform: translateY(-25%); animation-timing-function: cubic-=
bezier(0.8, 0, 1, 1); }
  50% { transform: none; animation-timing-function: cubic-bezier(0, 0, 0.2,=
 1); }
}

@keyframes dq-appear {=20
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes dq-draw-line {=20
  0% { width: 0px; }
  100% { width: 100%; }
}

@keyframes dq-popup {=20
  0% { transform: scale(0); }
  80% { transform: scale(1.25); }
  100% { transform: scale(1); }
}

@keyframes dq-colorchange-shield {=20
  0% { background-color: transparent; }
  100% { background-color: rgba(76, 83, 97, 0.95); }
}

@keyframes dq-highlight {=20
  0%, 100% { background-color: transparent; }
  10% { background-color: rgb(217, 222, 229); }
}

.dq-animate-spin { animation: 1s linear 0s infinite normal none running dq-=
spin; }

.dq-animate-appear { animation: 0.25s linear 0s 1 normal forwards running d=
q-appear; }

.dq-animate-draw-line { animation: 0.5s linear 0s 1 normal forwards running=
 dq-draw-line; }

.dq-animate-popup { animation: 0.25s linear 0s 1 normal forwards running dq=
-popup; }

.dq-animate-colorchange-shield { animation: 0.75s ease 0s 1 normal none run=
ning dq-colorchange-shield; }

.dq-animate-highlight { animation: 2s ease 0s 1 normal none running dq-high=
light; }

.dq-promo-notification-gradient { background: linear-gradient(90deg, rgb(17=
6, 97, 250), rgb(97, 180, 241) 50%, rgb(60, 222, 183)); }

.dq-container { max-width: 1096px; }

.dq-skeleton-loading-btn { background-color: rgb(12, 187, 155) !important; =
background-image: linear-gradient(90deg, rgb(12, 187, 155), rgb(14, 216, 17=
9), rgb(12, 187, 155)) !important; }

.dq-skeleton-loading-text { background-color: rgb(247, 247, 247) !important=
; background-image: linear-gradient(90deg, rgb(247, 247, 247), rgb(255, 255=
, 255), rgb(247, 247, 247)) !important; }

.dq-skeleton-progress-bar { top: -4px; border-radius: 9999px !important; }

.dq-input-block { font-weight: 400; border-radius: 5px; border-width: 2px; =
border-style: solid; }

.dq-editor .CodeMirror { font-size: 1rem; line-height: 1.5rem; background-c=
olor: transparent; --tw-text-opacity:1; color: rgba(36,43,53,var(--tw-text-=
opacity)); height: 100%; font-family: source-code-pro, monospace !important=
; }

.dq-editor .CodeMirror .CodeMirror-lines { padding: 0.5rem 0px 0.75rem; }

.dq-editor .CodeMirror .CodeMirror-line { line-height: 1.25rem !important; =
}

.dq-editor .CodeMirror .CodeMirror-linenumber { line-height: 1.5rem; --tw-t=
ext-opacity:1; color: rgba(156,169,188,var(--tw-text-opacity)); }

.dq-editor .CodeMirror .CodeMirror-gutters { border-right-width: 1px; --tw-=
border-opacity:1; border-color: rgba(186,196,209,var(--tw-border-opacity));=
 background-color: transparent; }

.dq-editor .CodeMirror .CodeMirror-guttermarker { color: rgb(29, 117, 179);=
 }

.dq-editor .CodeMirror .CodeMirror-guttermarker-subtle { --tw-text-opacity:=
1; color: rgba(232,235,240,var(--tw-text-opacity)); }

.dq-editor .CodeMirror .CodeMirror-cursor { background-color: rgba(156,169,=
188,var(--tw-bg-opacity)); --tw-bg-opacity:0.3; width: auto; border: 0px; }

.dq-editor .CodeMirror textarea { opacity: 0; }

.dq-editor .CodeMirror .cm-keyword { color: rgb(163, 96, 40); }

.dq-editor .CodeMirror .cm-atom { color: rgb(51, 41, 0); }

.dq-editor .CodeMirror .cm-number { color: rgb(203, 169, 0); }

.dq-editor .CodeMirror .cm-def { color: rgb(43, 65, 100); }

.dq-editor .CodeMirror span.cm-variable-1 { color: inherit; }

.dq-editor .CodeMirror .cm-s-vibrant span.cm-def, .dq-editor .CodeMirror .c=
m-s-vibrant span.cm-tag, .dq-editor .CodeMirror span.cm-variable-2, .dq-edi=
tor .CodeMirror span.cm-variable-3 { color: rgb(160, 98, 0); }

.dq-editor .CodeMirror .cm-operator { color: rgb(85, 85, 85); }

.dq-editor .CodeMirror .cm-comment { --tw-text-opacity:1; color: rgba(156,1=
69,188,var(--tw-text-opacity)); }

.dq-editor .CodeMirror .cm-string { color: rgb(110, 134, 50); }

.dq-editor .CodeMirror .cm-string-2 { color: red; }

.dq-editor .CodeMirror .cm-meta { color: rgb(85, 103, 3); }

.dq-editor .CodeMirror .cm-attribute, .dq-editor .CodeMirror .cm-builtin, .=
dq-editor .CodeMirror .cm-tag { color: rgb(74, 111, 171); }

.dq-editor .CodeMirror .cm-header { color: rgb(51, 20, 0); }

.dq-editor .CodeMirror .cm-hr { color: rgb(123, 123, 123); }

.dq-editor .CodeMirror .cm-link { color: rgb(0, 0, 255); }

.dq-editor .CodeMirror .cm-error { border-bottom: 1px solid red; }

.dq-editor .CodeMirror pre { padding: 0px; }

.dq-dark .dq-editor .CodeMirror { background-color: transparent; --tw-text-=
opacity:1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dq-dark .dq-editor .CodeMirror div.CodeMirror-selected { --tw-bg-opacity:1=
; background-color: rgba(56,68,84,var(--tw-bg-opacity)); }

.dq-dark .dq-editor .CodeMirror .CodeMirror-gutters { --tw-bg-opacity:1; ba=
ckground-color: rgba(0,0,0,var(--tw-bg-opacity)); }

.dq-dark .dq-editor .CodeMirror .CodeMirror-guttermarker { --tw-text-opacit=
y:1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dq-dark .dq-editor .CodeMirror .CodeMirror-guttermarker-subtle, .dq-dark .=
dq-editor .CodeMirror .CodeMirror-linenumber { --tw-text-opacity:1; color: =
rgba(217,222,229,var(--tw-text-opacity)); }

.dq-dark .dq-editor .CodeMirror .CodeMirror-cursor { --tw-border-opacity:1;=
 border-left-width: 1px; border-color: rgba(255,255,255,var(--tw-border-opa=
city)); border-style: solid; }

.dq-dark .dq-editor .CodeMirror .cm-keyword { color: rgb(204, 120, 50); }

.dq-dark .dq-editor .CodeMirror .cm-atom { color: rgb(255, 204, 0); }

.dq-dark .dq-editor .CodeMirror .cm-number { color: rgb(255, 238, 152); }

.dq-dark .dq-editor .CodeMirror .cm-def { color: rgb(141, 166, 206); }

.dq-dark .dq-editor .CodeMirror span.cm-variable-1 { color: inherit; }

.dq-dark .dq-editor .CodeMirror .cm-s-vibrant span.cm-def, .dq-dark .dq-edi=
tor .CodeMirror .cm-s-vibrant span.cm-tag, .dq-dark .dq-editor .CodeMirror =
span.cm-variable-2, .dq-dark .dq-editor .CodeMirror span.cm-variable-3 { co=
lor: rgb(255, 198, 109); }

.dq-dark .dq-editor .CodeMirror .cm-operator { color: rgb(136, 136, 136); }

.dq-dark .dq-editor .CodeMirror .cm-string { color: rgb(165, 194, 92); }

.dq-dark .dq-editor .CodeMirror .cm-string-2 { color: red; }

.dq-dark .dq-editor .CodeMirror .cm-meta { color: rgb(216, 250, 60); }

.dq-dark .dq-editor .CodeMirror .cm-attribute, .dq-dark .dq-editor .CodeMir=
ror .cm-builtin, .dq-dark .dq-editor .CodeMirror .cm-tag { color: rgb(141, =
166, 206); }

.dq-dark .dq-editor .CodeMirror .cm-header { color: rgb(255, 100, 0); }

.dq-dark .dq-editor .CodeMirror .cm-hr { --tw-text-opacity:1; color: rgba(1=
86,196,209,var(--tw-text-opacity)); }

.dq-dark .dq-editor .CodeMirror .cm-link { color: rgb(0, 0, 255); }

.dq-dark .dq-editor .CodeMirror .cm-error { border-bottom: 1px solid red; }

.dq-dark .dq-editor .CodeMirror .CodeMirror-activeline-background { --tw-bg=
-opacity:1; background-color: rgba(36,43,53,var(--tw-bg-opacity)); }

.dq-dark .dq-editor .CodeMirror .CodeMirror-matchingbracket { outline: grey=
 solid 1px; --tw-text-opacity:1 !important; color: rgba(255,255,255,var(--t=
w-text-opacity)) !important; }

.CodeMirror-hints { --tw-bg-opacity:1 !important; background-color: rgba(0,=
0,0,var(--tw-bg-opacity)) !important; }

.CodeMirror-hints .CodeMirror-hint { --tw-text-opacity:1; color: rgba(255,2=
55,255,var(--tw-text-opacity)); }

.CodeMirror-hints .CodeMirror-hint-active { --tw-bg-opacity:1; background-c=
olor: rgba(247,248,250,var(--tw-bg-opacity)); --tw-text-opacity:1; color: r=
gba(0,0,0,var(--tw-text-opacity)); }

.Resizer { --tw-bg-opacity:1; background-color: rgba(56,68,84,var(--tw-bg-o=
pacity)); width: 7px; cursor: col-resize; }

.Resizer.horizontal { z-index: 10; cursor: row-resize; box-sizing: border-b=
ox; background-clip: padding-box; height: 11px; margin: -5px 0px; width: 10=
0%; }

.swal2-container { font-family: source-sans-pro, sans-serif; }

.swal2-container.swal2-shown { background-color: rgba(77,92,114,var(--tw-bg=
-opacity)); --tw-bg-opacity:0.2; }

.swal2-container .swal2-modal { font-family: source-sans-pro, sans-serif; }

.swal2-container .swal2-modal .swal2-title { font-size: 1.875rem; line-heig=
ht: 2.25rem; font-weight: 400; --tw-text-opacity:1; color: rgba(77,92,114,v=
ar(--tw-text-opacity)); }

.swal2-container .swal2-modal .swal2-content { font-size: 1rem; line-height=
: 1.5rem; --tw-text-opacity:1; color: rgba(56,68,84,var(--tw-text-opacity))=
; text-align: center; white-space: pre-wrap; padding: 0px 1.25rem; }

.dq-shepherd { padding: 0.5rem 1.5rem 1.5rem; --tw-bg-opacity:1 !important;=
 background-color: rgba(217,222,229,var(--tw-bg-opacity)) !important; borde=
r-radius: 2px !important; }

.dq-shepherd .shepherd-arrow::before { --tw-bg-opacity:1; background-color:=
 rgba(217,222,229,var(--tw-bg-opacity)); }

.dq-shepherd .shepherd-text { font-size: 1.125rem; line-height: 1.75rem; ma=
rgin-bottom: 3rem; text-align: center; }

.dq-shepherd .shepherd-footer { justify-content: space-between; }

.dq-shepherd .shepherd-button { transition-property: background-color, bord=
er-color, color, fill, stroke; transition-timing-function: cubic-bezier(0.4=
, 0, 0.2, 1); transition-duration: 0.15s; display: inline-flex; align-items=
: center; justify-content: center; text-align: center; border-radius: 5px; =
border: 1px solid transparent; background-color: transparent; padding: 14px=
 28px; text-transform: capitalize; font-weight: 400; }

.dq-shepherd .shepherd-button.dq-shepperd-btn-primary { background-color: r=
gb(42, 84, 167); --tw-text-opacity:1; color: rgba(255,255,255,var(--tw-text=
-opacity)); }

.dq-shepherd .shepherd-button.dq-shepperd-btn-secondary { --tw-bg-opacity:1=
; background-color: rgba(255,255,255,var(--tw-bg-opacity)); --tw-text-opaci=
ty:1; color: rgba(77,92,114,var(--tw-text-opacity)); }

.dq-shepherd .shepherd-button:hover { --tw-bg-opacity:1 !important; backgro=
und-color: rgba(56,68,84,var(--tw-bg-opacity)) !important; --tw-text-opacit=
y:1 !important; color: rgba(255,255,255,var(--tw-text-opacity)) !important;=
 }

.react-tabs { -webkit-tap-highlight-color: transparent; }

.react-tabs__tab-list { border-bottom-width: 2px; --tw-border-opacity:1; bo=
rder-color: rgba(232,235,240,var(--tw-border-opacity)); margin: 0px 0px 24p=
x; padding: 0px; }

.react-tabs__tab { --tw-text-opacity:1; color: rgba(97,117,145,var(--tw-tex=
t-opacity)); display: inline-block; border-bottom: 2px solid transparent; b=
ottom: -2px; position: relative; list-style: none; padding: 6px 12px; margi=
n-right: 18px; cursor: pointer; }

.react-tabs__tab:hover { color: rgb(74, 144, 226); }

.react-tabs__tab:focus { box-shadow: rgb(1, 136, 254) 0px 0px 5px; border-c=
olor: rgb(1, 136, 254); outline: none; }

.react-tabs__tab:focus::after { content: ""; position: absolute; height: 2p=
x; left: -4px; right: -4px; bottom: -5px; }

.react-tabs__tab--selected { background-color: transparent; border-bottom: =
2px solid rgb(74, 144, 226); border-top-color: rgb(74, 144, 226); border-ri=
ght-color: rgb(74, 144, 226); border-left-color: rgb(74, 144, 226); color: =
rgb(74, 144, 226); border-radius: 5px 5px 0px 0px; }

.react-tabs__tab--disabled { --tw-text-opacity:1; color: rgba(125,143,168,v=
ar(--tw-text-opacity)); cursor: default; }

.react-tabs__tab-panel { display: none; }

.react-tabs__tab-panel--selected { display: block; }

.dq-collapse-header .rc-collapse-header-text { display: block; width: 100%;=
 }

.stepper-inactive-style { border: 2px solid rgb(74, 144, 226) !important; }

.dq-react-select .dq-react-select__control { border-radius: 0px; --tw-borde=
r-opacity:1; border-color: rgba(36,43,53,var(--tw-border-opacity)); }

.dq-react-select .dq-react-select__control.dq-react-select__contol--is-focu=
sed { --tw-border-opacity:1; border-color: rgba(41,161,248,var(--tw-border-=
opacity)); }

.dq-react-select .dq-react-select__multi-value { --tw-bg-opacity:1; backgro=
und-color: rgba(232,235,240,var(--tw-bg-opacity)); --tw-text-opacity:1; col=
or: rgba(36,43,53,var(--tw-text-opacity)); }

.dq-react-select .dq-react-select__multi-value .dq-react-select__multi-valu=
e__remove { cursor: pointer; }

.dq-react-select .dq-react-select__multi-value .dq-react-select__multi-valu=
e__remove:hover { --tw-bg-opacity:1; background-color: rgba(217,222,229,var=
(--tw-bg-opacity)); --tw-text-opacity:1; color: rgba(36,43,53,var(--tw-text=
-opacity)); }

.dq-react-select .dq-react-select__clear-indicator { cursor: pointer; }

.dq-react-select .dq-react-select__clear-indicator .dq-react-select__clear-=
indicator--is-focused, .dq-react-select .dq-react-select__clear-indicator:h=
over { --tw-text-opacity:1; color: rgba(36,43,53,var(--tw-text-opacity)); }

.dq-react-select .dq-react-select__option { cursor: pointer; }

.dq-react-select .dq-react-select__option.dq-react-select__option--is-focus=
ed, .dq-react-select .dq-react-select__option:hover { --tw-bg-opacity:1; ba=
ckground-color: rgba(232,235,240,var(--tw-bg-opacity)); }

.dq-react-select .dq-react-select__option.dq-react-select__option--is-selec=
ted { font-weight: 700; }

@media (min-width: 640px) {
  .sm\:dq-border-b-0 { border-bottom-width: 0px; }
  .sm\:dq-border-r { border-right-width: 1px; }
  .sm\:dq-block { display: block; }
  .sm\:dq-flex-row { flex-direction: row; }
  .sm\:dq-items-center { align-items: center; }
  .sm\:dq-items-stretch { align-items: stretch; }
  .sm\:dq-mb-0 { margin-bottom: 0px; }
  .sm\:dq-p-4 { padding: 1rem; }
  .sm\:dq-px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .sm\:dq-px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:dq-pl-4 { padding-left: 1rem; }
  .sm\:dq-pr-6 { padding-right: 1.5rem; }
  .sm\:dq-pl-6 { padding-left: 1.5rem; }
  .sm\:dq-w-1\/2 { width: 50%; }
  .sm\:dq-w-1\/3 { width: 33.3333%; }
  .sm\:dq-grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr));=
 }
}

@media (min-width: 768px) {
  .md\:dq-rounded { border-radius: 0.25rem; }
  .md\:dq-block { display: block; }
  .md\:dq-inline { display: inline; }
  .md\:dq-flex { display: flex; }
  .md\:dq-hidden { display: none; }
  .md\:dq-flex-row { flex-direction: row; }
  .md\:dq-flex-col { flex-direction: column; }
  .md\:dq-flex-nowrap { flex-wrap: nowrap; }
  .md\:dq-items-start { align-items: flex-start; }
  .md\:dq-items-end { align-items: flex-end; }
  .md\:dq-items-center { align-items: center; }
  .md\:dq-justify-start { justify-content: flex-start; }
  .md\:dq-justify-between { justify-content: space-between; }
  .md\:dq-flex-1 { flex: 1 1 0%; }
  .md\:dq-flex-shrink-0 { flex-shrink: 0; }
  .md\:dq-h-6 { height: 1.5rem; }
  .md\:dq-h-auto { height: auto; }
  .md\:dq-text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .md\:dq-text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .md\:dq-text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .md\:dq--mx-4 { margin-left: -1rem; margin-right: -1rem; }
  .md\:dq-mt-0 { margin-top: 0px; }
  .md\:dq-mb-0 { margin-bottom: 0px; }
  .md\:dq-mt-4 { margin-top: 1rem; }
  .md\:dq-mb-6 { margin-bottom: 1.5rem; }
  .md\:dq-ml-6 { margin-left: 1.5rem; }
  .md\:dq-mt-8 { margin-top: 2rem; }
  .md\:dq-mt-12 { margin-top: 3rem; }
  .md\:dq-mt-24 { margin-top: 6rem; }
  .md\:dq-max-w-screen-xl { max-width: 1280px; }
  .md\:dq-min-h-700 { min-height: 700px; }
  .md\:dq-p-4 { padding: 1rem; }
  .md\:dq-p-6 { padding: 1.5rem; }
  .md\:dq-p-8 { padding: 2rem; }
  .md\:dq-px-0 { padding-left: 0px; padding-right: 0px; }
  .md\:dq-px-8 { padding-left: 2rem; padding-right: 2rem; }
  .md\:dq-px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }
  .md\:dq-py-12 { padding-top: 3rem; padding-bottom: 3rem; }
  .md\:dq-px-16 { padding-left: 4rem; padding-right: 4rem; }
  .md\:dq-py-20 { padding-top: 5rem; padding-bottom: 5rem; }
  .md\:dq-pr-0 { padding-right: 0px; }
  .md\:dq-pt-16 { padding-top: 4rem; }
  .md\:\!dq-px-6 { padding-left: 1.5rem !important; padding-right: 1.5rem !=
important; }
  .md\:dq-text-left { text-align: left; }
  .md\:dq-w-auto { width: auto; }
  .md\:dq-w-1\/2 { width: 50%; }
  .md\:dq-w-2\/3 { width: 66.6667%; }
  .md\:dq-w-2\/5 { width: 40%; }
  .md\:dq-w-3\/5 { width: 60%; }
  .md\:dq-w-1\/6 { width: 16.6667%; }
  .md\:dq-w-10\/12 { width: 83.3333%; }
  .md\:dq-w-280p { width: 280px; }
  .md\:dq-gap-8 { gap: 2rem; }
  .md\:dq-grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr));=
 }
  .md\:dq-grid-cols-9 { grid-template-columns: repeat(9, minmax(0px, 1fr));=
 }
  .md\:dq-col-span-1 { grid-column: span 1 / span 1; }
  .md\:dq-col-span-2 { grid-column: span 2 / span 2; }
  .md\:dq-col-span-7 { grid-column: span 7 / span 7; }
}

@media (min-width: 1024px) {
  .lg\:dq-space-x-8 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-revers=
e:0; margin-right: calc(2rem*var(--tw-space-x-reverse)); margin-left: calc(=
2rem*(1 - var(--tw-space-x-reverse))); }
  .lg\:dq-space-y-10 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-rever=
se:0; margin-top: calc(2.5rem*(1 - var(--tw-space-y-reverse))); margin-bott=
om: calc(2.5rem*var(--tw-space-y-reverse)); }
  .lg\:dq-block { display: block; }
  .lg\:dq-inline-block { display: inline-block; }
  .lg\:dq-inline { display: inline; }
  .lg\:dq-flex { display: flex; }
  .lg\:dq-inline-flex { display: inline-flex; }
  .lg\:dq-hidden { display: none; }
  .lg\:dq-flex-row { flex-direction: row; }
  .lg\:dq-items-center { align-items: center; }
  .lg\:dq-justify-center { justify-content: center; }
  .lg\:dq-justify-between { justify-content: space-between; }
  .lg\:dq-mt-0 { margin-top: 0px; }
  .lg\:dq-mb-0 { margin-bottom: 0px; }
  .lg\:dq-mr-5 { margin-right: 1.25rem; }
  .lg\:dq-mt-6 { margin-top: 1.5rem; }
  .lg\:dq-mr-6 { margin-right: 1.5rem; }
  .lg\:dq--mt-36 { margin-top: -9rem; }
  .lg\:dq-px-0 { padding-left: 0px; padding-right: 0px; }
  .lg\:dq-py-6 { padding-top: 1.5rem; padding-bottom: 1.5rem; }
  .lg\:dq-px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:dq-py-12 { padding-top: 3rem; padding-bottom: 3rem; }
  .lg\:dq-px-14 { padding-left: 3.5rem; padding-right: 3.5rem; }
  .lg\:dq-pr-16 { padding-right: 4rem; }
  .lg\:dq-pr-20 { padding-right: 5rem; }
  .lg\:dq--top-6 { top: -48px; }
  .lg\:dq-visible { visibility: visible; }
  .lg\:dq-w-1\/2 { width: 50%; }
  .lg\:dq-w-1\/3 { width: 33.3333%; }
  .lg\:dq-w-2\/3 { width: 66.6667%; }
  .lg\:dq-w-2\/5 { width: 40%; }
  .lg\:dq-w-3\/5 { width: 60%; }
  .lg\:dq-w-8\/12 { width: 66.6667%; }
  .lg\:dq-grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr));=
 }
}

@media (min-width: 1280px) {
  .xl\:dq-border-blue-100 { --tw-border-opacity:1; border-color: rgba(42,84=
,167,var(--tw-border-opacity)); }
  .xl\:dq-rounded-full { border-radius: 9999px; }
  .xl\:dq-border-solid { border-style: solid; }
  .xl\:dq-border-2 { border-width: 2px; }
  .xl\:dq-justify-between { justify-content: space-between; }
  .xl\:dq-text-lg { font-size: 1.125rem; line-height: 1.75rem; }
  .xl\:dq-mt-0 { margin-top: 0px; }
  .xl\:dq-mb-0 { margin-bottom: 0px; }
  .xl\:dq-mt-4 { margin-top: 1rem; }
  .xl\:dq-mb-4 { margin-bottom: 1rem; }
  .xl\:dq--mt-12 { margin-top: -3rem; }
  .xl\:dq-p-0 { padding: 0px; }
  .xl\:dq-p-4 { padding: 1rem; }
  .xl\:dq-p-6 { padding: 1.5rem; }
  .xl\:dq-p-8 { padding: 2rem; }
  .xl\:dq-p-10 { padding: 2.5rem; }
  .xl\:dq-p-12 { padding: 3rem; }
  .xl\:dq-px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .xl\:dq-py-8 { padding-top: 2rem; padding-bottom: 2rem; }
  .xl\:dq-px-16 { padding-left: 4rem; padding-right: 4rem; }
  .xl\:dq-col-span-1 { grid-column: span 1 / span 1; }
}

@media (min-width: 1536px) {
  .\32 xl\:dq-my-5 { margin-top: 1.25rem; margin-bottom: 1.25rem; }
  .\32 xl\:dq-mb-6 { margin-bottom: 1.5rem; }
  .\32 xl\:dq-mb-28 { margin-bottom: 7rem; }
  .\32 xl\:dq-py-16 { padding-top: 4rem; padding-bottom: 4rem; }
  .\32 xl\:dq-py-20 { padding-top: 5rem; padding-bottom: 5rem; }
  .\32 xl\:dq-px-20 { padding-left: 5rem; padding-right: 5rem; }
  .\32 xl\:dq-w-2\/5 { width: 40%; }
  .\32 xl\:dq-w-3\/5 { width: 60%; }
}

@media (min-width: 1600px) {
  .\33 xl\:dq--ml-20 { margin-left: -5rem; }
  .\33 xl\:dq-pl-40 { padding-left: 10rem; }
}

.content { max-width: 78.125rem; margin: 0px auto; }

a, a:active, a:hover { cursor: pointer; }

.wf-loading body { visibility: visible; }

.scroller, .view_root { position: absolute; height: 100%; inset: 0px; }

.scroller { overflow-y: scroll; }

.separator { width: 2rem; }

.DqButton__main { display: inline-flex; align-items: center; justify-conten=
t: center; text-align: center; padding: 14px 28px; }

.DqButton__main:focus { outline: none; }

.DqButton__main.DqButton__no_text { padding: 14px; }

.DqButton__main:not(.DqButton__no_text) .DqButton__icon:first-child { margi=
n-left: -10px; }

.DqButton__main:not(.DqButton__no_text) .DqButton__icon:last-child { margin=
-right: -10px; }

.DqButton__capitalize { text-transform: capitalize; }

.DqButton__short { padding: 6px 28px; }

.DqButton__short.DqButton__no_text { padding: 6px; }

.DqButton__disabled { cursor: default; opacity: 0.5; color: rgb(255, 255, 2=
55) !important; }

.DqButton__disabled:not(.DqButton__hollow) { background-color: rgb(217, 217=
, 217) !important; }

.DqButton__disabled.DqButton__hollow:not(.DqButton__borderless) { border-co=
lor: rgb(217, 217, 217) !important; }

.DqButton__gold .DqButton__icon, .DqButton__gold .DqButton__text, .DqButton=
__gold svg { color: rgb(255, 255, 255); }

.DqButton__gold:not(.DqButton__hollow) { background-color: rgb(245, 220, 15=
7); background-image: none; }

.DqButton__gold:not(.DqButton__hollow).DqButton__selected, .DqButton__gold:=
not(.DqButton__hollow):hover:not(.DqButton__disabled) { background-color: r=
gb(247, 227, 177); background-image: none; }

.DqButton__gold.DqButton__hollow:not(.DqButton__borderless) { border-color:=
 rgb(245, 220, 157); }

.DqButton__gold.DqButton__hollow:not(.DqButton__borderless).DqButton__selec=
ted, .DqButton__gold.DqButton__hollow:not(.DqButton__borderless):hover:not(=
.DqButton__disabled) { border-color: rgb(247, 227, 177); }

.DqButton__gold.DqButton__hollow:not(.DqButton__borderless) .DqButton__icon=
, .DqButton__gold.DqButton__hollow:not(.DqButton__borderless) .DqButton__te=
xt, .DqButton__gold.DqButton__hollow:not(.DqButton__borderless) svg { color=
: rgb(245, 220, 157); }

.DqButton__gold.DqButton__hollow:not(.DqButton__borderless).DqButton__selec=
ted .DqButton__icon, .DqButton__gold.DqButton__hollow:not(.DqButton__border=
less).DqButton__selected .DqButton__text, .DqButton__gold.DqButton__hollow:=
not(.DqButton__borderless):hover:not(.DqButton__disabled) .DqButton__icon, =
.DqButton__gold.DqButton__hollow:not(.DqButton__borderless):hover:not(.DqBu=
tton__disabled) .DqButton__text { color: rgb(247, 227, 177); }

.DqButton__gold.DqButton__hollow.DqButton__borderless { background-color: t=
ransparent; background-image: none; border-color: transparent; }

.DqButton__gold.DqButton__hollow.DqButton__borderless.DqButton__selected, .=
DqButton__gold.DqButton__hollow.DqButton__borderless:hover:not(.DqButton__d=
isabled) { background-color: rgb(247, 227, 177); background-image: none; bo=
rder-color: transparent; }

.DqButton__gold.DqButton__hollow.DqButton__borderless .DqButton__icon, .DqB=
utton__gold.DqButton__hollow.DqButton__borderless .DqButton__text, .DqButto=
n__gold.DqButton__hollow.DqButton__borderless svg { color: rgb(245, 220, 15=
7); }

.DqButton__gold.DqButton__hollow.DqButton__borderless.DqButton__selected .D=
qButton__icon, .DqButton__gold.DqButton__hollow.DqButton__borderless.DqButt=
on__selected .DqButton__text, .DqButton__gold.DqButton__hollow.DqButton__bo=
rderless:hover:not(.DqButton__disabled) .DqButton__icon, .DqButton__gold.Dq=
Button__hollow.DqButton__borderless:hover:not(.DqButton__disabled) .DqButto=
n__text { color: rgb(255, 255, 255); }

.DqButton__gold .DqButton__icon, .DqButton__gold.DqButton__selected .DqButt=
on__icon, .DqButton__gold.DqButton__selected .DqButton__text, .DqButton__go=
ld .DqButton__text, .DqButton__gold:hover:not(.DqButton__disabled) .DqButto=
n__icon, .DqButton__gold:hover:not(.DqButton__disabled) .DqButton__text, .D=
qButton__gold svg { color: rgb(74, 80, 94); }

.DqButton__green .DqButton__icon, .DqButton__green .DqButton__text, .DqButt=
on__green svg { color: rgb(255, 255, 255); }

.DqButton__green:not(.DqButton__hollow) { background-color: rgb(97, 209, 15=
3); background-image: none; }

.DqButton__green:not(.DqButton__hollow).DqButton__selected, .DqButton__gree=
n:not(.DqButton__hollow):hover:not(.DqButton__disabled) { background-color:=
 rgb(57, 172, 149); background-image: none; }

.DqButton__green.DqButton__hollow:not(.DqButton__borderless) { border-color=
: rgb(97, 209, 153); }

.DqButton__green.DqButton__hollow:not(.DqButton__borderless).DqButton__sele=
cted, .DqButton__green.DqButton__hollow:not(.DqButton__borderless):hover:no=
t(.DqButton__disabled) { border-color: rgb(57, 172, 149); }

.DqButton__green.DqButton__hollow:not(.DqButton__borderless) .DqButton__ico=
n, .DqButton__green.DqButton__hollow:not(.DqButton__borderless) .DqButton__=
text, .DqButton__green.DqButton__hollow:not(.DqButton__borderless) svg { co=
lor: rgb(97, 209, 153); }

.DqButton__green.DqButton__hollow:not(.DqButton__borderless).DqButton__sele=
cted .DqButton__icon, .DqButton__green.DqButton__hollow:not(.DqButton__bord=
erless).DqButton__selected .DqButton__text, .DqButton__green.DqButton__holl=
ow:not(.DqButton__borderless):hover:not(.DqButton__disabled) .DqButton__ico=
n, .DqButton__green.DqButton__hollow:not(.DqButton__borderless):hover:not(.=
DqButton__disabled) .DqButton__text { color: rgb(57, 172, 149); }

.DqButton__green.DqButton__hollow.DqButton__borderless { background-color: =
transparent; background-image: none; border-color: transparent; }

.DqButton__green.DqButton__hollow.DqButton__borderless.DqButton__selected, =
.DqButton__green.DqButton__hollow.DqButton__borderless:hover:not(.DqButton_=
_disabled) { background-color: rgb(57, 172, 149); background-image: none; b=
order-color: transparent; }

.DqButton__green.DqButton__hollow.DqButton__borderless .DqButton__icon, .Dq=
Button__green.DqButton__hollow.DqButton__borderless .DqButton__text, .DqBut=
ton__green.DqButton__hollow.DqButton__borderless svg { color: rgb(97, 209, =
153); }

.DqButton__gray:not(.DqButton__on_dark) .DqButton__icon, .DqButton__gray:no=
t(.DqButton__on_dark) .DqButton__text, .DqButton__gray:not(.DqButton__on_da=
rk) svg, .DqButton__green.DqButton__hollow.DqButton__borderless.DqButton__s=
elected .DqButton__icon, .DqButton__green.DqButton__hollow.DqButton__border=
less.DqButton__selected .DqButton__text, .DqButton__green.DqButton__hollow.=
DqButton__borderless:hover:not(.DqButton__disabled) .DqButton__icon, .DqBut=
ton__green.DqButton__hollow.DqButton__borderless:hover:not(.DqButton__disab=
led) .DqButton__text { color: rgb(255, 255, 255); }

.DqButton__gray:not(.DqButton__on_dark):not(.DqButton__hollow) { background=
-color: rgb(111, 119, 141); background-image: none; }

.DqButton__gray:not(.DqButton__on_dark):not(.DqButton__hollow).DqButton__se=
lected, .DqButton__gray:not(.DqButton__on_dark):not(.DqButton__hollow):hove=
r:not(.DqButton__disabled) { background-color: rgb(140, 146, 164); backgrou=
nd-image: none; }

.DqButton__gray:not(.DqButton__on_dark).DqButton__hollow:not(.DqButton__bor=
derless) { border-color: rgb(111, 119, 141); }

.DqButton__gray:not(.DqButton__on_dark).DqButton__hollow:not(.DqButton__bor=
derless).DqButton__selected, .DqButton__gray:not(.DqButton__on_dark).DqButt=
on__hollow:not(.DqButton__borderless):hover:not(.DqButton__disabled) { bord=
er-color: rgb(140, 146, 164); }

.DqButton__gray:not(.DqButton__on_dark).DqButton__hollow:not(.DqButton__bor=
derless) .DqButton__icon, .DqButton__gray:not(.DqButton__on_dark).DqButton_=
_hollow:not(.DqButton__borderless) .DqButton__text, .DqButton__gray:not(.Dq=
Button__on_dark).DqButton__hollow:not(.DqButton__borderless) svg { color: r=
gb(111, 119, 141); }

.DqButton__gray:not(.DqButton__on_dark).DqButton__hollow:not(.DqButton__bor=
derless).DqButton__selected .DqButton__icon, .DqButton__gray:not(.DqButton_=
_on_dark).DqButton__hollow:not(.DqButton__borderless).DqButton__selected .D=
qButton__text, .DqButton__gray:not(.DqButton__on_dark).DqButton__hollow:not=
(.DqButton__borderless):hover:not(.DqButton__disabled) .DqButton__icon, .Dq=
Button__gray:not(.DqButton__on_dark).DqButton__hollow:not(.DqButton__border=
less):hover:not(.DqButton__disabled) .DqButton__text { color: rgb(140, 146,=
 164); }

.DqButton__gray:not(.DqButton__on_dark).DqButton__hollow.DqButton__borderle=
ss { background-color: transparent; background-image: none; border-color: t=
ransparent; }

.DqButton__gray:not(.DqButton__on_dark).DqButton__hollow.DqButton__borderle=
ss.DqButton__selected, .DqButton__gray:not(.DqButton__on_dark).DqButton__ho=
llow.DqButton__borderless:hover:not(.DqButton__disabled) { background-color=
: rgb(140, 146, 164); background-image: none; border-color: transparent; }

.DqButton__gray:not(.DqButton__on_dark).DqButton__hollow.DqButton__borderle=
ss .DqButton__icon, .DqButton__gray:not(.DqButton__on_dark).DqButton__hollo=
w.DqButton__borderless .DqButton__text, .DqButton__gray:not(.DqButton__on_d=
ark).DqButton__hollow.DqButton__borderless svg { color: rgb(111, 119, 141);=
 }

.DqButton__gray.DqButton__on_dark .DqButton__icon, .DqButton__gray.DqButton=
__on_dark .DqButton__text, .DqButton__gray.DqButton__on_dark svg, .DqButton=
__gray:not(.DqButton__on_dark).DqButton__hollow.DqButton__borderless.DqButt=
on__selected .DqButton__icon, .DqButton__gray:not(.DqButton__on_dark).DqBut=
ton__hollow.DqButton__borderless.DqButton__selected .DqButton__text, .DqBut=
ton__gray:not(.DqButton__on_dark).DqButton__hollow.DqButton__borderless:hov=
er:not(.DqButton__disabled) .DqButton__icon, .DqButton__gray:not(.DqButton_=
_on_dark).DqButton__hollow.DqButton__borderless:hover:not(.DqButton__disabl=
ed) .DqButton__text { color: rgb(255, 255, 255); }

.DqButton__gray.DqButton__on_dark:not(.DqButton__hollow) { background-color=
: rgb(255, 255, 255); background-image: none; }

.DqButton__gray.DqButton__on_dark:not(.DqButton__hollow).DqButton__selected=
, .DqButton__gray.DqButton__on_dark:not(.DqButton__hollow):hover:not(.DqBut=
ton__disabled) { background-color: rgb(48, 57, 75); background-image: none;=
 }

.DqButton__gray.DqButton__on_dark.DqButton__hollow:not(.DqButton__borderles=
s) { border-color: rgb(255, 255, 255); }

.DqButton__gray.DqButton__on_dark.DqButton__hollow:not(.DqButton__borderles=
s).DqButton__selected, .DqButton__gray.DqButton__on_dark.DqButton__hollow:n=
ot(.DqButton__borderless):hover:not(.DqButton__disabled) { border-color: rg=
b(48, 57, 75); }

.DqButton__gray.DqButton__on_dark.DqButton__hollow:not(.DqButton__borderles=
s) .DqButton__icon, .DqButton__gray.DqButton__on_dark.DqButton__hollow:not(=
.DqButton__borderless) .DqButton__text, .DqButton__gray.DqButton__on_dark.D=
qButton__hollow:not(.DqButton__borderless) svg { color: rgb(255, 255, 255);=
 }

.DqButton__gray.DqButton__on_dark.DqButton__hollow:not(.DqButton__borderles=
s).DqButton__selected .DqButton__icon, .DqButton__gray.DqButton__on_dark.Dq=
Button__hollow:not(.DqButton__borderless).DqButton__selected .DqButton__tex=
t, .DqButton__gray.DqButton__on_dark.DqButton__hollow:not(.DqButton__border=
less):hover:not(.DqButton__disabled) .DqButton__icon, .DqButton__gray.DqBut=
ton__on_dark.DqButton__hollow:not(.DqButton__borderless):hover:not(.DqButto=
n__disabled) .DqButton__text { color: rgb(48, 57, 75); }

.DqButton__gray.DqButton__on_dark.DqButton__hollow.DqButton__borderless { b=
ackground-color: transparent; background-image: none; border-color: transpa=
rent; }

.DqButton__gray.DqButton__on_dark.DqButton__hollow.DqButton__borderless.DqB=
utton__selected, .DqButton__gray.DqButton__on_dark.DqButton__hollow.DqButto=
n__borderless:hover:not(.DqButton__disabled) { background-color: rgb(48, 57=
, 75); background-image: none; border-color: transparent; }

.DqButton__gray.DqButton__on_dark.DqButton__hollow.DqButton__borderless .Dq=
Button__icon, .DqButton__gray.DqButton__on_dark.DqButton__hollow.DqButton__=
borderless.DqButton__selected .DqButton__icon, .DqButton__gray.DqButton__on=
_dark.DqButton__hollow.DqButton__borderless.DqButton__selected .DqButton__t=
ext, .DqButton__gray.DqButton__on_dark.DqButton__hollow.DqButton__borderles=
s .DqButton__text, .DqButton__gray.DqButton__on_dark.DqButton__hollow.DqBut=
ton__borderless:hover:not(.DqButton__disabled) .DqButton__icon, .DqButton__=
gray.DqButton__on_dark.DqButton__hollow.DqButton__borderless:hover:not(.DqB=
utton__disabled) .DqButton__text, .DqButton__gray.DqButton__on_dark.DqButto=
n__hollow.DqButton__borderless svg { color: rgb(255, 255, 255); }

.DqButton__gray.DqButton__on_dark .DqButton__icon, .DqButton__gray.DqButton=
__on_dark .DqButton__text, .DqButton__gray.DqButton__on_dark svg { color: r=
gb(48, 57, 75); }

.DqButton__gray.DqButton__on_dark.DqButton__selected .DqButton__icon, .DqBu=
tton__gray.DqButton__on_dark.DqButton__selected .DqButton__text, .DqButton_=
_gray.DqButton__on_dark:hover:not(.DqButton__disabled) .DqButton__icon, .Dq=
Button__gray.DqButton__on_dark:hover:not(.DqButton__disabled) .DqButton__te=
xt, .DqButton__gray_to_green .DqButton__icon, .DqButton__gray_to_green .DqB=
utton__text, .DqButton__gray_to_green svg { color: rgb(255, 255, 255); }

.DqButton__gray_to_green:not(.DqButton__hollow) { background-color: rgb(48,=
 57, 75); background-image: none; }

.DqButton__gray_to_green:not(.DqButton__hollow).DqButton__selected, .DqButt=
on__gray_to_green:not(.DqButton__hollow):hover:not(.DqButton__disabled) { b=
ackground-color: rgb(97, 209, 153); background-image: none; }

.DqButton__gray_to_green.DqButton__hollow:not(.DqButton__borderless) { bord=
er-color: rgb(48, 57, 75); }

.DqButton__gray_to_green.DqButton__hollow:not(.DqButton__borderless).DqButt=
on__selected, .DqButton__gray_to_green.DqButton__hollow:not(.DqButton__bord=
erless):hover:not(.DqButton__disabled) { border-color: rgb(97, 209, 153); }

.DqButton__gray_to_green.DqButton__hollow:not(.DqButton__borderless) .DqBut=
ton__icon, .DqButton__gray_to_green.DqButton__hollow:not(.DqButton__borderl=
ess) .DqButton__text, .DqButton__gray_to_green.DqButton__hollow:not(.DqButt=
on__borderless) svg { color: rgb(48, 57, 75); }

.DqButton__gray_to_green.DqButton__hollow:not(.DqButton__borderless).DqButt=
on__selected .DqButton__icon, .DqButton__gray_to_green.DqButton__hollow:not=
(.DqButton__borderless).DqButton__selected .DqButton__text, .DqButton__gray=
_to_green.DqButton__hollow:not(.DqButton__borderless):hover:not(.DqButton__=
disabled) .DqButton__icon, .DqButton__gray_to_green.DqButton__hollow:not(.D=
qButton__borderless):hover:not(.DqButton__disabled) .DqButton__text { color=
: rgb(97, 209, 153); }

.DqButton__gray_to_green.DqButton__hollow.DqButton__borderless { background=
-color: transparent; background-image: none; border-color: transparent; }

.DqButton__gray_to_green.DqButton__hollow.DqButton__borderless.DqButton__se=
lected, .DqButton__gray_to_green.DqButton__hollow.DqButton__borderless:hove=
r:not(.DqButton__disabled) { background-color: rgb(97, 209, 153); backgroun=
d-image: none; border-color: transparent; }

.DqButton__gray_to_green.DqButton__hollow.DqButton__borderless .DqButton__i=
con, .DqButton__gray_to_green.DqButton__hollow.DqButton__borderless .DqButt=
on__text, .DqButton__gray_to_green.DqButton__hollow.DqButton__borderless sv=
g { color: rgb(48, 57, 75); }

.DqButton__blue_main .DqButton__icon, .DqButton__blue_main .DqButton__text,=
 .DqButton__blue_main svg, .DqButton__gray_to_green.DqButton__hollow.DqButt=
on__borderless.DqButton__selected .DqButton__icon, .DqButton__gray_to_green=
.DqButton__hollow.DqButton__borderless.DqButton__selected .DqButton__text, =
.DqButton__gray_to_green.DqButton__hollow.DqButton__borderless:hover:not(.D=
qButton__disabled) .DqButton__icon, .DqButton__gray_to_green.DqButton__holl=
ow.DqButton__borderless:hover:not(.DqButton__disabled) .DqButton__text { co=
lor: rgb(255, 255, 255); }

.DqButton__blue_main:not(.DqButton__hollow) { background-color: rgb(42, 163=
, 248); background-image: none; }

.DqButton__blue_main:not(.DqButton__hollow).DqButton__selected, .DqButton__=
blue_main:not(.DqButton__hollow):hover:not(.DqButton__disabled) { backgroun=
d-color: rgb(53, 176, 237); background-image: none; }

.DqButton__blue_main.DqButton__hollow:not(.DqButton__borderless) { border-c=
olor: rgb(42, 163, 248); }

.DqButton__blue_main.DqButton__hollow:not(.DqButton__borderless).DqButton__=
selected, .DqButton__blue_main.DqButton__hollow:not(.DqButton__borderless):=
hover:not(.DqButton__disabled) { border-color: rgb(53, 176, 237); }

.DqButton__blue_main.DqButton__hollow:not(.DqButton__borderless) .DqButton_=
_icon, .DqButton__blue_main.DqButton__hollow:not(.DqButton__borderless) .Dq=
Button__text, .DqButton__blue_main.DqButton__hollow:not(.DqButton__borderle=
ss) svg { color: rgb(42, 163, 248); }

.DqButton__blue_main.DqButton__hollow:not(.DqButton__borderless).DqButton__=
selected .DqButton__icon, .DqButton__blue_main.DqButton__hollow:not(.DqButt=
on__borderless).DqButton__selected .DqButton__text, .DqButton__blue_main.Dq=
Button__hollow:not(.DqButton__borderless):hover:not(.DqButton__disabled) .D=
qButton__icon, .DqButton__blue_main.DqButton__hollow:not(.DqButton__borderl=
ess):hover:not(.DqButton__disabled) .DqButton__text { color: rgb(53, 176, 2=
37); }

.DqButton__blue_main.DqButton__hollow.DqButton__borderless { background-col=
or: transparent; background-image: none; border-color: transparent; }

.DqButton__blue_main.DqButton__hollow.DqButton__borderless.DqButton__select=
ed, .DqButton__blue_main.DqButton__hollow.DqButton__borderless:hover:not(.D=
qButton__disabled) { background-color: rgb(53, 176, 237); background-image:=
 none; border-color: transparent; }

.DqButton__blue_main.DqButton__hollow.DqButton__borderless .DqButton__icon,=
 .DqButton__blue_main.DqButton__hollow.DqButton__borderless .DqButton__text=
, .DqButton__blue_main.DqButton__hollow.DqButton__borderless svg { color: r=
gb(42, 163, 248); }

.DqButton__blue_main.DqButton__hollow.DqButton__borderless.DqButton__select=
ed .DqButton__icon, .DqButton__blue_main.DqButton__hollow.DqButton__borderl=
ess.DqButton__selected .DqButton__text, .DqButton__blue_main.DqButton__holl=
ow.DqButton__borderless:hover:not(.DqButton__disabled) .DqButton__icon, .Dq=
Button__blue_main.DqButton__hollow.DqButton__borderless:hover:not(.DqButton=
__disabled) .DqButton__text { color: rgb(255, 255, 255); }

.DqButton__blue_ocean:not(.DqButton__hollow), .DqButton__blue_ocean:not(.Dq=
Button__hollow).DqButton__selected, .DqButton__blue_ocean:not(.DqButton__ho=
llow):hover:not(.DqButton__disabled) { background-color: rgb(42, 84, 167); =
background-image: none; }

.DqButton__blue_ocean.DqButton__hollow:not(.DqButton__borderless), .DqButto=
n__blue_ocean.DqButton__hollow:not(.DqButton__borderless).DqButton__selecte=
d, .DqButton__blue_ocean.DqButton__hollow:not(.DqButton__borderless):hover:=
not(.DqButton__disabled) { border-color: rgb(42, 84, 167); }

.DqButton__blue_ocean.DqButton__hollow:not(.DqButton__borderless) .DqButton=
__icon, .DqButton__blue_ocean.DqButton__hollow:not(.DqButton__borderless).D=
qButton__selected .DqButton__icon, .DqButton__blue_ocean.DqButton__hollow:n=
ot(.DqButton__borderless).DqButton__selected .DqButton__text, .DqButton__bl=
ue_ocean.DqButton__hollow:not(.DqButton__borderless) .DqButton__text, .DqBu=
tton__blue_ocean.DqButton__hollow:not(.DqButton__borderless):hover:not(.DqB=
utton__disabled) .DqButton__icon, .DqButton__blue_ocean.DqButton__hollow:no=
t(.DqButton__borderless):hover:not(.DqButton__disabled) .DqButton__text, .D=
qButton__blue_ocean.DqButton__hollow:not(.DqButton__borderless) svg { color=
: rgb(42, 84, 167); }

.DqButton__blue_ocean.DqButton__hollow.DqButton__borderless { background-co=
lor: transparent; background-image: none; border-color: transparent; }

.DqButton__blue_ocean.DqButton__hollow.DqButton__borderless.DqButton__selec=
ted, .DqButton__blue_ocean.DqButton__hollow.DqButton__borderless:hover:not(=
.DqButton__disabled) { background-color: rgb(42, 84, 167); background-image=
: none; border-color: transparent; }

.DqButton__blue_ocean.DqButton__hollow.DqButton__borderless .DqButton__icon=
, .DqButton__blue_ocean.DqButton__hollow.DqButton__borderless .DqButton__te=
xt, .DqButton__blue_ocean.DqButton__hollow.DqButton__borderless svg { color=
: rgb(42, 84, 167); }

.DqButton__blue_ocean.DqButton__hollow.DqButton__borderless.DqButton__selec=
ted .DqButton__icon, .DqButton__blue_ocean.DqButton__hollow.DqButton__borde=
rless.DqButton__selected .DqButton__text, .DqButton__blue_ocean.DqButton__h=
ollow.DqButton__borderless:hover:not(.DqButton__disabled) .DqButton__icon, =
.DqButton__blue_ocean.DqButton__hollow.DqButton__borderless:hover:not(.DqBu=
tton__disabled) .DqButton__text, .DqButton__blue_ocean .DqButton__icon, .Dq=
Button__blue_ocean.DqButton__selected .DqButton__icon, .DqButton__blue_ocea=
n.DqButton__selected .DqButton__text, .DqButton__blue_ocean .DqButton__text=
, .DqButton__blue_ocean:hover:not(.DqButton__disabled) .DqButton__icon, .Dq=
Button__blue_ocean:hover:not(.DqButton__disabled) .DqButton__text, .DqButto=
n__blue_ocean svg { color: rgb(255, 255, 255); }

.DqButton__white:not(.DqButton__hollow) { background-color: rgb(255, 255, 2=
55); background-image: none; }

.DqButton__white:not(.DqButton__hollow) .DqButton__icon, .DqButton__white:n=
ot(.DqButton__hollow) .DqButton__text, .DqButton__white:not(.DqButton__holl=
ow) svg { color: rgb(48, 57, 75); }

.DqButton__white:not(.DqButton__hollow).DqButton__selected, .DqButton__whit=
e:not(.DqButton__hollow):hover:not(.DqButton__disabled) { background-color:=
 rgb(218, 226, 241); background-image: none; }

.DqButton__white.DqButton__hollow { background-color: transparent; backgrou=
nd-image: none; }

.DqButton__white.DqButton__hollow .DqButton__icon, .DqButton__white.DqButto=
n__hollow .DqButton__text, .DqButton__white.DqButton__hollow svg { color: r=
gb(255, 255, 255); }

.DqButton__white.DqButton__hollow.DqButton__selected .DqButton__icon, .DqBu=
tton__white.DqButton__hollow.DqButton__selected .DqButton__text, .DqButton_=
_white.DqButton__hollow:hover:not(.DqButton__disabled) .DqButton__icon, .Dq=
Button__white.DqButton__hollow:hover:not(.DqButton__disabled) .DqButton__te=
xt { color: rgb(48, 57, 75); }

.DqButton__white.DqButton__hollow.DqButton__disabled { background-color: rg=
b(217, 217, 217) !important; }

.DqButton__white.DqButton__hollow.DqButton__selected, .DqButton__white.DqBu=
tton__hollow:hover:not(.DqButton__disabled) { background-color: rgb(255, 25=
5, 255); background-image: none; }

.DqButton__white.DqButton__hollow:not(.DqButton__borderless), .DqButton__wh=
ite.DqButton__hollow:not(.DqButton__borderless).DqButton__selected, .DqButt=
on__white.DqButton__hollow:not(.DqButton__borderless):hover:not(.DqButton__=
disabled) { border-color: rgb(255, 255, 255); }

.DqButton__danger .DqButton__icon, .DqButton__danger .DqButton__text, .DqBu=
tton__danger svg { color: rgb(255, 255, 255); }

.DqButton__danger:not(.DqButton__hollow) { background-color: rgb(215, 66, 6=
6); background-image: none; }

.DqButton__danger:not(.DqButton__hollow).DqButton__selected, .DqButton__dan=
ger:not(.DqButton__hollow):hover:not(.DqButton__disabled) { background-colo=
r: rgb(162, 47, 47); background-image: none; }

.DqButton__danger.DqButton__hollow:not(.DqButton__borderless) { border-colo=
r: rgb(215, 66, 66); }

.DqButton__danger.DqButton__hollow:not(.DqButton__borderless).DqButton__sel=
ected, .DqButton__danger.DqButton__hollow:not(.DqButton__borderless):hover:=
not(.DqButton__disabled) { border-color: rgb(162, 47, 47); }

.DqButton__danger.DqButton__hollow:not(.DqButton__borderless) .DqButton__ic=
on, .DqButton__danger.DqButton__hollow:not(.DqButton__borderless) .DqButton=
__text, .DqButton__danger.DqButton__hollow:not(.DqButton__borderless) svg {=
 color: rgb(215, 66, 66); }

.DqButton__danger.DqButton__hollow:not(.DqButton__borderless).DqButton__sel=
ected .DqButton__icon, .DqButton__danger.DqButton__hollow:not(.DqButton__bo=
rderless).DqButton__selected .DqButton__text, .DqButton__danger.DqButton__h=
ollow:not(.DqButton__borderless):hover:not(.DqButton__disabled) .DqButton__=
icon, .DqButton__danger.DqButton__hollow:not(.DqButton__borderless):hover:n=
ot(.DqButton__disabled) .DqButton__text { color: rgb(162, 47, 47); }

.DqButton__danger.DqButton__hollow.DqButton__borderless { background-color:=
 transparent; background-image: none; border-color: transparent; }

.DqButton__danger.DqButton__hollow.DqButton__borderless.DqButton__selected,=
 .DqButton__danger.DqButton__hollow.DqButton__borderless:hover:not(.DqButto=
n__disabled) { background-color: rgb(162, 47, 47); background-image: none; =
border-color: transparent; }

.DqButton__danger.DqButton__hollow.DqButton__borderless .DqButton__icon, .D=
qButton__danger.DqButton__hollow.DqButton__borderless .DqButton__text, .DqB=
utton__danger.DqButton__hollow.DqButton__borderless svg { color: rgb(215, 6=
6, 66); }

.DqButton__danger.DqButton__hollow.DqButton__borderless.DqButton__selected =
.DqButton__icon, .DqButton__danger.DqButton__hollow.DqButton__borderless.Dq=
Button__selected .DqButton__text, .DqButton__danger.DqButton__hollow.DqButt=
on__borderless:hover:not(.DqButton__disabled) .DqButton__icon, .DqButton__d=
anger.DqButton__hollow.DqButton__borderless:hover:not(.DqButton__disabled) =
.DqButton__text { color: rgb(255, 255, 255); }

.MissingEmailPrompt__root { position: absolute; width: 100%; }

.MissingEmailPrompt__root label { display: inline-block; margin-right: 2rem=
; }

.MissingEmailPrompt__root button { margin-bottom: 2rem; min-width: 6.75rem;=
 }

.MissingEmailPrompt__body, .MissingEmailPrompt__thankyou { box-shadow: rgba=
(255, 255, 255, 0.176) 0px 6px 12px; padding: 0px 2.5rem 1rem; border-botto=
m-left-radius: 1rem; border-bottom-right-radius: 1rem; }

.MissingEmailPrompt__controls { margin-bottom: -2rem; }

.MissingEmailPrompt__thankyou { padding-top: 1rem; }

.NotThereSplash__sky { background-image: url("/assets/stars38fcde7cc2d50393=
5d420949df3892e4.svg"), radial-gradient(circle at 50% 108%, rgb(131, 162, 1=
72), rgb(62, 78, 100)); background-size: cover, auto; text-align: center; p=
adding-top: 100px; }

.NotThereSplash__text { max-width: 450px !important; }

.NotThereSplash__rover { position: absolute; bottom: 180px; left: 13%; }

.NotThereSplash__surface { background-image: url("/assets/surface7464b9fa3e=
bfdd798d9edf9e533c86d1.png"); background-size: 100% 300px; margin: 0px; pad=
ding: 50px 0px 0px; width: 100%; height: 300px; }

.NotThereSplash__cta_button, .NotThereSplash__surface { position: relative;=
 }

.MarketingInfoBlock__root { max-width: 650px; }

@media (max-width: 650px) {
  .MarketingInfoBlock__root { max-width: 100%; }
}

.MarketingInfoBlock__root img { max-width: 100%; }

.MarketingInfoBlock__root h1, .MarketingInfoBlock__root h2 { margin-top: 5r=
em; }

.MarketingInfoBlock__root li, .MarketingInfoBlock__root p { white-space: pr=
e-line; }

.MarketingInfoBlock__root > :first-child { margin-top: 0px; }

.MarketingInfoBlock__root > :last-child { margin-bottom: 0px; }

.MarketingInfoBlock__centered { max-width: 360px; margin: 0px auto; text-al=
ign: center; }

.TheMission__root { position: absolute; top: 0px; bottom: 0px; width: 100%;=
 }

.TheMission__split_pane { position: relative !important; }

@media screen and (max-width: 768px) {
  .TheMission__split_pane { overflow: auto !important; }
}

.TheMission__split_pane .TheMission__is_interactive, .TheMission__split_pan=
e .TheMission__not_interactive { width: 100%; }

@media screen and (max-width: 768px) {
  .TheMission__split_pane .TheMission__is_interactive, .TheMission__split_p=
ane .TheMission__not_interactive { height: auto; }
}

.TheMission__not_interactive { pointer-events: none; height: 100%; }

.TheMission__is_interactive { pointer-events: auto; height: 100%; }

.MissionLearn__instructions, .MissionLearn__section, .MissionLearn__solutio=
n { max-width: 78.125rem; }

.DqDropMenu__close, .DqDropMenu__open { position: relative; display: inline=
-block; cursor: pointer; }

.DqDropMenu__close .DqDropMenu__top { border-bottom-right-radius: 5px; bord=
er-bottom-left-radius: 5px; }

.DqDropMenu__top { border-top-right-radius: 5px; border-top-left-radius: 5p=
x; }

.DqDropMenu__options { border-bottom-right-radius: 5px; border-bottom-left-=
radius: 5px; }

.CodeMirror { font-family: monospace; height: 300px; color: rgb(0, 0, 0); d=
irection: ltr; }

.CodeMirror-lines { padding: 4px 0px; }

.CodeMirror pre.CodeMirror-line, .CodeMirror pre.CodeMirror-line-like { pad=
ding: 0px 4px; }

.CodeMirror-gutter-filler, .CodeMirror-scrollbar-filler { background-color:=
 rgb(255, 255, 255); }

.CodeMirror-gutters { border-right: 1px solid rgb(221, 221, 221); backgroun=
d-color: rgb(247, 247, 247); white-space: nowrap; }

.CodeMirror-linenumber { padding: 0px 3px 0px 5px; min-width: 20px; text-al=
ign: right; color: rgb(153, 153, 153); white-space: nowrap; }

.CodeMirror-guttermarker { color: rgb(0, 0, 0); }

.CodeMirror-guttermarker-subtle { color: rgb(153, 153, 153); }

.CodeMirror-cursor { border-left: 1px solid rgb(0, 0, 0); border-right: non=
e; width: 0px; }

.CodeMirror div.CodeMirror-secondarycursor { border-left: 1px solid silver;=
 }

.cm-fat-cursor .CodeMirror-cursor { width: auto; background: rgb(119, 238, =
119); border: 0px !important; }

.cm-fat-cursor div.CodeMirror-cursors { z-index: 1; }

.cm-fat-cursor-mark { background-color: rgba(20, 255, 20, 0.5); }

.cm-animate-fat-cursor, .cm-fat-cursor-mark { animation: 1.06s steps(1) 0s =
infinite normal none running blink; }

.cm-animate-fat-cursor { width: auto; border: 0px; background-color: rgb(11=
9, 238, 119); }

@-webkit-keyframes blink {=20
  50% { background-color: transparent; }
}

@keyframes blink {=20
  50% { background-color: transparent; }
}

.cm-tab { display: inline-block; text-decoration: inherit; }

.CodeMirror-rulers { position: absolute; inset: -50px 0px 0px; overflow: hi=
dden; }

.CodeMirror-ruler { border-left: 1px solid rgb(204, 204, 204); top: 0px; bo=
ttom: 0px; position: absolute; }

.cm-s-default .cm-header { color: rgb(0, 0, 255); }

.cm-s-default .cm-quote { color: rgb(0, 153, 0); }

.cm-negative { color: rgb(221, 68, 68); }

.cm-positive { color: rgb(34, 153, 34); }

.cm-header, .cm-strong { font-weight: 700; }

.cm-em { font-style: italic; }

.cm-link { text-decoration: underline; }

.cm-strikethrough { text-decoration: line-through; }

.cm-s-default .cm-keyword { color: rgb(119, 0, 136); }

.cm-s-default .cm-atom { color: rgb(34, 17, 153); }

.cm-s-default .cm-number { color: rgb(17, 102, 68); }

.cm-s-default .cm-def { color: rgb(0, 0, 255); }

.cm-s-default .cm-variable-2 { color: rgb(0, 85, 170); }

.cm-s-default .cm-type, .cm-s-default .cm-variable-3 { color: rgb(0, 136, 8=
5); }

.cm-s-default .cm-comment { color: rgb(170, 85, 0); }

.cm-s-default .cm-string { color: rgb(170, 17, 17); }

.cm-s-default .cm-string-2 { color: rgb(255, 85, 0); }

.cm-s-default .cm-meta, .cm-s-default .cm-qualifier { color: rgb(85, 85, 85=
); }

.cm-s-default .cm-builtin { color: rgb(51, 0, 170); }

.cm-s-default .cm-bracket { color: rgb(153, 153, 119); }

.cm-s-default .cm-tag { color: rgb(17, 119, 0); }

.cm-s-default .cm-attribute { color: rgb(0, 0, 204); }

.cm-s-default .cm-hr { color: rgb(153, 153, 153); }

.cm-s-default .cm-link { color: rgb(0, 0, 204); }

.cm-invalidchar, .cm-s-default .cm-error { color: red; }

.CodeMirror-composing { border-bottom: 2px solid; }

div.CodeMirror span.CodeMirror-matchingbracket { color: rgb(0, 187, 0); }

div.CodeMirror span.CodeMirror-nonmatchingbracket { color: rgb(170, 34, 34)=
; }

.CodeMirror-matchingtag { background: rgba(255, 150, 0, 0.3); }

.CodeMirror-activeline-background { background: rgb(232, 242, 255); }

.CodeMirror { position: relative; overflow: hidden; background: rgb(255, 25=
5, 255); }

.CodeMirror-scroll { margin-bottom: -50px; margin-right: -50px; padding-bot=
tom: 50px; height: 100%; outline: none; position: relative; overflow: scrol=
l !important; }

.CodeMirror-sizer { position: relative; border-right: 50px solid transparen=
t; }

.CodeMirror-gutter-filler, .CodeMirror-hscrollbar, .CodeMirror-scrollbar-fi=
ller, .CodeMirror-vscrollbar { position: absolute; z-index: 6; display: non=
e; outline: none; }

.CodeMirror-vscrollbar { right: 0px; top: 0px; overflow: hidden scroll; }

.CodeMirror-hscrollbar { bottom: 0px; left: 0px; overflow: scroll hidden; }

.CodeMirror-scrollbar-filler { right: 0px; bottom: 0px; }

.CodeMirror-gutter-filler { left: 0px; bottom: 0px; }

.CodeMirror-gutters { position: absolute; left: 0px; top: 0px; min-height: =
100%; z-index: 3; }

.CodeMirror-gutter { white-space: normal; height: 100%; display: inline-blo=
ck; vertical-align: top; margin-bottom: -50px; }

.CodeMirror-gutter-wrapper { position: absolute; z-index: 4; background: no=
ne !important; border: none !important; }

.CodeMirror-gutter-background { position: absolute; top: 0px; bottom: 0px; =
z-index: 4; }

.CodeMirror-gutter-elt { position: absolute; cursor: default; z-index: 4; }

.CodeMirror-gutter-wrapper ::selection { background-color: transparent; }

.CodeMirror-lines { cursor: text; min-height: 1px; }

.CodeMirror pre.CodeMirror-line, .CodeMirror pre.CodeMirror-line-like { bor=
der-radius: 0px; border-width: 0px; background: transparent; font-family: i=
nherit; font-size: inherit; margin: 0px; white-space: pre; overflow-wrap: n=
ormal; line-height: inherit; color: inherit; z-index: 2; position: relative=
; overflow: visible; -webkit-tap-highlight-color: transparent; font-variant=
-ligatures: contextual; }

.CodeMirror-wrap pre.CodeMirror-line, .CodeMirror-wrap pre.CodeMirror-line-=
like { overflow-wrap: break-word; white-space: pre-wrap; word-break: normal=
; }

.CodeMirror-linebackground { position: absolute; inset: 0px; z-index: 0; }

.CodeMirror-linewidget { position: relative; z-index: 2; padding: 0.1px; }

.CodeMirror-rtl pre { direction: rtl; }

.CodeMirror-code { outline: none; }

.CodeMirror-gutter, .CodeMirror-gutters, .CodeMirror-linenumber, .CodeMirro=
r-scroll, .CodeMirror-sizer { box-sizing: content-box; }

.CodeMirror-measure { position: absolute; width: 100%; height: 0px; overflo=
w: hidden; visibility: hidden; }

.CodeMirror-cursor { position: absolute; pointer-events: none; }

.CodeMirror-measure pre { position: static; }

div.CodeMirror-cursors { visibility: hidden; position: relative; z-index: 3=
; }

.CodeMirror-focused div.CodeMirror-cursors, div.CodeMirror-dragcursors { vi=
sibility: visible; }

.CodeMirror-selected { background: rgb(217, 217, 217); }

.CodeMirror-focused .CodeMirror-selected { background: rgb(215, 212, 240); =
}

.CodeMirror-crosshair { cursor: crosshair; }

.CodeMirror-line::selection, .CodeMirror-line > span::selection, .CodeMirro=
r-line > span > span::selection { background: rgb(215, 212, 240); }

.cm-searching { background-color: rgba(255, 255, 0, 0.4); }

.cm-force-border { padding-right: 0.1px; }

@media print {
  .CodeMirror div.CodeMirror-cursors { visibility: hidden; }
}

.cm-tab-wrap-hack::after { content: ""; }

span.CodeMirror-selectedtext { background: none; }

.size_33_center, .size_33_left { padding-right: 33%; }

.size_50_left, .size_55_center { padding-right: 25%; }

.size_33_center { padding-left: 33%; }

.size_55_center { padding-left: 25%; }

.SidePanelTitle__root { width: 100%; margin: 0px; text-transform: capitaliz=
e; }

.SidePanelTitle__icon::after { content: " "; }

.ScrollAccordion__root { width: 100%; height: 100%; }

.ScrollAccordion__bottom_headers, .ScrollAccordion__root, .ScrollAccordion_=
_top_headers { position: absolute; }

.ScrollAccordion__top_headers { top: 0px; }

.ScrollAccordion__bottom_headers { bottom: 0px; }

.ScrollAccordion__body { position: absolute; width: 100%; height: 100%; ove=
rflow: hidden scroll; }

.ScrollAccordion__in_header, .ScrollAccordion__in_text { cursor: pointer; w=
idth: 100%; margin: 0px; }

.ScrollAccordion__in_text { opacity: 0; margin: 0px 0px 1em; }

.ScrollAccordion__in_text:first-child { margin-bottom: 0px; }

.ScrollAccordion__section { margin-bottom: 3rem; position: relative; }

.CodeMirror-hints { position: absolute; z-index: 10; overflow: hidden auto;=
 list-style: none; margin: 0px; padding: 2px; box-shadow: rgba(0, 0, 0, 0.2=
) 2px 3px 5px; border-radius: 3px; border: 1px solid silver; background: rg=
b(255, 255, 255); font-size: 90%; font-family: monospace; max-height: 20em;=
 }

.CodeMirror-hint { margin: 0px; padding: 0px 4px; border-radius: 2px; white=
-space: pre; color: rgb(0, 0, 0); cursor: pointer; }

li.CodeMirror-hint-active { background: rgb(0, 136, 255); color: rgb(255, 2=
55, 255); }

.ConsoleREPL__root { height: 18.75rem; overflow: auto; }

.ConsoleInput__root .CodeMirror .console_gutters { width: 3em; }

.ConsoleInput__root .cm-s-dq-dark .CodeMirror-gutters { background-color: t=
ransparent; border-right: none; }

.ConsoleInput__root .console_line_gutter, .ConsoleInput__root .console_line=
_gutter_past { text-align: right; }

.ConsoleHistory__image { max-height: 350px; max-width: 100%; margin-bottom:=
 2rem; }

.ConsoleHistory__image:last-child { margin-bottom: 0px; }

.ConsoleHistory__output, .ConsoleHistory__running { overflow: auto hidden; =
}

.ConsoleHistory__running { margin: 0px 0px 0px 4em; height: 1em; }

.ConsoleHistory__stderr, .ConsoleHistory__stdout { overflow: auto hidden; m=
ax-width: 600px; margin: 0px 0px 0px 4em; }

.ConsoleHistory__plots { display: block; }

.ConsoleHistory__image { margin-left: 4em; }

.MissionResultFormat__root { position: relative; padding: 1.25rem 2.5rem; }

.MissionResultFormat__title { position: absolute; top: 0.41667rem; left: 0.=
41667rem; }

.MissionGeneralDiffer__root > * { width: 48%; overflow-x: auto; }

.MissionGeneralDiffer__root > :not(:first-child) { margin-left: 4%; }

.MissionGeneralDiffer__actual, .MissionGeneralDiffer__expected { margin-bot=
tom: 1em; }

[data-rmiz-wrap=3D"hidden"], [data-rmiz-wrap=3D"visible"] { position: relat=
ive; display: inline-flex; align-items: flex-start; }

[data-rmiz-wrap=3D"hidden"] { visibility: hidden; }

[data-rmiz-overlay] { position: fixed; inset: 0px; width: 100%; height: 100=
%; transition-property: background-color; }

[data-rmiz-btn-close], [data-rmiz-btn-open] { position: absolute; inset: 0p=
x; width: 100%; height: 100%; margin: 0px; padding: 0px; border: none; bord=
er-radius: 0px; font: inherit; color: inherit; background: none; appearance=
: none; }

[data-rmiz-btn-open] { cursor: zoom-in; }

[data-rmiz-btn-close] { cursor: zoom-out; }

[data-rmiz-modal-content] { position: absolute; transition-property: transf=
orm; transform-origin: center center; }

.MissionCodeActions__root { min-height: 65px; }

.MissionCodeActions__abortable:first-child { border-top-right-radius: 0px; =
border-bottom-right-radius: 0px; }

.MissionCodeActions__abortable:not(:first-child) { border-top-left-radius: =
0px; border-bottom-left-radius: 0px; }

.MissionCodeActions__abortable-submit { border-top-right-radius: 0px; borde=
r-bottom-right-radius: 0px; }

.MissionCodeActions__reset { margin-left: 1rem; }

body.swal2-shown { overflow-y: hidden; }

.swal2-container, body.swal2-iosfix { position: fixed; left: 0px; right: 0p=
x; }

.swal2-container { display: flex; -webkit-box-orient: horizontal; -webkit-b=
ox-direction: normal; flex-direction: row; -webkit-box-align: center; align=
-items: center; -webkit-box-pack: center; justify-content: center; top: 0px=
; bottom: 0px; padding: 10px; background-color: transparent; z-index: 1060;=
 }

.swal2-container.swal2-top, .swal2-container.swal2-top-left { -webkit-box-a=
lign: start; align-items: flex-start; }

.swal2-container.swal2-top-left { -webkit-box-pack: start; justify-content:=
 flex-start; }

.swal2-container.swal2-top-right { -webkit-box-align: start; align-items: f=
lex-start; -webkit-box-pack: end; justify-content: flex-end; }

.swal2-container.swal2-center, .swal2-container.swal2-center-left { -webkit=
-box-align: center; align-items: center; }

.swal2-container.swal2-center-left { -webkit-box-pack: start; justify-conte=
nt: flex-start; }

.swal2-container.swal2-center-right { -webkit-box-align: center; align-item=
s: center; -webkit-box-pack: end; justify-content: flex-end; }

.swal2-container.swal2-bottom, .swal2-container.swal2-bottom-left { -webkit=
-box-align: end; align-items: flex-end; }

.swal2-container.swal2-bottom-left { -webkit-box-pack: start; justify-conte=
nt: flex-start; }

.swal2-container.swal2-bottom-right { -webkit-box-align: end; align-items: =
flex-end; -webkit-box-pack: end; justify-content: flex-end; }

.swal2-container.swal2-grow-fullscreen > .swal2-modal { flex: 1 1 0%; align=
-self: stretch; }

.swal2-container.swal2-grow-fullscreen > .swal2-modal, .swal2-container.swa=
l2-grow-row > .swal2-modal { -webkit-box-flex: 1; -webkit-box-pack: center;=
 justify-content: center; display: flex !important; }

.swal2-container.swal2-grow-row > .swal2-modal { flex: 1 1 0%; align-conten=
t: center; }

.swal2-container.swal2-grow-column { -webkit-box-flex: 1; flex: 1 1 0%; -we=
bkit-box-orient: vertical; -webkit-box-direction: normal; flex-direction: c=
olumn; }

.swal2-container.swal2-grow-column.swal2-bottom, .swal2-container.swal2-gro=
w-column.swal2-center, .swal2-container.swal2-grow-column.swal2-top { -webk=
it-box-align: center; align-items: center; }

.swal2-container.swal2-grow-column.swal2-bottom-left, .swal2-container.swal=
2-grow-column.swal2-center-left, .swal2-container.swal2-grow-column.swal2-t=
op-left { -webkit-box-align: start; align-items: flex-start; }

.swal2-container.swal2-grow-column.swal2-bottom-right, .swal2-container.swa=
l2-grow-column.swal2-center-right, .swal2-container.swal2-grow-column.swal2=
-top-right { -webkit-box-align: end; align-items: flex-end; }

.swal2-container.swal2-grow-column > .swal2-modal { -webkit-box-flex: 1; fl=
ex: 1 1 0%; place-content: center; -webkit-box-pack: center; display: flex =
!important; }

.swal2-container:not(.swal2-top):not(.swal2-top-left):not(.swal2-top-right)=
:not(.swal2-center-left):not(.swal2-center-right):not(.swal2-bottom):not(.s=
wal2-bottom-left):not(.swal2-bottom-right) > .swal2-modal { margin: auto; }

@media not all, not all {
  .swal2-container .swal2-modal { margin: 0px !important; }
}

.swal2-container.swal2-fade { transition: background-color 0.1s ease 0s; }

.swal2-container.swal2-shown { background-color: rgba(0, 0, 0, 0.4); }

.swal2-modal { -webkit-box-orient: vertical; -webkit-box-direction: normal;=
 flex-direction: column; background-color: rgb(255, 255, 255); font-family:=
 "Helvetica Neue", Helvetica, Arial, sans-serif; border-radius: 5px; box-si=
zing: border-box; text-align: center; overflow: hidden auto; display: none;=
 position: relative; max-width: 100%; }

.swal2-modal:focus { outline: 0px; }

.swal2-modal.swal2-loading { overflow-y: hidden; }

.swal2-modal .swal2-title { color: rgb(89, 89, 89); font-size: 30px; text-a=
lign: center; font-weight: 600; text-transform: none; position: relative; m=
argin: 0px 0px 0.4em; padding: 0px; display: block; overflow-wrap: break-wo=
rd; }

.swal2-modal .swal2-buttonswrapper { margin-top: 15px; }

.swal2-modal .swal2-buttonswrapper:not(.swal2-loading) .swal2-styled[disabl=
ed] { opacity: 0.4; cursor: no-drop; }

.swal2-modal .swal2-buttonswrapper.swal2-loading .swal2-styled.swal2-confir=
m { box-sizing: border-box; border: 4px solid transparent; width: 40px; hei=
ght: 40px; padding: 0px; margin: 7.5px; vertical-align: top; color: transpa=
rent; cursor: default; border-radius: 100%; animation: 1.5s linear 0s infin=
ite normal none running rotate-loading; user-select: none; background-color=
: transparent !important; }

.swal2-modal .swal2-buttonswrapper.swal2-loading .swal2-styled.swal2-cancel=
 { margin-left: 30px; margin-right: 30px; }

.swal2-modal .swal2-buttonswrapper.swal2-loading :not(.swal2-styled).swal2-=
confirm::after { display: inline-block; content: ""; margin-left: 5px; vert=
ical-align: -1px; height: 15px; width: 15px; box-shadow: rgb(255, 255, 255)=
 1px 1px 1px; border-width: 3px; border-style: solid; border-color: rgb(153=
, 153, 153) transparent rgb(153, 153, 153) rgb(153, 153, 153); border-image=
: initial; border-radius: 50%; animation: 1.5s linear 0s infinite normal no=
ne running rotate-loading; }

.swal2-modal .swal2-styled { border: 0px; border-radius: 3px; box-shadow: n=
one; color: rgb(255, 255, 255); cursor: pointer; font-size: 17px; font-weig=
ht: 500; margin: 15px 5px 0px; padding: 10px 32px; }

.swal2-modal .swal2-styled:focus { outline: 0px; box-shadow: rgb(255, 255, =
255) 0px 0px 0px 2px, rgba(50, 100, 150, 0.4) 0px 0px 0px 4px; }

.swal2-modal .swal2-image { margin: 20px auto; max-width: 100%; }

.swal2-modal .swal2-close { background: 0px 0px; border: 0px; margin: 0px; =
padding: 0px; width: 38px; height: 40px; font-size: 36px; line-height: 40px=
; font-family: serif; position: absolute; top: 5px; right: 8px; cursor: poi=
nter; color: rgb(204, 204, 204); transition: color 0.1s ease 0s; }

.swal2-modal .swal2-close:hover { color: rgb(221, 85, 85); }

.swal2-modal > .swal2-checkbox, .swal2-modal > .swal2-file, .swal2-modal > =
.swal2-input, .swal2-modal > .swal2-radio, .swal2-modal > .swal2-select, .s=
wal2-modal > .swal2-textarea { display: none; }

.swal2-modal .swal2-content { font-size: 18px; text-align: center; font-wei=
ght: 300; position: relative; float: none; margin: 0px; padding: 0px; line-=
height: normal; color: rgb(84, 84, 84); overflow-wrap: break-word; }

.swal2-modal .swal2-checkbox, .swal2-modal .swal2-file, .swal2-modal .swal2=
-input, .swal2-modal .swal2-radio, .swal2-modal .swal2-select, .swal2-modal=
 .swal2-textarea { margin: 20px auto; }

.swal2-modal .swal2-file, .swal2-modal .swal2-input, .swal2-modal .swal2-te=
xtarea { width: 100%; box-sizing: border-box; font-size: 18px; border-radiu=
s: 3px; border: 1px solid rgb(217, 217, 217); box-shadow: rgba(0, 0, 0, 0.0=
6) 0px 1px 1px inset; transition: border-color 0.3s ease 0s, box-shadow 0.3=
s ease 0s, -webkit-box-shadow 0.3s ease 0s; }

.swal2-modal .swal2-file.swal2-inputerror, .swal2-modal .swal2-input.swal2-=
inputerror, .swal2-modal .swal2-textarea.swal2-inputerror { border-color: r=
gb(242, 116, 116) !important; box-shadow: rgb(242, 116, 116) 0px 0px 2px !i=
mportant; }

.swal2-modal .swal2-file:focus, .swal2-modal .swal2-input:focus, .swal2-mod=
al .swal2-textarea:focus { outline: 0px; border: 1px solid rgb(180, 219, 23=
7); box-shadow: rgb(196, 230, 245) 0px 0px 3px; }

.swal2-modal .swal2-file::-webkit-input-placeholder, .swal2-modal .swal2-in=
put::-webkit-input-placeholder, .swal2-modal .swal2-textarea::-webkit-input=
-placeholder { color: rgb(204, 204, 204); }

.swal2-modal .swal2-file::placeholder, .swal2-modal .swal2-input::placehold=
er, .swal2-modal .swal2-textarea::placeholder { color: rgb(204, 204, 204); =
}

.swal2-modal .swal2-range input { float: left; width: 80%; }

.swal2-modal .swal2-range output { float: right; width: 20%; font-size: 20p=
x; font-weight: 600; text-align: center; }

.swal2-modal .swal2-range input, .swal2-modal .swal2-range output { height:=
 43px; line-height: 43px; vertical-align: middle; margin: 20px auto; paddin=
g: 0px; }

.swal2-modal .swal2-input { height: 43px; padding: 0px 12px; }

.swal2-modal .swal2-input[type=3D"number"] { max-width: 150px; }

.swal2-modal .swal2-file { font-size: 20px; }

.swal2-modal .swal2-textarea { height: 108px; padding: 12px; }

.swal2-modal .swal2-select { color: rgb(84, 84, 84); font-size: inherit; pa=
dding: 5px 10px; min-width: 40%; max-width: 100%; }

.swal2-modal .swal2-radio { border: 0px; }

.swal2-modal .swal2-radio label:not(:first-child) { margin-left: 20px; }

.swal2-modal .swal2-radio input, .swal2-modal .swal2-radio span { vertical-=
align: middle; }

.swal2-modal .swal2-radio input { margin: 0px 3px 0px 0px; }

.swal2-modal .swal2-checkbox { color: rgb(84, 84, 84); }

.swal2-modal .swal2-checkbox input, .swal2-modal .swal2-checkbox span { ver=
tical-align: middle; }

.swal2-modal .swal2-validationerror { background-color: rgb(240, 240, 240);=
 margin: 0px -20px; overflow: hidden; padding: 10px; color: grey; font-size=
: 16px; font-weight: 300; display: none; }

.swal2-modal .swal2-validationerror::before { content: "!"; display: inline=
-block; width: 24px; height: 24px; border-radius: 50%; background-color: rg=
b(234, 125, 125); color: rgb(255, 255, 255); line-height: 24px; text-align:=
 center; margin-right: 10px; }

@supports (-ms-accelerator:true) {
  .swal2-range input { width: 100% !important; }
  .swal2-range output { display: none; }
}

@media not all, not all {
  .swal2-range input { width: 100% !important; }
  .swal2-range output { display: none; }
}

.swal2-icon { width: 80px; height: 80px; border: 4px solid transparent; bor=
der-radius: 50%; margin: 20px auto 30px; padding: 0px; position: relative; =
box-sizing: content-box; cursor: default; user-select: none; }

.swal2-icon.swal2-error { border-color: rgb(242, 116, 116); }

.swal2-icon.swal2-error .swal2-x-mark { position: relative; display: block;=
 }

.swal2-icon.swal2-error [class^=3D"swal2-x-mark-line"] { position: absolute=
; height: 5px; width: 47px; background-color: rgb(242, 116, 116); display: =
block; top: 37px; border-radius: 2px; }

.swal2-icon.swal2-error [class^=3D"swal2-x-mark-line"][class$=3D"left"] { t=
ransform: rotate(45deg); left: 17px; }

.swal2-icon.swal2-error [class^=3D"swal2-x-mark-line"][class$=3D"right"] { =
transform: rotate(-45deg); right: 16px; }

.swal2-icon.swal2-warning { font-family: "Helvetica Neue", Helvetica, Arial=
, sans-serif; color: rgb(248, 187, 134); border-color: rgb(250, 206, 168); =
}

.swal2-icon.swal2-info, .swal2-icon.swal2-warning { font-size: 60px; line-h=
eight: 80px; text-align: center; }

.swal2-icon.swal2-info { font-family: "Open Sans", sans-serif; color: rgb(6=
3, 195, 238); border-color: rgb(157, 224, 246); }

.swal2-icon.swal2-question { font-family: "Helvetica Neue", Helvetica, Aria=
l, sans-serif; color: rgb(135, 173, 189); border-color: rgb(201, 218, 225);=
 font-size: 60px; line-height: 80px; text-align: center; }

.swal2-icon.swal2-success { border-color: rgb(165, 220, 134); }

.swal2-icon.swal2-success [class^=3D"swal2-success-circular-line"] { border=
-radius: 50%; position: absolute; width: 60px; height: 120px; transform: ro=
tate(45deg); }

.swal2-icon.swal2-success [class^=3D"swal2-success-circular-line"][class$=
=3D"left"] { border-radius: 120px 0px 0px 120px; top: -7px; left: -33px; tr=
ansform: rotate(-45deg); transform-origin: 60px 60px; }

.swal2-icon.swal2-success [class^=3D"swal2-success-circular-line"][class$=
=3D"right"] { border-radius: 0px 120px 120px 0px; top: -11px; left: 30px; t=
ransform: rotate(-45deg); transform-origin: 0px 60px; }

.swal2-icon.swal2-success .swal2-success-ring { width: 80px; height: 80px; =
border: 4px solid rgba(165, 220, 134, 0.2); border-radius: 50%; box-sizing:=
 content-box; position: absolute; left: -4px; top: -4px; z-index: 2; }

.swal2-icon.swal2-success .swal2-success-fix { width: 7px; height: 90px; po=
sition: absolute; left: 28px; top: 8px; z-index: 1; transform: rotate(-45de=
g); }

.swal2-icon.swal2-success [class^=3D"swal2-success-line"] { height: 5px; ba=
ckground-color: rgb(165, 220, 134); display: block; border-radius: 2px; pos=
ition: absolute; z-index: 2; }

.swal2-icon.swal2-success [class^=3D"swal2-success-line"][class$=3D"tip"] {=
 width: 25px; left: 14px; top: 46px; transform: rotate(45deg); }

.swal2-icon.swal2-success [class^=3D"swal2-success-line"][class$=3D"long"] =
{ width: 47px; right: 8px; top: 38px; transform: rotate(-45deg); }

.swal2-progresssteps { font-weight: 600; margin: 0px 0px 20px; padding: 0px=
; }

.swal2-progresssteps li { display: inline-block; position: relative; }

.swal2-progresssteps .swal2-progresscircle { background: rgb(48, 133, 214);=
 border-radius: 2em; color: rgb(255, 255, 255); height: 2em; line-height: 2=
em; text-align: center; width: 2em; z-index: 20; }

.swal2-progresssteps .swal2-progresscircle:first-child { margin-left: 0px; =
}

.swal2-progresssteps .swal2-progresscircle:last-child { margin-right: 0px; =
}

.swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep { backg=
round: rgb(48, 133, 214); }

.swal2-progresssteps .swal2-progresscircle.swal2-activeprogressstep ~ .swal=
2-progresscircle, .swal2-progresssteps .swal2-progresscircle.swal2-activepr=
ogressstep ~ .swal2-progressline { background: rgb(173, 216, 230); }

.swal2-progresssteps .swal2-progressline { background: rgb(48, 133, 214); h=
eight: 0.4em; margin: 0px -1px; z-index: 10; }

[class^=3D"swal2"] { -webkit-tap-highlight-color: transparent; }

@-webkit-keyframes showSweetAlert {=20
  0% { transform: scale(0.7); }
  45% { transform: scale(1.05); }
  80% { transform: scale(0.95); }
  100% { transform: scale(1); }
}

@keyframes showSweetAlert {=20
  0% { transform: scale(0.7); }
  45% { transform: scale(1.05); }
  80% { transform: scale(0.95); }
  100% { transform: scale(1); }
}

@-webkit-keyframes hideSweetAlert {=20
  0% { transform: scale(1); opacity: 1; }
  100% { transform: scale(0.5); opacity: 0; }
}

@keyframes hideSweetAlert {=20
  0% { transform: scale(1); opacity: 1; }
  100% { transform: scale(0.5); opacity: 0; }
}

.swal2-show { animation: 0.3s ease 0s 1 normal none running showSweetAlert;=
 }

.swal2-show.swal2-noanimation { animation: 0s ease 0s 1 normal none running=
 none; }

.swal2-hide { animation: 0.15s ease 0s 1 normal forwards running hideSweetA=
lert; }

.swal2-hide.swal2-noanimation { animation: 0s ease 0s 1 normal none running=
 none; }

@-webkit-keyframes animate-success-tip {=20
  0% { width: 0px; left: 1px; top: 19px; }
  54% { width: 0px; left: 1px; top: 19px; }
  70% { width: 50px; left: -8px; top: 37px; }
  84% { width: 17px; left: 21px; top: 48px; }
  100% { width: 25px; left: 14px; top: 45px; }
}

@keyframes animate-success-tip {=20
  0% { width: 0px; left: 1px; top: 19px; }
  54% { width: 0px; left: 1px; top: 19px; }
  70% { width: 50px; left: -8px; top: 37px; }
  84% { width: 17px; left: 21px; top: 48px; }
  100% { width: 25px; left: 14px; top: 45px; }
}

@-webkit-keyframes animate-success-long {=20
  0% { width: 0px; right: 46px; top: 54px; }
  65% { width: 0px; right: 46px; top: 54px; }
  84% { width: 55px; right: 0px; top: 35px; }
  100% { width: 47px; right: 8px; top: 38px; }
}

@keyframes animate-success-long {=20
  0% { width: 0px; right: 46px; top: 54px; }
  65% { width: 0px; right: 46px; top: 54px; }
  84% { width: 55px; right: 0px; top: 35px; }
  100% { width: 47px; right: 8px; top: 38px; }
}

@-webkit-keyframes rotatePlaceholder {=20
  0% { transform: rotate(-45deg); }
  5% { transform: rotate(-45deg); }
  12% { transform: rotate(-405deg); }
  100% { transform: rotate(-405deg); }
}

@keyframes rotatePlaceholder {=20
  0% { transform: rotate(-45deg); }
  5% { transform: rotate(-45deg); }
  12% { transform: rotate(-405deg); }
  100% { transform: rotate(-405deg); }
}

.swal2-animate-success-line-tip { animation: 0.75s ease 0s 1 normal none ru=
nning animate-success-tip; }

.swal2-animate-success-line-long { animation: 0.75s ease 0s 1 normal none r=
unning animate-success-long; }

.swal2-success.swal2-animate-success-icon .swal2-success-circular-line-righ=
t { animation: 4.25s ease-in 0s 1 normal none running rotatePlaceholder; }

@-webkit-keyframes animate-error-icon {=20
  0% { transform: rotateX(100deg); opacity: 0; }
  100% { transform: rotateX(0deg); opacity: 1; }
}

@keyframes animate-error-icon {=20
  0% { transform: rotateX(100deg); opacity: 0; }
  100% { transform: rotateX(0deg); opacity: 1; }
}

.swal2-animate-error-icon { animation: 0.5s ease 0s 1 normal none running a=
nimate-error-icon; }

@-webkit-keyframes animate-x-mark {=20
  0% { transform: scale(0.4); margin-top: 26px; opacity: 0; }
  50% { transform: scale(0.4); margin-top: 26px; opacity: 0; }
  80% { transform: scale(1.15); margin-top: -6px; }
  100% { transform: scale(1); margin-top: 0px; opacity: 1; }
}

@keyframes animate-x-mark {=20
  0% { transform: scale(0.4); margin-top: 26px; opacity: 0; }
  50% { transform: scale(0.4); margin-top: 26px; opacity: 0; }
  80% { transform: scale(1.15); margin-top: -6px; }
  100% { transform: scale(1); margin-top: 0px; opacity: 1; }
}

.swal2-animate-x-mark { animation: 0.5s ease 0s 1 normal none running anima=
te-x-mark; }

@-webkit-keyframes rotate-loading {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

@keyframes rotate-loading {=20
  0% { transform: rotate(0deg); }
  100% { transform: rotate(1turn); }
}

.dq_alert__main, .dq_alert .dq_alert--cancel, .dq_alert .dq_alert--confirm,=
 .dq_alert .dq_alert--danger { display: inline-flex; align-items: center; j=
ustify-content: center; text-align: center; padding: 14px 28px; }

.dq_alert__main:focus, .dq_alert :focus.dq_alert--cancel, .dq_alert :focus.=
dq_alert--confirm, .dq_alert :focus.dq_alert--danger { outline: none; }

.dq_alert__main.dq_alert__no_text, .dq_alert .dq_alert__no_text.dq_alert--c=
ancel, .dq_alert .dq_alert__no_text.dq_alert--confirm, .dq_alert .dq_alert_=
_no_text.dq_alert--danger { padding: 14px; }

.dq_alert__main:not(.dq_alert__no_text) .dq_alert__icon:first-child, .dq_al=
ert :not(.dq_alert__no_text).dq_alert--cancel .dq_alert__icon:first-child, =
.dq_alert :not(.dq_alert__no_text).dq_alert--confirm .dq_alert__icon:first-=
child, .dq_alert :not(.dq_alert__no_text).dq_alert--danger .dq_alert__icon:=
first-child { margin-left: -10px; }

.dq_alert__main:not(.dq_alert__no_text) .dq_alert__icon:last-child, .dq_ale=
rt :not(.dq_alert__no_text).dq_alert--cancel .dq_alert__icon:last-child, .d=
q_alert :not(.dq_alert__no_text).dq_alert--confirm .dq_alert__icon:last-chi=
ld, .dq_alert :not(.dq_alert__no_text).dq_alert--danger .dq_alert__icon:las=
t-child { margin-right: -10px; }

.dq_alert__capitalize { text-transform: capitalize; }

.dq_alert__short, .dq_alert .dq_alert--cancel, .dq_alert .dq_alert--confirm=
, .dq_alert .dq_alert--danger { padding: 6px 28px; }

.dq_alert__short.dq_alert__no_text, .dq_alert .dq_alert__no_text.dq_alert--=
cancel, .dq_alert .dq_alert__no_text.dq_alert--confirm, .dq_alert .dq_alert=
__no_text.dq_alert--danger { padding: 6px; }

.dq_alert__disabled { cursor: default; opacity: 0.5; color: rgb(255, 255, 2=
55) !important; }

.dq_alert__disabled:not(.dq_alert__hollow) { background-color: rgb(217, 217=
, 217) !important; }

.dq_alert__disabled.dq_alert__hollow:not(.dq_alert__borderless) { border-co=
lor: rgb(217, 217, 217) !important; }

.dq_alert__gold .dq_alert__icon, .dq_alert__gold .dq_alert__text, .dq_alert=
__gold svg { color: rgb(255, 255, 255); }

.dq_alert__gold:not(.dq_alert__hollow) { background-color: rgb(245, 220, 15=
7); background-image: none; }

.dq_alert__gold:not(.dq_alert__hollow).dq_alert__selected, .dq_alert__gold:=
not(.dq_alert__hollow):hover:not(.dq_alert__disabled) { background-color: r=
gb(247, 227, 177); background-image: none; }

.dq_alert__gold.dq_alert__hollow:not(.dq_alert__borderless) { border-color:=
 rgb(245, 220, 157); }

.dq_alert__gold.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__selec=
ted, .dq_alert__gold.dq_alert__hollow:not(.dq_alert__borderless):hover:not(=
.dq_alert__disabled) { border-color: rgb(247, 227, 177); }

.dq_alert__gold.dq_alert__hollow:not(.dq_alert__borderless) .dq_alert__icon=
, .dq_alert__gold.dq_alert__hollow:not(.dq_alert__borderless) .dq_alert__te=
xt, .dq_alert__gold.dq_alert__hollow:not(.dq_alert__borderless) svg { color=
: rgb(245, 220, 157); }

.dq_alert__gold.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__selec=
ted .dq_alert__icon, .dq_alert__gold.dq_alert__hollow:not(.dq_alert__border=
less).dq_alert__selected .dq_alert__text, .dq_alert__gold.dq_alert__hollow:=
not(.dq_alert__borderless):hover:not(.dq_alert__disabled) .dq_alert__icon, =
.dq_alert__gold.dq_alert__hollow:not(.dq_alert__borderless):hover:not(.dq_a=
lert__disabled) .dq_alert__text { color: rgb(247, 227, 177); }

.dq_alert__gold.dq_alert__hollow.dq_alert__borderless { background-color: t=
ransparent; background-image: none; border-color: transparent; }

.dq_alert__gold.dq_alert__hollow.dq_alert__borderless.dq_alert__selected, .=
dq_alert__gold.dq_alert__hollow.dq_alert__borderless:hover:not(.dq_alert__d=
isabled) { background-color: rgb(247, 227, 177); background-image: none; bo=
rder-color: transparent; }

.dq_alert__gold.dq_alert__hollow.dq_alert__borderless .dq_alert__icon, .dq_=
alert__gold.dq_alert__hollow.dq_alert__borderless .dq_alert__text, .dq_aler=
t__gold.dq_alert__hollow.dq_alert__borderless svg { color: rgb(245, 220, 15=
7); }

.dq_alert__gold.dq_alert__hollow.dq_alert__borderless.dq_alert__selected .d=
q_alert__icon, .dq_alert__gold.dq_alert__hollow.dq_alert__borderless.dq_ale=
rt__selected .dq_alert__text, .dq_alert__gold.dq_alert__hollow.dq_alert__bo=
rderless:hover:not(.dq_alert__disabled) .dq_alert__icon, .dq_alert__gold.dq=
_alert__hollow.dq_alert__borderless:hover:not(.dq_alert__disabled) .dq_aler=
t__text { color: rgb(255, 255, 255); }

.dq_alert__gold .dq_alert__icon, .dq_alert__gold.dq_alert__selected .dq_ale=
rt__icon, .dq_alert__gold.dq_alert__selected .dq_alert__text, .dq_alert__go=
ld .dq_alert__text, .dq_alert__gold:hover:not(.dq_alert__disabled) .dq_aler=
t__icon, .dq_alert__gold:hover:not(.dq_alert__disabled) .dq_alert__text, .d=
q_alert__gold svg { color: rgb(74, 80, 94); }

.dq_alert__green .dq_alert__icon, .dq_alert__green .dq_alert__text, .dq_ale=
rt__green svg { color: rgb(255, 255, 255); }

.dq_alert__green:not(.dq_alert__hollow) { background-color: rgb(97, 209, 15=
3); background-image: none; }

.dq_alert__green:not(.dq_alert__hollow).dq_alert__selected, .dq_alert__gree=
n:not(.dq_alert__hollow):hover:not(.dq_alert__disabled) { background-color:=
 rgb(57, 172, 149); background-image: none; }

.dq_alert__green.dq_alert__hollow:not(.dq_alert__borderless) { border-color=
: rgb(97, 209, 153); }

.dq_alert__green.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__sele=
cted, .dq_alert__green.dq_alert__hollow:not(.dq_alert__borderless):hover:no=
t(.dq_alert__disabled) { border-color: rgb(57, 172, 149); }

.dq_alert__green.dq_alert__hollow:not(.dq_alert__borderless) .dq_alert__ico=
n, .dq_alert__green.dq_alert__hollow:not(.dq_alert__borderless) .dq_alert__=
text, .dq_alert__green.dq_alert__hollow:not(.dq_alert__borderless) svg { co=
lor: rgb(97, 209, 153); }

.dq_alert__green.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__sele=
cted .dq_alert__icon, .dq_alert__green.dq_alert__hollow:not(.dq_alert__bord=
erless).dq_alert__selected .dq_alert__text, .dq_alert__green.dq_alert__holl=
ow:not(.dq_alert__borderless):hover:not(.dq_alert__disabled) .dq_alert__ico=
n, .dq_alert__green.dq_alert__hollow:not(.dq_alert__borderless):hover:not(.=
dq_alert__disabled) .dq_alert__text { color: rgb(57, 172, 149); }

.dq_alert__green.dq_alert__hollow.dq_alert__borderless { background-color: =
transparent; background-image: none; border-color: transparent; }

.dq_alert__green.dq_alert__hollow.dq_alert__borderless.dq_alert__selected, =
.dq_alert__green.dq_alert__hollow.dq_alert__borderless:hover:not(.dq_alert_=
_disabled) { background-color: rgb(57, 172, 149); background-image: none; b=
order-color: transparent; }

.dq_alert__green.dq_alert__hollow.dq_alert__borderless .dq_alert__icon, .dq=
_alert__green.dq_alert__hollow.dq_alert__borderless .dq_alert__text, .dq_al=
ert__green.dq_alert__hollow.dq_alert__borderless svg { color: rgb(97, 209, =
153); }

.dq_alert__gray:not(.dq_alert__on_dark) .dq_alert__icon, .dq_alert__gray:no=
t(.dq_alert__on_dark) .dq_alert__text, .dq_alert__gray:not(.dq_alert__on_da=
rk) svg, .dq_alert__green.dq_alert__hollow.dq_alert__borderless.dq_alert__s=
elected .dq_alert__icon, .dq_alert__green.dq_alert__hollow.dq_alert__border=
less.dq_alert__selected .dq_alert__text, .dq_alert__green.dq_alert__hollow.=
dq_alert__borderless:hover:not(.dq_alert__disabled) .dq_alert__icon, .dq_al=
ert__green.dq_alert__hollow.dq_alert__borderless:hover:not(.dq_alert__disab=
led) .dq_alert__text, .dq_alert :not(.dq_alert__on_dark).dq_alert--confirm =
.dq_alert__icon, .dq_alert :not(.dq_alert__on_dark).dq_alert--confirm .dq_a=
lert__text, .dq_alert :not(.dq_alert__on_dark).dq_alert--confirm svg { colo=
r: rgb(255, 255, 255); }

.dq_alert__gray:not(.dq_alert__on_dark):not(.dq_alert__hollow), .dq_alert :=
not(.dq_alert__on_dark):not(.dq_alert__hollow).dq_alert--confirm { backgrou=
nd-color: rgb(111, 119, 141); background-image: none; }

.dq_alert__gray:not(.dq_alert__on_dark):not(.dq_alert__hollow).dq_alert__se=
lected, .dq_alert__gray:not(.dq_alert__on_dark):not(.dq_alert__hollow):hove=
r:not(.dq_alert__disabled), .dq_alert :not(.dq_alert__on_dark):not(.dq_aler=
t__hollow).dq_alert__selected.dq_alert--confirm, .dq_alert :not(.dq_alert__=
on_dark):not(.dq_alert__hollow):hover:not(.dq_alert__disabled).dq_alert--co=
nfirm { background-color: rgb(140, 146, 164); background-image: none; }

.dq_alert__gray:not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_alert__bor=
derless), .dq_alert :not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_alert=
__borderless).dq_alert--confirm { border-color: rgb(111, 119, 141); }

.dq_alert__gray:not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_alert__bor=
derless).dq_alert__selected, .dq_alert__gray:not(.dq_alert__on_dark).dq_ale=
rt__hollow:not(.dq_alert__borderless):hover:not(.dq_alert__disabled), .dq_a=
lert :not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_alert__borderless).d=
q_alert__selected.dq_alert--confirm, .dq_alert :not(.dq_alert__on_dark).dq_=
alert__hollow:not(.dq_alert__borderless):hover:not(.dq_alert__disabled).dq_=
alert--confirm { border-color: rgb(140, 146, 164); }

.dq_alert__gray:not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_alert__bor=
derless) .dq_alert__icon, .dq_alert__gray:not(.dq_alert__on_dark).dq_alert_=
_hollow:not(.dq_alert__borderless) .dq_alert__text, .dq_alert__gray:not(.dq=
_alert__on_dark).dq_alert__hollow:not(.dq_alert__borderless) svg, .dq_alert=
 :not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_alert__borderless).dq_al=
ert--confirm .dq_alert__icon, .dq_alert :not(.dq_alert__on_dark).dq_alert__=
hollow:not(.dq_alert__borderless).dq_alert--confirm .dq_alert__text, .dq_al=
ert :not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_alert__borderless).dq=
_alert--confirm svg { color: rgb(111, 119, 141); }

.dq_alert__gray:not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_alert__bor=
derless).dq_alert__selected .dq_alert__icon, .dq_alert__gray:not(.dq_alert_=
_on_dark).dq_alert__hollow:not(.dq_alert__borderless).dq_alert__selected .d=
q_alert__text, .dq_alert__gray:not(.dq_alert__on_dark).dq_alert__hollow:not=
(.dq_alert__borderless):hover:not(.dq_alert__disabled) .dq_alert__icon, .dq=
_alert__gray:not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_alert__border=
less):hover:not(.dq_alert__disabled) .dq_alert__text, .dq_alert :not(.dq_al=
ert__on_dark).dq_alert__hollow:not(.dq_alert__borderless).dq_alert__selecte=
d.dq_alert--confirm .dq_alert__icon, .dq_alert :not(.dq_alert__on_dark).dq_=
alert__hollow:not(.dq_alert__borderless).dq_alert__selected.dq_alert--confi=
rm .dq_alert__text, .dq_alert :not(.dq_alert__on_dark).dq_alert__hollow:not=
(.dq_alert__borderless):hover:not(.dq_alert__disabled).dq_alert--confirm .d=
q_alert__icon, .dq_alert :not(.dq_alert__on_dark).dq_alert__hollow:not(.dq_=
alert__borderless):hover:not(.dq_alert__disabled).dq_alert--confirm .dq_ale=
rt__text { color: rgb(140, 146, 164); }

.dq_alert__gray:not(.dq_alert__on_dark).dq_alert__hollow.dq_alert__borderle=
ss, .dq_alert :not(.dq_alert__on_dark).dq_alert__hollow.dq_alert__borderles=
s.dq_alert--confirm { background-color: transparent; background-image: none=
; border-color: transparent; }

.dq_alert__gray:not(.dq_alert__on_dark).dq_alert__hollow.dq_alert__borderle=
ss.dq_alert__selected, .dq_alert__gray:not(.dq_alert__on_dark).dq_alert__ho=
llow.dq_alert__borderless:hover:not(.dq_alert__disabled), .dq_alert :not(.d=
q_alert__on_dark).dq_alert__hollow.dq_alert__borderless.dq_alert__selected.=
dq_alert--confirm, .dq_alert :not(.dq_alert__on_dark).dq_alert__hollow.dq_a=
lert__borderless:hover:not(.dq_alert__disabled).dq_alert--confirm { backgro=
und-color: rgb(140, 146, 164); background-image: none; border-color: transp=
arent; }

.dq_alert__gray:not(.dq_alert__on_dark).dq_alert__hollow.dq_alert__borderle=
ss .dq_alert__icon, .dq_alert__gray:not(.dq_alert__on_dark).dq_alert__hollo=
w.dq_alert__borderless .dq_alert__text, .dq_alert__gray:not(.dq_alert__on_d=
ark).dq_alert__hollow.dq_alert__borderless svg, .dq_alert :not(.dq_alert__o=
n_dark).dq_alert__hollow.dq_alert__borderless.dq_alert--confirm .dq_alert__=
icon, .dq_alert :not(.dq_alert__on_dark).dq_alert__hollow.dq_alert__borderl=
ess.dq_alert--confirm .dq_alert__text, .dq_alert :not(.dq_alert__on_dark).d=
q_alert__hollow.dq_alert__borderless.dq_alert--confirm svg { color: rgb(111=
, 119, 141); }

.dq_alert__gray.dq_alert__on_dark .dq_alert__icon, .dq_alert__gray.dq_alert=
__on_dark .dq_alert__text, .dq_alert__gray.dq_alert__on_dark svg, .dq_alert=
__gray:not(.dq_alert__on_dark).dq_alert__hollow.dq_alert__borderless.dq_ale=
rt__selected .dq_alert__icon, .dq_alert__gray:not(.dq_alert__on_dark).dq_al=
ert__hollow.dq_alert__borderless.dq_alert__selected .dq_alert__text, .dq_al=
ert__gray:not(.dq_alert__on_dark).dq_alert__hollow.dq_alert__borderless:hov=
er:not(.dq_alert__disabled) .dq_alert__icon, .dq_alert__gray:not(.dq_alert_=
_on_dark).dq_alert__hollow.dq_alert__borderless:hover:not(.dq_alert__disabl=
ed) .dq_alert__text, .dq_alert .dq_alert__on_dark.dq_alert--confirm .dq_ale=
rt__icon, .dq_alert .dq_alert__on_dark.dq_alert--confirm .dq_alert__text, .=
dq_alert .dq_alert__on_dark.dq_alert--confirm svg, .dq_alert :not(.dq_alert=
__on_dark).dq_alert__hollow.dq_alert__borderless.dq_alert__selected.dq_aler=
t--confirm .dq_alert__icon, .dq_alert :not(.dq_alert__on_dark).dq_alert__ho=
llow.dq_alert__borderless.dq_alert__selected.dq_alert--confirm .dq_alert__t=
ext, .dq_alert :not(.dq_alert__on_dark).dq_alert__hollow.dq_alert__borderle=
ss:hover:not(.dq_alert__disabled).dq_alert--confirm .dq_alert__icon, .dq_al=
ert :not(.dq_alert__on_dark).dq_alert__hollow.dq_alert__borderless:hover:no=
t(.dq_alert__disabled).dq_alert--confirm .dq_alert__text { color: rgb(255, =
255, 255); }

.dq_alert__gray.dq_alert__on_dark:not(.dq_alert__hollow), .dq_alert .dq_ale=
rt__on_dark:not(.dq_alert__hollow).dq_alert--confirm { background-color: rg=
b(255, 255, 255); background-image: none; }

.dq_alert__gray.dq_alert__on_dark:not(.dq_alert__hollow).dq_alert__selected=
, .dq_alert__gray.dq_alert__on_dark:not(.dq_alert__hollow):hover:not(.dq_al=
ert__disabled), .dq_alert .dq_alert__on_dark:not(.dq_alert__hollow).dq_aler=
t__selected.dq_alert--confirm, .dq_alert .dq_alert__on_dark:not(.dq_alert__=
hollow):hover:not(.dq_alert__disabled).dq_alert--confirm { background-color=
: rgb(48, 57, 75); background-image: none; }

.dq_alert__gray.dq_alert__on_dark.dq_alert__hollow:not(.dq_alert__borderles=
s), .dq_alert .dq_alert__on_dark.dq_alert__hollow:not(.dq_alert__borderless=
).dq_alert--confirm { border-color: rgb(255, 255, 255); }

.dq_alert__gray.dq_alert__on_dark.dq_alert__hollow:not(.dq_alert__borderles=
s).dq_alert__selected, .dq_alert__gray.dq_alert__on_dark.dq_alert__hollow:n=
ot(.dq_alert__borderless):hover:not(.dq_alert__disabled), .dq_alert .dq_ale=
rt__on_dark.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__selected.=
dq_alert--confirm, .dq_alert .dq_alert__on_dark.dq_alert__hollow:not(.dq_al=
ert__borderless):hover:not(.dq_alert__disabled).dq_alert--confirm { border-=
color: rgb(48, 57, 75); }

.dq_alert__gray.dq_alert__on_dark.dq_alert__hollow:not(.dq_alert__borderles=
s) .dq_alert__icon, .dq_alert__gray.dq_alert__on_dark.dq_alert__hollow:not(=
.dq_alert__borderless) .dq_alert__text, .dq_alert__gray.dq_alert__on_dark.d=
q_alert__hollow:not(.dq_alert__borderless) svg, .dq_alert .dq_alert__on_dar=
k.dq_alert__hollow:not(.dq_alert__borderless).dq_alert--confirm .dq_alert__=
icon, .dq_alert .dq_alert__on_dark.dq_alert__hollow:not(.dq_alert__borderle=
ss).dq_alert--confirm .dq_alert__text, .dq_alert .dq_alert__on_dark.dq_aler=
t__hollow:not(.dq_alert__borderless).dq_alert--confirm svg { color: rgb(255=
, 255, 255); }

.dq_alert__gray.dq_alert__on_dark.dq_alert__hollow:not(.dq_alert__borderles=
s).dq_alert__selected .dq_alert__icon, .dq_alert__gray.dq_alert__on_dark.dq=
_alert__hollow:not(.dq_alert__borderless).dq_alert__selected .dq_alert__tex=
t, .dq_alert__gray.dq_alert__on_dark.dq_alert__hollow:not(.dq_alert__border=
less):hover:not(.dq_alert__disabled) .dq_alert__icon, .dq_alert__gray.dq_al=
ert__on_dark.dq_alert__hollow:not(.dq_alert__borderless):hover:not(.dq_aler=
t__disabled) .dq_alert__text, .dq_alert .dq_alert__on_dark.dq_alert__hollow=
:not(.dq_alert__borderless).dq_alert__selected.dq_alert--confirm .dq_alert_=
_icon, .dq_alert .dq_alert__on_dark.dq_alert__hollow:not(.dq_alert__borderl=
ess).dq_alert__selected.dq_alert--confirm .dq_alert__text, .dq_alert .dq_al=
ert__on_dark.dq_alert__hollow:not(.dq_alert__borderless):hover:not(.dq_aler=
t__disabled).dq_alert--confirm .dq_alert__icon, .dq_alert .dq_alert__on_dar=
k.dq_alert__hollow:not(.dq_alert__borderless):hover:not(.dq_alert__disabled=
).dq_alert--confirm .dq_alert__text { color: rgb(48, 57, 75); }

.dq_alert__gray.dq_alert__on_dark.dq_alert__hollow.dq_alert__borderless, .d=
q_alert .dq_alert__on_dark.dq_alert__hollow.dq_alert__borderless.dq_alert--=
confirm { background-color: transparent; background-image: none; border-col=
or: transparent; }

.dq_alert__gray.dq_alert__on_dark.dq_alert__hollow.dq_alert__borderless.dq_=
alert__selected, .dq_alert__gray.dq_alert__on_dark.dq_alert__hollow.dq_aler=
t__borderless:hover:not(.dq_alert__disabled), .dq_alert .dq_alert__on_dark.=
dq_alert__hollow.dq_alert__borderless.dq_alert__selected.dq_alert--confirm,=
 .dq_alert .dq_alert__on_dark.dq_alert__hollow.dq_alert__borderless:hover:n=
ot(.dq_alert__disabled).dq_alert--confirm { background-color: rgb(48, 57, 7=
5); background-image: none; border-color: transparent; }

.dq_alert__gray.dq_alert__on_dark.dq_alert__hollow.dq_alert__borderless .dq=
_alert__icon, .dq_alert__gray.dq_alert__on_dark.dq_alert__hollow.dq_alert__=
borderless.dq_alert__selected .dq_alert__icon, .dq_alert__gray.dq_alert__on=
_dark.dq_alert__hollow.dq_alert__borderless.dq_alert__selected .dq_alert__t=
ext, .dq_alert__gray.dq_alert__on_dark.dq_alert__hollow.dq_alert__borderles=
s .dq_alert__text, .dq_alert__gray.dq_alert__on_dark.dq_alert__hollow.dq_al=
ert__borderless:hover:not(.dq_alert__disabled) .dq_alert__icon, .dq_alert__=
gray.dq_alert__on_dark.dq_alert__hollow.dq_alert__borderless:hover:not(.dq_=
alert__disabled) .dq_alert__text, .dq_alert__gray.dq_alert__on_dark.dq_aler=
t__hollow.dq_alert__borderless svg, .dq_alert .dq_alert__on_dark.dq_alert__=
hollow.dq_alert__borderless.dq_alert__selected.dq_alert--confirm .dq_alert_=
_icon, .dq_alert .dq_alert__on_dark.dq_alert__hollow.dq_alert__borderless.d=
q_alert__selected.dq_alert--confirm .dq_alert__text, .dq_alert .dq_alert__o=
n_dark.dq_alert__hollow.dq_alert__borderless.dq_alert--confirm .dq_alert__i=
con, .dq_alert .dq_alert__on_dark.dq_alert__hollow.dq_alert__borderless.dq_=
alert--confirm .dq_alert__text, .dq_alert .dq_alert__on_dark.dq_alert__holl=
ow.dq_alert__borderless.dq_alert--confirm svg, .dq_alert .dq_alert__on_dark=
.dq_alert__hollow.dq_alert__borderless:hover:not(.dq_alert__disabled).dq_al=
ert--confirm .dq_alert__icon, .dq_alert .dq_alert__on_dark.dq_alert__hollow=
.dq_alert__borderless:hover:not(.dq_alert__disabled).dq_alert--confirm .dq_=
alert__text { color: rgb(255, 255, 255); }

.dq_alert__gray.dq_alert__on_dark .dq_alert__icon, .dq_alert__gray.dq_alert=
__on_dark .dq_alert__text, .dq_alert__gray.dq_alert__on_dark svg, .dq_alert=
 .dq_alert__on_dark.dq_alert--confirm .dq_alert__icon, .dq_alert .dq_alert_=
_on_dark.dq_alert--confirm .dq_alert__text, .dq_alert .dq_alert__on_dark.dq=
_alert--confirm svg { color: rgb(48, 57, 75); }

.dq_alert__gray.dq_alert__on_dark.dq_alert__selected .dq_alert__icon, .dq_a=
lert__gray.dq_alert__on_dark.dq_alert__selected .dq_alert__text, .dq_alert_=
_gray.dq_alert__on_dark:hover:not(.dq_alert__disabled) .dq_alert__icon, .dq=
_alert__gray.dq_alert__on_dark:hover:not(.dq_alert__disabled) .dq_alert__te=
xt, .dq_alert__gray_to_green .dq_alert__icon, .dq_alert__gray_to_green .dq_=
alert__text, .dq_alert__gray_to_green svg, .dq_alert .dq_alert__on_dark.dq_=
alert__selected.dq_alert--confirm .dq_alert__icon, .dq_alert .dq_alert__on_=
dark.dq_alert__selected.dq_alert--confirm .dq_alert__text, .dq_alert .dq_al=
ert__on_dark:hover:not(.dq_alert__disabled).dq_alert--confirm .dq_alert__ic=
on, .dq_alert .dq_alert__on_dark:hover:not(.dq_alert__disabled).dq_alert--c=
onfirm .dq_alert__text { color: rgb(255, 255, 255); }

.dq_alert__gray_to_green:not(.dq_alert__hollow) { background-color: rgb(48,=
 57, 75); background-image: none; }

.dq_alert__gray_to_green:not(.dq_alert__hollow).dq_alert__selected, .dq_ale=
rt__gray_to_green:not(.dq_alert__hollow):hover:not(.dq_alert__disabled) { b=
ackground-color: rgb(97, 209, 153); background-image: none; }

.dq_alert__gray_to_green.dq_alert__hollow:not(.dq_alert__borderless) { bord=
er-color: rgb(48, 57, 75); }

.dq_alert__gray_to_green.dq_alert__hollow:not(.dq_alert__borderless).dq_ale=
rt__selected, .dq_alert__gray_to_green.dq_alert__hollow:not(.dq_alert__bord=
erless):hover:not(.dq_alert__disabled) { border-color: rgb(97, 209, 153); }

.dq_alert__gray_to_green.dq_alert__hollow:not(.dq_alert__borderless) .dq_al=
ert__icon, .dq_alert__gray_to_green.dq_alert__hollow:not(.dq_alert__borderl=
ess) .dq_alert__text, .dq_alert__gray_to_green.dq_alert__hollow:not(.dq_ale=
rt__borderless) svg { color: rgb(48, 57, 75); }

.dq_alert__gray_to_green.dq_alert__hollow:not(.dq_alert__borderless).dq_ale=
rt__selected .dq_alert__icon, .dq_alert__gray_to_green.dq_alert__hollow:not=
(.dq_alert__borderless).dq_alert__selected .dq_alert__text, .dq_alert__gray=
_to_green.dq_alert__hollow:not(.dq_alert__borderless):hover:not(.dq_alert__=
disabled) .dq_alert__icon, .dq_alert__gray_to_green.dq_alert__hollow:not(.d=
q_alert__borderless):hover:not(.dq_alert__disabled) .dq_alert__text { color=
: rgb(97, 209, 153); }

.dq_alert__gray_to_green.dq_alert__hollow.dq_alert__borderless { background=
-color: transparent; background-image: none; border-color: transparent; }

.dq_alert__gray_to_green.dq_alert__hollow.dq_alert__borderless.dq_alert__se=
lected, .dq_alert__gray_to_green.dq_alert__hollow.dq_alert__borderless:hove=
r:not(.dq_alert__disabled) { background-color: rgb(97, 209, 153); backgroun=
d-image: none; border-color: transparent; }

.dq_alert__gray_to_green.dq_alert__hollow.dq_alert__borderless .dq_alert__i=
con, .dq_alert__gray_to_green.dq_alert__hollow.dq_alert__borderless .dq_ale=
rt__text, .dq_alert__gray_to_green.dq_alert__hollow.dq_alert__borderless sv=
g { color: rgb(48, 57, 75); }

.dq_alert__blue_main .dq_alert__icon, .dq_alert__blue_main .dq_alert__text,=
 .dq_alert__blue_main svg, .dq_alert__gray_to_green.dq_alert__hollow.dq_ale=
rt__borderless.dq_alert__selected .dq_alert__icon, .dq_alert__gray_to_green=
.dq_alert__hollow.dq_alert__borderless.dq_alert__selected .dq_alert__text, =
.dq_alert__gray_to_green.dq_alert__hollow.dq_alert__borderless:hover:not(.d=
q_alert__disabled) .dq_alert__icon, .dq_alert__gray_to_green.dq_alert__holl=
ow.dq_alert__borderless:hover:not(.dq_alert__disabled) .dq_alert__text { co=
lor: rgb(255, 255, 255); }

.dq_alert__blue_main:not(.dq_alert__hollow) { background-color: rgb(42, 163=
, 248); background-image: none; }

.dq_alert__blue_main:not(.dq_alert__hollow).dq_alert__selected, .dq_alert__=
blue_main:not(.dq_alert__hollow):hover:not(.dq_alert__disabled) { backgroun=
d-color: rgb(53, 176, 237); background-image: none; }

.dq_alert__blue_main.dq_alert__hollow:not(.dq_alert__borderless) { border-c=
olor: rgb(42, 163, 248); }

.dq_alert__blue_main.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__=
selected, .dq_alert__blue_main.dq_alert__hollow:not(.dq_alert__borderless):=
hover:not(.dq_alert__disabled) { border-color: rgb(53, 176, 237); }

.dq_alert__blue_main.dq_alert__hollow:not(.dq_alert__borderless) .dq_alert_=
_icon, .dq_alert__blue_main.dq_alert__hollow:not(.dq_alert__borderless) .dq=
_alert__text, .dq_alert__blue_main.dq_alert__hollow:not(.dq_alert__borderle=
ss) svg { color: rgb(42, 163, 248); }

.dq_alert__blue_main.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__=
selected .dq_alert__icon, .dq_alert__blue_main.dq_alert__hollow:not(.dq_ale=
rt__borderless).dq_alert__selected .dq_alert__text, .dq_alert__blue_main.dq=
_alert__hollow:not(.dq_alert__borderless):hover:not(.dq_alert__disabled) .d=
q_alert__icon, .dq_alert__blue_main.dq_alert__hollow:not(.dq_alert__borderl=
ess):hover:not(.dq_alert__disabled) .dq_alert__text { color: rgb(53, 176, 2=
37); }

.dq_alert__blue_main.dq_alert__hollow.dq_alert__borderless { background-col=
or: transparent; background-image: none; border-color: transparent; }

.dq_alert__blue_main.dq_alert__hollow.dq_alert__borderless.dq_alert__select=
ed, .dq_alert__blue_main.dq_alert__hollow.dq_alert__borderless:hover:not(.d=
q_alert__disabled) { background-color: rgb(53, 176, 237); background-image:=
 none; border-color: transparent; }

.dq_alert__blue_main.dq_alert__hollow.dq_alert__borderless .dq_alert__icon,=
 .dq_alert__blue_main.dq_alert__hollow.dq_alert__borderless .dq_alert__text=
, .dq_alert__blue_main.dq_alert__hollow.dq_alert__borderless svg { color: r=
gb(42, 163, 248); }

.dq_alert__blue_main.dq_alert__hollow.dq_alert__borderless.dq_alert__select=
ed .dq_alert__icon, .dq_alert__blue_main.dq_alert__hollow.dq_alert__borderl=
ess.dq_alert__selected .dq_alert__text, .dq_alert__blue_main.dq_alert__holl=
ow.dq_alert__borderless:hover:not(.dq_alert__disabled) .dq_alert__icon, .dq=
_alert__blue_main.dq_alert__hollow.dq_alert__borderless:hover:not(.dq_alert=
__disabled) .dq_alert__text { color: rgb(255, 255, 255); }

.dq_alert__blue_ocean:not(.dq_alert__hollow), .dq_alert__blue_ocean:not(.dq=
_alert__hollow).dq_alert__selected, .dq_alert__blue_ocean:not(.dq_alert__ho=
llow):hover:not(.dq_alert__disabled) { background-color: rgb(42, 84, 167); =
background-image: none; }

.dq_alert__blue_ocean.dq_alert__hollow:not(.dq_alert__borderless), .dq_aler=
t__blue_ocean.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__selecte=
d, .dq_alert__blue_ocean.dq_alert__hollow:not(.dq_alert__borderless):hover:=
not(.dq_alert__disabled) { border-color: rgb(42, 84, 167); }

.dq_alert__blue_ocean.dq_alert__hollow:not(.dq_alert__borderless) .dq_alert=
__icon, .dq_alert__blue_ocean.dq_alert__hollow:not(.dq_alert__borderless).d=
q_alert__selected .dq_alert__icon, .dq_alert__blue_ocean.dq_alert__hollow:n=
ot(.dq_alert__borderless).dq_alert__selected .dq_alert__text, .dq_alert__bl=
ue_ocean.dq_alert__hollow:not(.dq_alert__borderless) .dq_alert__text, .dq_a=
lert__blue_ocean.dq_alert__hollow:not(.dq_alert__borderless):hover:not(.dq_=
alert__disabled) .dq_alert__icon, .dq_alert__blue_ocean.dq_alert__hollow:no=
t(.dq_alert__borderless):hover:not(.dq_alert__disabled) .dq_alert__text, .d=
q_alert__blue_ocean.dq_alert__hollow:not(.dq_alert__borderless) svg { color=
: rgb(42, 84, 167); }

.dq_alert__blue_ocean.dq_alert__hollow.dq_alert__borderless { background-co=
lor: transparent; background-image: none; border-color: transparent; }

.dq_alert__blue_ocean.dq_alert__hollow.dq_alert__borderless.dq_alert__selec=
ted, .dq_alert__blue_ocean.dq_alert__hollow.dq_alert__borderless:hover:not(=
.dq_alert__disabled) { background-color: rgb(42, 84, 167); background-image=
: none; border-color: transparent; }

.dq_alert__blue_ocean.dq_alert__hollow.dq_alert__borderless .dq_alert__icon=
, .dq_alert__blue_ocean.dq_alert__hollow.dq_alert__borderless .dq_alert__te=
xt, .dq_alert__blue_ocean.dq_alert__hollow.dq_alert__borderless svg { color=
: rgb(42, 84, 167); }

.dq_alert__blue_ocean.dq_alert__hollow.dq_alert__borderless.dq_alert__selec=
ted .dq_alert__icon, .dq_alert__blue_ocean.dq_alert__hollow.dq_alert__borde=
rless.dq_alert__selected .dq_alert__text, .dq_alert__blue_ocean.dq_alert__h=
ollow.dq_alert__borderless:hover:not(.dq_alert__disabled) .dq_alert__icon, =
.dq_alert__blue_ocean.dq_alert__hollow.dq_alert__borderless:hover:not(.dq_a=
lert__disabled) .dq_alert__text, .dq_alert__blue_ocean .dq_alert__icon, .dq=
_alert__blue_ocean.dq_alert__selected .dq_alert__icon, .dq_alert__blue_ocea=
n.dq_alert__selected .dq_alert__text, .dq_alert__blue_ocean .dq_alert__text=
, .dq_alert__blue_ocean:hover:not(.dq_alert__disabled) .dq_alert__icon, .dq=
_alert__blue_ocean:hover:not(.dq_alert__disabled) .dq_alert__text, .dq_aler=
t__blue_ocean svg { color: rgb(255, 255, 255); }

.dq_alert__white:not(.dq_alert__hollow) { background-color: rgb(255, 255, 2=
55); background-image: none; }

.dq_alert__white:not(.dq_alert__hollow) .dq_alert__icon, .dq_alert__white:n=
ot(.dq_alert__hollow) .dq_alert__text, .dq_alert__white:not(.dq_alert__holl=
ow) svg { color: rgb(48, 57, 75); }

.dq_alert__white:not(.dq_alert__hollow).dq_alert__selected, .dq_alert__whit=
e:not(.dq_alert__hollow):hover:not(.dq_alert__disabled) { background-color:=
 rgb(218, 226, 241); background-image: none; }

.dq_alert__white.dq_alert__hollow { background-color: transparent; backgrou=
nd-image: none; }

.dq_alert__white.dq_alert__hollow .dq_alert__icon, .dq_alert__white.dq_aler=
t__hollow .dq_alert__text, .dq_alert__white.dq_alert__hollow svg { color: r=
gb(255, 255, 255); }

.dq_alert__white.dq_alert__hollow.dq_alert__selected .dq_alert__icon, .dq_a=
lert__white.dq_alert__hollow.dq_alert__selected .dq_alert__text, .dq_alert_=
_white.dq_alert__hollow:hover:not(.dq_alert__disabled) .dq_alert__icon, .dq=
_alert__white.dq_alert__hollow:hover:not(.dq_alert__disabled) .dq_alert__te=
xt { color: rgb(48, 57, 75); }

.dq_alert__white.dq_alert__hollow.dq_alert__disabled { background-color: rg=
b(217, 217, 217) !important; }

.dq_alert__white.dq_alert__hollow.dq_alert__selected, .dq_alert__white.dq_a=
lert__hollow:hover:not(.dq_alert__disabled) { background-color: rgb(255, 25=
5, 255); background-image: none; }

.dq_alert__white.dq_alert__hollow:not(.dq_alert__borderless), .dq_alert__wh=
ite.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__selected, .dq_ale=
rt__white.dq_alert__hollow:not(.dq_alert__borderless):hover:not(.dq_alert__=
disabled) { border-color: rgb(255, 255, 255); }

.dq_alert__danger .dq_alert__icon, .dq_alert__danger .dq_alert__text, .dq_a=
lert__danger svg, .dq_alert .dq_alert--danger .dq_alert__icon, .dq_alert .d=
q_alert--danger .dq_alert__text, .dq_alert .dq_alert--danger svg { color: r=
gb(255, 255, 255); }

.dq_alert__danger:not(.dq_alert__hollow), .dq_alert :not(.dq_alert__hollow)=
.dq_alert--danger { background-color: rgb(215, 66, 66); background-image: n=
one; }

.dq_alert__danger:not(.dq_alert__hollow).dq_alert__selected, .dq_alert__dan=
ger:not(.dq_alert__hollow):hover:not(.dq_alert__disabled), .dq_alert :not(.=
dq_alert__hollow).dq_alert__selected.dq_alert--danger, .dq_alert :not(.dq_a=
lert__hollow):hover:not(.dq_alert__disabled).dq_alert--danger { background-=
color: rgb(162, 47, 47); background-image: none; }

.dq_alert__danger.dq_alert__hollow:not(.dq_alert__borderless), .dq_alert .d=
q_alert__hollow:not(.dq_alert__borderless).dq_alert--danger { border-color:=
 rgb(215, 66, 66); }

.dq_alert__danger.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__sel=
ected, .dq_alert__danger.dq_alert__hollow:not(.dq_alert__borderless):hover:=
not(.dq_alert__disabled), .dq_alert .dq_alert__hollow:not(.dq_alert__border=
less).dq_alert__selected.dq_alert--danger, .dq_alert .dq_alert__hollow:not(=
.dq_alert__borderless):hover:not(.dq_alert__disabled).dq_alert--danger { bo=
rder-color: rgb(162, 47, 47); }

.dq_alert__danger.dq_alert__hollow:not(.dq_alert__borderless) .dq_alert__ic=
on, .dq_alert__danger.dq_alert__hollow:not(.dq_alert__borderless) .dq_alert=
__text, .dq_alert__danger.dq_alert__hollow:not(.dq_alert__borderless) svg, =
.dq_alert .dq_alert__hollow:not(.dq_alert__borderless).dq_alert--danger .dq=
_alert__icon, .dq_alert .dq_alert__hollow:not(.dq_alert__borderless).dq_ale=
rt--danger .dq_alert__text, .dq_alert .dq_alert__hollow:not(.dq_alert__bord=
erless).dq_alert--danger svg { color: rgb(215, 66, 66); }

.dq_alert__danger.dq_alert__hollow:not(.dq_alert__borderless).dq_alert__sel=
ected .dq_alert__icon, .dq_alert__danger.dq_alert__hollow:not(.dq_alert__bo=
rderless).dq_alert__selected .dq_alert__text, .dq_alert__danger.dq_alert__h=
ollow:not(.dq_alert__borderless):hover:not(.dq_alert__disabled) .dq_alert__=
icon, .dq_alert__danger.dq_alert__hollow:not(.dq_alert__borderless):hover:n=
ot(.dq_alert__disabled) .dq_alert__text, .dq_alert .dq_alert__hollow:not(.d=
q_alert__borderless).dq_alert__selected.dq_alert--danger .dq_alert__icon, .=
dq_alert .dq_alert__hollow:not(.dq_alert__borderless).dq_alert__selected.dq=
_alert--danger .dq_alert__text, .dq_alert .dq_alert__hollow:not(.dq_alert__=
borderless):hover:not(.dq_alert__disabled).dq_alert--danger .dq_alert__icon=
, .dq_alert .dq_alert__hollow:not(.dq_alert__borderless):hover:not(.dq_aler=
t__disabled).dq_alert--danger .dq_alert__text { color: rgb(162, 47, 47); }

.dq_alert__danger.dq_alert__hollow.dq_alert__borderless, .dq_alert .dq_aler=
t__hollow.dq_alert__borderless.dq_alert--danger { background-color: transpa=
rent; background-image: none; border-color: transparent; }

.dq_alert__danger.dq_alert__hollow.dq_alert__borderless.dq_alert__selected,=
 .dq_alert__danger.dq_alert__hollow.dq_alert__borderless:hover:not(.dq_aler=
t__disabled), .dq_alert .dq_alert__hollow.dq_alert__borderless.dq_alert__se=
lected.dq_alert--danger, .dq_alert .dq_alert__hollow.dq_alert__borderless:h=
over:not(.dq_alert__disabled).dq_alert--danger { background-color: rgb(162,=
 47, 47); background-image: none; border-color: transparent; }

.dq_alert__danger.dq_alert__hollow.dq_alert__borderless .dq_alert__icon, .d=
q_alert__danger.dq_alert__hollow.dq_alert__borderless .dq_alert__text, .dq_=
alert__danger.dq_alert__hollow.dq_alert__borderless svg, .dq_alert .dq_aler=
t__hollow.dq_alert__borderless.dq_alert--danger .dq_alert__icon, .dq_alert =
.dq_alert__hollow.dq_alert__borderless.dq_alert--danger .dq_alert__text, .d=
q_alert .dq_alert__hollow.dq_alert__borderless.dq_alert--danger svg { color=
: rgb(215, 66, 66); }

.dq_alert__danger.dq_alert__hollow.dq_alert__borderless.dq_alert__selected =
.dq_alert__icon, .dq_alert__danger.dq_alert__hollow.dq_alert__borderless.dq=
_alert__selected .dq_alert__text, .dq_alert__danger.dq_alert__hollow.dq_ale=
rt__borderless:hover:not(.dq_alert__disabled) .dq_alert__icon, .dq_alert__d=
anger.dq_alert__hollow.dq_alert__borderless:hover:not(.dq_alert__disabled) =
.dq_alert__text, .dq_alert .dq_alert__hollow.dq_alert__borderless.dq_alert_=
_selected.dq_alert--danger .dq_alert__icon, .dq_alert .dq_alert__hollow.dq_=
alert__borderless.dq_alert__selected.dq_alert--danger .dq_alert__text, .dq_=
alert .dq_alert__hollow.dq_alert__borderless:hover:not(.dq_alert__disabled)=
.dq_alert--danger .dq_alert__icon, .dq_alert .dq_alert__hollow.dq_alert__bo=
rderless:hover:not(.dq_alert__disabled).dq_alert--danger .dq_alert__text { =
color: rgb(255, 255, 255); }

.dq_alert { border-radius: 2px; }

.dq_alert .dq_alert--cancel, .dq_alert .dq_alert--confirm, .dq_alert .dq_al=
ert--danger { margin: 5px 15px; font-weight: 700; }

.dq_alert .dq_alert--confirm, .dq_alert .dq_alert--danger { color: rgb(255,=
 255, 255); }

.dq_alert .dq_alert--cancel { border-color: rgb(48, 57, 75); color: rgb(76,=
 83, 97); }

.dq_alert .dq_alert--cancel.dq_alert__selected, .dq_alert .dq_alert--cancel=
:hover:not(.dq_alert__disabled) { border-color: rgb(76, 83, 97); }

.dq_alert .dq_alert--cancel .dq_alert__icon, .dq_alert .dq_alert--cancel .d=
q_alert__text, .dq_alert .dq_alert--cancel svg { color: rgb(48, 57, 75); }

.dq_alert .dq_alert--cancel.dq_alert__selected .dq_alert__icon, .dq_alert .=
dq_alert--cancel.dq_alert__selected .dq_alert__text, .dq_alert .dq_alert--c=
ancel:hover:not(.dq_alert__disabled) .dq_alert__icon, .dq_alert .dq_alert--=
cancel:hover:not(.dq_alert__disabled) .dq_alert__text { color: rgb(76, 83, =
97); }

.dq_alert .swal2-icon.swal2-info, .dq_alert .swal2-icon.swal2-question { co=
lor: rgb(101, 101, 149); border-color: rgb(161, 161, 191); }

.dq_alert .swal2-icon.swal2-warning { color: rgb(169, 131, 66); border-colo=
r: rgb(206, 178, 131); }

.dq_alert .swal2-icon.swal2-error { border-color: rgb(169, 67, 66); }

.dq_alert .swal2-icon.swal2-error [class^=3D"swal2-x-mark-line"] { backgrou=
nd-color: rgb(169, 67, 66); }

.dq_alert .swal2-icon--success__line { background-color: rgb(97, 209, 153);=
 }

.dq_alert .swal2-icon.swal2-success { border-color: rgba(97, 209, 153, 0.2)=
; }

.dq_alert .swal2-icon.swal2-success .swal2-success-ring { border-color: rgb=
(97, 209, 153); }

.dq_alert .swal2-icon.swal2-success [class^=3D"swal2-success-line"] { backg=
round-color: rgb(97, 209, 153); }

.dq_mission-reset-editor { background: rgb(214, 221, 235) !important; paddi=
ng: 1.25rem 0px !important; }

.dq_mission-reset-editor .swal2-title { padding: 1.25rem 1.25rem 0px; }

.dq_mission-reset-editor .swal2-cancel:hover, .dq_mission-reset-editor .swa=
l2-confirm, .dq_mission-reset-editor .swal2-confirm:hover { color: rgb(255,=
 255, 255); }

.dq_mission-reset-editor .swal2-confirm:hover { background-color: rgb(48, 5=
7, 75) !important; }

.dq_mission-reset-editor .swal2-buttonswrapper { justify-content: space-bet=
ween; padding: 0px 32px 16px; margin-top: 2.5rem; display: flex !important;=
 }

.MissionEditorFiles__root { min-height: 40px; }

.MissionEditorFiles__file, .MissionEditorFiles__file_active { padding: 0px =
20px; text-transform: none; cursor: pointer; position: relative; }

.MissionEditorFiles__file:last-child, .MissionEditorFiles__file_active:last=
-child { border-right: none; }

.MissionEditorFiles__file_active { cursor: default; }

.MissionEditorFiles__close { position: absolute; top: 0px; right: 0px; curs=
or: pointer; padding: 0.5rem; }

.MissionEditorFiles__close > * { margin: 0px; }

.MissionEditorFiles__download { padding: 1rem 2rem; margin: 0px -1rem 0px 2=
px; }

.DqButtonOld__main { display: inline-flex; flex-direction: row; place-conte=
nt: center; align-items: center; text-align: center; white-space: nowrap; f=
ont-weight: 700; background-color: transparent; text-transform: capitalize;=
 padding: 0.875rem 20px; border: 0px; border-radius: 14px; color: rgb(255, =
255, 255); }

.DqButtonOld__main:focus { outline: none; }

.DqButtonOld__main.DqButtonOld__disabled, .DqButtonOld__main.DqButtonOld__d=
isabled:hover { cursor: default; color: rgb(183, 186, 200); }

.DqButtonOld__main:hover { color: rgb(255, 255, 255); }

.DqButtonOld__panel { display: inline-flex; flex-direction: row; place-cont=
ent: center; align-items: center; text-align: center; white-space: nowrap; =
padding: 6px 20px; border-radius: 5px; border: 1px solid transparent; backg=
round-color: transparent; text-transform: capitalize; color: rgb(77, 82, 10=
2); font-weight: 400; }

.DqButtonOld__panel:focus { outline: none; }

.DqButtonOld__panel.DqButtonOld__disabled, .DqButtonOld__panel.DqButtonOld_=
_disabled:hover { cursor: default; color: rgb(183, 186, 200); }

.DqButtonOld__panel.DqButtonOld__on_dark:not(.DqButtonOld__disabled), .DqBu=
ttonOld__panel:hover:not(.DqButtonOld__disabled) { color: rgb(255, 255, 255=
); }

.DqButtonOld__plain_text { display: inline-flex; flex-direction: row; place=
-content: center; align-items: center; text-align: center; white-space: now=
rap; padding: 6px 20px; border-radius: 5px; border: 1px solid transparent; =
background-color: transparent; text-transform: capitalize; color: rgb(77, 8=
2, 102); font-weight: 400; }

.DqButtonOld__plain_text:focus { outline: none; }

.DqButtonOld__plain_text.DqButtonOld__disabled, .DqButtonOld__plain_text.Dq=
ButtonOld__disabled:hover { cursor: default; color: rgb(183, 186, 200); }

.DqButtonOld__plain_text.DqButtonOld__on_dark:not(.DqButtonOld__disabled) {=
 color: rgb(255, 255, 255); }

.DqButtonOld__toolbar { display: inline-flex; flex-direction: row; place-co=
ntent: center; align-items: center; text-align: center; white-space: nowrap=
; padding: 6px 20px; border: 1px solid transparent; background-color: trans=
parent; text-transform: capitalize; color: rgb(77, 82, 102); font-weight: 4=
00; border-radius: 0px; }

.DqButtonOld__toolbar:focus { outline: none; }

.DqButtonOld__toolbar.DqButtonOld__disabled, .DqButtonOld__toolbar.DqButton=
Old__disabled:hover { cursor: default; color: rgb(183, 186, 200); }

.DqButtonOld__toolbar.DqButtonOld__on_dark:not(.DqButtonOld__disabled), .Dq=
ButtonOld__toolbar.DqButtonOld__selected, .DqButtonOld__toolbar:hover { col=
or: rgb(255, 255, 255); }

.DqButtonOld__purple.DqButtonOld__main { background-color: rgb(83, 94, 116)=
; }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__on_dark { background-co=
lor: rgb(149, 149, 213); }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__disabled, .DqButtonOld_=
_purple.DqButtonOld__main.DqButtonOld__disabled:hover { background-color: r=
gb(163, 171, 189); }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__disabled.DqButtonOld__o=
n_dark, .DqButtonOld__purple.DqButtonOld__main.DqButtonOld__disabled:hover.=
DqButtonOld__on_dark { background-color: rgb(90, 96, 108); }

.DqButtonOld__purple.DqButtonOld__main, .DqButtonOld__purple.DqButtonOld__p=
anel { border-color: rgb(83, 94, 116); }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__on_dark, .DqButtonOld__=
purple.DqButtonOld__panel.DqButtonOld__on_dark { border-color: rgb(149, 149=
, 213); }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__disabled, .DqButtonOld_=
_purple.DqButtonOld__main.DqButtonOld__disabled:hover, .DqButtonOld__purple=
.DqButtonOld__panel.DqButtonOld__disabled, .DqButtonOld__purple.DqButtonOld=
__panel.DqButtonOld__disabled:hover { border-color: rgb(163, 171, 189); }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__disabled.DqButtonOld__o=
n_dark, .DqButtonOld__purple.DqButtonOld__main.DqButtonOld__disabled:hover.=
DqButtonOld__on_dark, .DqButtonOld__purple.DqButtonOld__panel.DqButtonOld__=
disabled.DqButtonOld__on_dark, .DqButtonOld__purple.DqButtonOld__panel.DqBu=
ttonOld__disabled:hover.DqButtonOld__on_dark { border-color: rgb(90, 96, 10=
8); }

.DqButtonOld__purple.DqButtonOld__toolbar { background-color: rgba(83, 94, =
116, 0.15); }

.DqButtonOld__purple.DqButtonOld__toolbar.DqButtonOld__on_dark { background=
-color: rgba(149, 149, 213, 0.25); }

.DqButtonOld__purple.DqButtonOld__toolbar.DqButtonOld__disabled, .DqButtonO=
ld__purple.DqButtonOld__toolbar.DqButtonOld__disabled:hover { background-co=
lor: rgba(163, 171, 189, 0.15); color: rgba(77, 82, 102, 0.15); }

.DqButtonOld__purple.DqButtonOld__toolbar.DqButtonOld__disabled.DqButtonOld=
__on_dark, .DqButtonOld__purple.DqButtonOld__toolbar.DqButtonOld__disabled:=
hover.DqButtonOld__on_dark { color: rgba(255, 255, 255, 0.25); background-c=
olor: rgba(90, 90, 108, 0.25); }

.DqButtonOld__purple.DqButtonOld__plain_text.DqButtonOld__selected, .DqButt=
onOld__purple.DqButtonOld__plain_text:hover:not(.DqButtonOld__disabled) { b=
ackground-color: rgb(59, 62, 68); }

.DqButtonOld__purple.DqButtonOld__plain_text.DqButtonOld__selected.DqButton=
Old__on_dark, .DqButtonOld__purple.DqButtonOld__plain_text:hover:not(.DqBut=
tonOld__disabled).DqButtonOld__on_dark { background-color: rgb(122, 122, 18=
9); }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__selected:not(.DqButtonO=
ld__disabled), .DqButtonOld__purple.DqButtonOld__main:hover:not(.DqButtonOl=
d__disabled), .DqButtonOld__purple.DqButtonOld__panel.DqButtonOld__selected=
:not(.DqButtonOld__disabled), .DqButtonOld__purple.DqButtonOld__panel:hover=
:not(.DqButtonOld__disabled) { background-color: rgb(59, 62, 68); }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__selected:not(.DqButtonO=
ld__disabled).DqButtonOld__on_dark, .DqButtonOld__purple.DqButtonOld__main:=
hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__purpl=
e.DqButtonOld__panel.DqButtonOld__selected:not(.DqButtonOld__disabled).DqBu=
ttonOld__on_dark, .DqButtonOld__purple.DqButtonOld__panel:hover:not(.DqButt=
onOld__disabled).DqButtonOld__on_dark { background-color: rgb(122, 122, 189=
); }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__selected:not(.DqButtonO=
ld__disabled), .DqButtonOld__purple.DqButtonOld__main:hover:not(.DqButtonOl=
d__disabled), .DqButtonOld__purple.DqButtonOld__panel.DqButtonOld__selected=
:not(.DqButtonOld__disabled), .DqButtonOld__purple.DqButtonOld__panel:hover=
:not(.DqButtonOld__disabled) { border-color: rgb(59, 62, 68); }

.DqButtonOld__purple.DqButtonOld__main.DqButtonOld__selected:not(.DqButtonO=
ld__disabled).DqButtonOld__on_dark, .DqButtonOld__purple.DqButtonOld__main:=
hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__purpl=
e.DqButtonOld__panel.DqButtonOld__selected:not(.DqButtonOld__disabled).DqBu=
ttonOld__on_dark, .DqButtonOld__purple.DqButtonOld__panel:hover:not(.DqButt=
onOld__disabled).DqButtonOld__on_dark { border-color: rgb(122, 122, 189); }

.DqButtonOld__purple.DqButtonOld__toolbar.DqButtonOld__selected, .DqButtonO=
ld__purple.DqButtonOld__toolbar:hover { border-color: rgb(83, 94, 116); bac=
kground-color: rgb(83, 94, 116); }

.DqButtonOld__purple.DqButtonOld__toolbar.DqButtonOld__selected.DqButtonOld=
__on_dark, .DqButtonOld__purple.DqButtonOld__toolbar:hover.DqButtonOld__on_=
dark { border-color: rgb(149, 149, 213); background-color: rgb(149, 149, 21=
3); }

.DqButtonOld__purple.DqButtonOld__toolbar.DqButtonOld__selected.DqButtonOld=
__disabled, .DqButtonOld__purple.DqButtonOld__toolbar:hover.DqButtonOld__di=
sabled { color: rgba(255, 255, 255, 0.15); }

.DqButtonOld__white.DqButtonOld__main, .DqButtonOld__white.DqButtonOld__mai=
n.DqButtonOld__disabled, .DqButtonOld__white.DqButtonOld__main.DqButtonOld_=
_disabled:hover, .DqButtonOld__white.DqButtonOld__main.DqButtonOld__on_dark=
 { background-color: rgb(255, 255, 255); }

.DqButtonOld__white.DqButtonOld__main.DqButtonOld__disabled.DqButtonOld__on=
_dark, .DqButtonOld__white.DqButtonOld__main.DqButtonOld__disabled:hover.Dq=
ButtonOld__on_dark { background-color: rgb(108, 90, 90); }

.DqButtonOld__white.DqButtonOld__main, .DqButtonOld__white.DqButtonOld__mai=
n.DqButtonOld__disabled, .DqButtonOld__white.DqButtonOld__main.DqButtonOld_=
_disabled:hover, .DqButtonOld__white.DqButtonOld__main.DqButtonOld__on_dark=
, .DqButtonOld__white.DqButtonOld__panel, .DqButtonOld__white.DqButtonOld__=
panel.DqButtonOld__disabled, .DqButtonOld__white.DqButtonOld__panel.DqButto=
nOld__disabled:hover, .DqButtonOld__white.DqButtonOld__panel.DqButtonOld__o=
n_dark { border-color: rgb(255, 255, 255); }

.DqButtonOld__white.DqButtonOld__main.DqButtonOld__disabled.DqButtonOld__on=
_dark, .DqButtonOld__white.DqButtonOld__main.DqButtonOld__disabled:hover.Dq=
ButtonOld__on_dark, .DqButtonOld__white.DqButtonOld__panel.DqButtonOld__dis=
abled.DqButtonOld__on_dark, .DqButtonOld__white.DqButtonOld__panel.DqButton=
Old__disabled:hover.DqButtonOld__on_dark { border-color: rgb(108, 90, 90); =
}

.DqButtonOld__white.DqButtonOld__toolbar { background-color: rgba(255, 255,=
 255, 0.15); }

.DqButtonOld__white.DqButtonOld__toolbar.DqButtonOld__on_dark { background-=
color: rgba(255, 255, 255, 0.25); }

.DqButtonOld__white.DqButtonOld__toolbar.DqButtonOld__disabled, .DqButtonOl=
d__white.DqButtonOld__toolbar.DqButtonOld__disabled:hover { background-colo=
r: rgba(255, 255, 255, 0.15); color: rgba(77, 82, 102, 0.15); }

.DqButtonOld__white.DqButtonOld__toolbar.DqButtonOld__disabled.DqButtonOld_=
_on_dark, .DqButtonOld__white.DqButtonOld__toolbar.DqButtonOld__disabled:ho=
ver.DqButtonOld__on_dark { color: rgba(255, 255, 255, 0.25); background-col=
or: rgba(108, 90, 90, 0.25); }

.DqButtonOld__white.DqButtonOld__main.DqButtonOld__selected:not(.DqButtonOl=
d__disabled), .DqButtonOld__white.DqButtonOld__main.DqButtonOld__selected:n=
ot(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__white.DqButt=
onOld__main:hover:not(.DqButtonOld__disabled), .DqButtonOld__white.DqButton=
Old__main:hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButton=
Old__white.DqButtonOld__panel.DqButtonOld__selected:not(.DqButtonOld__disab=
led), .DqButtonOld__white.DqButtonOld__panel.DqButtonOld__selected:not(.DqB=
uttonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__white.DqButtonOld__=
panel:hover:not(.DqButtonOld__disabled), .DqButtonOld__white.DqButtonOld__p=
anel:hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__=
white.DqButtonOld__plain_text.DqButtonOld__selected, .DqButtonOld__white.Dq=
ButtonOld__plain_text.DqButtonOld__selected.DqButtonOld__on_dark, .DqButton=
Old__white.DqButtonOld__plain_text:hover:not(.DqButtonOld__disabled), .DqBu=
ttonOld__white.DqButtonOld__plain_text:hover:not(.DqButtonOld__disabled).Dq=
ButtonOld__on_dark { background-color: rgb(51, 204, 153); }

.DqButtonOld__white.DqButtonOld__main.DqButtonOld__selected:not(.DqButtonOl=
d__disabled), .DqButtonOld__white.DqButtonOld__main.DqButtonOld__selected:n=
ot(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__white.DqButt=
onOld__main:hover:not(.DqButtonOld__disabled), .DqButtonOld__white.DqButton=
Old__main:hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButton=
Old__white.DqButtonOld__panel.DqButtonOld__selected:not(.DqButtonOld__disab=
led), .DqButtonOld__white.DqButtonOld__panel.DqButtonOld__selected:not(.DqB=
uttonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__white.DqButtonOld__=
panel:hover:not(.DqButtonOld__disabled), .DqButtonOld__white.DqButtonOld__p=
anel:hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark { border-color:=
 rgb(51, 204, 153); }

.DqButtonOld__white.DqButtonOld__toolbar.DqButtonOld__selected, .DqButtonOl=
d__white.DqButtonOld__toolbar.DqButtonOld__selected.DqButtonOld__on_dark, .=
DqButtonOld__white.DqButtonOld__toolbar:hover, .DqButtonOld__white.DqButton=
Old__toolbar:hover.DqButtonOld__on_dark { border-color: rgb(255, 255, 255);=
 background-color: rgb(255, 255, 255); }

.DqButtonOld__white.DqButtonOld__toolbar.DqButtonOld__selected.DqButtonOld_=
_disabled, .DqButtonOld__white.DqButtonOld__toolbar:hover.DqButtonOld__disa=
bled { color: rgba(255, 255, 255, 0.15); }

.DqButtonOld__white:not(.DqButtonOld__on_dark) { color: rgb(121, 121, 180);=
 }

.DqButtonOld__white.DqButtonOld__selected:not(.DqButtonOld__disabled), .DqB=
uttonOld__white:hover:not(.DqButtonOld__disabled) { color: rgb(255, 255, 25=
5); }

.DqButtonOld__danger.DqButtonOld__main, .DqButtonOld__danger.DqButtonOld__m=
ain.DqButtonOld__on_dark { background-color: rgb(204, 51, 51); }

.DqButtonOld__danger.DqButtonOld__main.DqButtonOld__disabled, .DqButtonOld_=
_danger.DqButtonOld__main.DqButtonOld__disabled:hover { background-color: r=
gb(235, 173, 173); }

.DqButtonOld__danger.DqButtonOld__main.DqButtonOld__disabled.DqButtonOld__o=
n_dark, .DqButtonOld__danger.DqButtonOld__main.DqButtonOld__disabled:hover.=
DqButtonOld__on_dark { background-color: rgb(108, 90, 90); }

.DqButtonOld__danger.DqButtonOld__main, .DqButtonOld__danger.DqButtonOld__m=
ain.DqButtonOld__on_dark, .DqButtonOld__danger.DqButtonOld__panel, .DqButto=
nOld__danger.DqButtonOld__panel.DqButtonOld__on_dark { border-color: rgb(20=
4, 51, 51); }

.DqButtonOld__danger.DqButtonOld__main.DqButtonOld__disabled, .DqButtonOld_=
_danger.DqButtonOld__main.DqButtonOld__disabled:hover, .DqButtonOld__danger=
.DqButtonOld__panel.DqButtonOld__disabled, .DqButtonOld__danger.DqButtonOld=
__panel.DqButtonOld__disabled:hover { border-color: rgb(235, 173, 173); }

.DqButtonOld__danger.DqButtonOld__main.DqButtonOld__disabled.DqButtonOld__o=
n_dark, .DqButtonOld__danger.DqButtonOld__main.DqButtonOld__disabled:hover.=
DqButtonOld__on_dark, .DqButtonOld__danger.DqButtonOld__panel.DqButtonOld__=
disabled.DqButtonOld__on_dark, .DqButtonOld__danger.DqButtonOld__panel.DqBu=
ttonOld__disabled:hover.DqButtonOld__on_dark { border-color: rgb(108, 90, 9=
0); }

.DqButtonOld__danger.DqButtonOld__toolbar { background-color: rgba(204, 51,=
 51, 0.15); }

.DqButtonOld__danger.DqButtonOld__toolbar.DqButtonOld__on_dark { background=
-color: rgba(204, 51, 51, 0.25); }

.DqButtonOld__danger.DqButtonOld__toolbar.DqButtonOld__disabled, .DqButtonO=
ld__danger.DqButtonOld__toolbar.DqButtonOld__disabled:hover { background-co=
lor: rgba(235, 173, 173, 0.15); color: rgba(77, 82, 102, 0.15); }

.DqButtonOld__danger.DqButtonOld__toolbar.DqButtonOld__disabled.DqButtonOld=
__on_dark, .DqButtonOld__danger.DqButtonOld__toolbar.DqButtonOld__disabled:=
hover.DqButtonOld__on_dark { color: rgba(255, 255, 255, 0.25); background-c=
olor: rgba(108, 90, 90, 0.25); }

.DqButtonOld__danger.DqButtonOld__main.DqButtonOld__selected:not(.DqButtonO=
ld__disabled), .DqButtonOld__danger.DqButtonOld__main.DqButtonOld__selected=
:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__danger.DqB=
uttonOld__main:hover:not(.DqButtonOld__disabled), .DqButtonOld__danger.DqBu=
ttonOld__main:hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqBu=
ttonOld__danger.DqButtonOld__panel.DqButtonOld__selected:not(.DqButtonOld__=
disabled), .DqButtonOld__danger.DqButtonOld__panel.DqButtonOld__selected:no=
t(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__danger.DqButt=
onOld__panel:hover:not(.DqButtonOld__disabled), .DqButtonOld__danger.DqButt=
onOld__panel:hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqBut=
tonOld__danger.DqButtonOld__plain_text.DqButtonOld__selected, .DqButtonOld_=
_danger.DqButtonOld__plain_text.DqButtonOld__selected.DqButtonOld__on_dark,=
 .DqButtonOld__danger.DqButtonOld__plain_text:hover:not(.DqButtonOld__disab=
led), .DqButtonOld__danger.DqButtonOld__plain_text:hover:not(.DqButtonOld__=
disabled).DqButtonOld__on_dark { background-color: rgb(122, 31, 31); }

.DqButtonOld__danger.DqButtonOld__main.DqButtonOld__selected:not(.DqButtonO=
ld__disabled), .DqButtonOld__danger.DqButtonOld__main.DqButtonOld__selected=
:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__danger.DqB=
uttonOld__main:hover:not(.DqButtonOld__disabled), .DqButtonOld__danger.DqBu=
ttonOld__main:hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqBu=
ttonOld__danger.DqButtonOld__panel.DqButtonOld__selected:not(.DqButtonOld__=
disabled), .DqButtonOld__danger.DqButtonOld__panel.DqButtonOld__selected:no=
t(.DqButtonOld__disabled).DqButtonOld__on_dark, .DqButtonOld__danger.DqButt=
onOld__panel:hover:not(.DqButtonOld__disabled), .DqButtonOld__danger.DqButt=
onOld__panel:hover:not(.DqButtonOld__disabled).DqButtonOld__on_dark { borde=
r-color: rgb(122, 31, 31); }

.DqButtonOld__danger.DqButtonOld__toolbar.DqButtonOld__selected, .DqButtonO=
ld__danger.DqButtonOld__toolbar.DqButtonOld__selected.DqButtonOld__on_dark,=
 .DqButtonOld__danger.DqButtonOld__toolbar:hover, .DqButtonOld__danger.DqBu=
ttonOld__toolbar:hover.DqButtonOld__on_dark { border-color: rgb(204, 51, 51=
); background-color: rgb(204, 51, 51); }

.DqButtonOld__danger.DqButtonOld__toolbar.DqButtonOld__selected.DqButtonOld=
__disabled, .DqButtonOld__danger.DqButtonOld__toolbar:hover.DqButtonOld__di=
sabled { color: rgba(255, 255, 255, 0.15); }

.DqButtonOld__danger.DqButtonOld__plain_text { color: rgb(204, 51, 51); }

.DqButtonOld__danger.DqButtonOld__plain_text:hover { color: rgb(255, 255, 2=
55); }

.DqButtonOld__text { display: inline-block; }

.DqButtonOld__icon { margin-left: 0.25em; margin-right: -10px; top: 0px !im=
portant; }

.DqButtonOld__icon:first-child { margin-right: 0.25em; margin-left: -10px; =
}

.DqButtonOld__icon:only-child { margin-left: -10px; margin-right: -12px; }

.shepherd-element { background: rgb(255, 255, 255); border-radius: 5px; box=
-shadow: rgba(0, 0, 0, 0.2) 0px 1px 4px; max-width: 400px; opacity: 0; outl=
ine: none; transition: opacity 0.3s ease 0s, visibility 0.3s ease 0s; visib=
ility: hidden; width: 100%; z-index: 9999; }

.shepherd-enabled.shepherd-element { opacity: 1; visibility: visible; }

.shepherd-element[data-popper-reference-hidden]:not(.shepherd-centered) { o=
pacity: 0; pointer-events: none; visibility: hidden; }

.shepherd-element, .shepherd-element *, .shepherd-element ::after, .shepher=
d-element ::before { box-sizing: border-box; }

.shepherd-arrow, .shepherd-arrow::before { position: absolute; width: 16px;=
 height: 16px; z-index: -1; }

.shepherd-arrow::before { content: ""; transform: rotate(45deg); background=
: rgb(255, 255, 255); }

.shepherd-element[data-popper-placement^=3D"top"] > .shepherd-arrow { botto=
m: -8px; }

.shepherd-element[data-popper-placement^=3D"bottom"] > .shepherd-arrow { to=
p: -8px; }

.shepherd-element[data-popper-placement^=3D"left"] > .shepherd-arrow { righ=
t: -8px; }

.shepherd-element[data-popper-placement^=3D"right"] > .shepherd-arrow { lef=
t: -8px; }

.shepherd-element.shepherd-centered > .shepherd-arrow { opacity: 0; }

.shepherd-element.shepherd-has-title[data-popper-placement^=3D"bottom"] > .=
shepherd-arrow::before { background-color: rgb(230, 230, 230); }

.shepherd-target-click-disabled.shepherd-enabled.shepherd-target, .shepherd=
-target-click-disabled.shepherd-enabled.shepherd-target * { pointer-events:=
 none; }

.shepherd-modal-overlay-container { height: 0px; left: 0px; opacity: 0; ove=
rflow: hidden; pointer-events: none; position: fixed; top: 0px; transition:=
 all 0.3s ease-out 0s, height 0ms ease 0.3s, opacity 0.3s ease 0ms; width: =
100vw; z-index: 9997; }

.shepherd-modal-overlay-container.shepherd-modal-is-visible { height: 100vh=
; opacity: 0.5; transition: all 0.3s ease-out 0s, height 0s ease 0s, opacit=
y 0.3s ease 0s; }

.shepherd-modal-overlay-container.shepherd-modal-is-visible path { pointer-=
events: all; }

.shepherd-content { border-radius: 5px; outline: none; padding: 0px; }

.shepherd-footer { border-bottom-left-radius: 5px; border-bottom-right-radi=
us: 5px; display: flex; justify-content: flex-end; padding: 0px 0.75rem 0.7=
5rem; }

.shepherd-footer .shepherd-button:last-child { margin-right: 0px; }

.shepherd-header { align-items: center; border-top-left-radius: 5px; border=
-top-right-radius: 5px; display: flex; justify-content: flex-end; line-heig=
ht: 2em; padding: 0.75rem 0.75rem 0px; }

.shepherd-has-title .shepherd-content .shepherd-header { background: rgb(23=
0, 230, 230); padding: 1em; }

.shepherd-text { color: rgba(0, 0, 0, 0.75); font-size: 1rem; line-height: =
1.3em; padding: 0.75em; }

.shepherd-text p { margin-top: 0px; }

.shepherd-text p:last-child { margin-bottom: 0px; }

.shepherd-button { background: rgb(50, 136, 230); border: 0px; border-radiu=
s: 3px; color: rgba(255, 255, 255, 0.75); cursor: pointer; margin-right: 0.=
5rem; padding: 0.5rem 1.5rem; transition: all 0.5s ease 0s; }

.shepherd-button:not(:disabled):hover { background: rgb(25, 111, 204); colo=
r: rgba(255, 255, 255, 0.75); }

.shepherd-button.shepherd-button-secondary { background: rgb(241, 242, 243)=
; color: rgba(0, 0, 0, 0.75); }

.shepherd-button.shepherd-button-secondary:not(:disabled):hover { backgroun=
d: rgb(214, 217, 219); color: rgba(0, 0, 0, 0.75); }

.shepherd-button:disabled { cursor: not-allowed; }

.shepherd-cancel-icon { background: transparent; border: none; color: rgba(=
128, 128, 128, 0.75); font-size: 2em; cursor: pointer; font-weight: 400; ma=
rgin: 0px; padding: 0px; transition: color 0.5s ease 0s; }

.shepherd-cancel-icon:hover { color: rgba(0, 0, 0, 0.75); }

.shepherd-has-title .shepherd-content .shepherd-cancel-icon { color: rgba(1=
28, 128, 128, 0.75); }

.shepherd-has-title .shepherd-content .shepherd-cancel-icon:hover, .shepher=
d-title { color: rgba(0, 0, 0, 0.75); }

.shepherd-title { display: flex; font-size: 1rem; font-weight: 400; flex: 1=
 0 auto; margin: 0px; padding: 0px; }

.TerminalPanels__root > div:first-child { height: calc(100% - 91px); max-wi=
dth: 100%; }

.MissionSteps__root, .MissionSteps__shield { position: fixed; inset: 0px; }

.MissionSteps__shield { opacity: 0.8; }

.MissionSteps__shield, .MissionSteps__side { position: absolute; }

.MissionSteps__side { top: 0px; bottom: 0px; left: 0px; padding: 16px 0px 7=
1px 30px; }

.MissionSteps__header { max-width: 250px; padding: 0px 30px 30px 0px; }

.MissionSteps__header h2 { text-transform: capitalize; margin: 2rem 0px; }

.MissionSteps__back_icon { border-radius: 50%; text-align: center; }

.MissionSteps__back_text { margin-left: 1ch; color: transparent; }

.MissionSteps__lesson { text-transform: uppercase; padding: 1em 30px 1em 0p=
x; }

.MissionSteps__steps { overflow-y: auto; padding-right: 30px; position: rel=
ative; }

.MissionSteps__steps > * { margin-bottom: 30px; }

.DqModal__root:not(.DqModal__messageContainer--small) { position: fixed; in=
set: 0px; background-color: rgba(76, 83, 97, 0.8); }

.DqModal__content { border: 1px solid transparent; border-radius: 2px; max-=
width: 37.5rem; margin: 4rem auto; position: relative; }

.DqModal__messageContainer--small .DqModal__content { border: 1px solid rgb=
(204, 204, 204); border-radius: 12px; box-shadow: rgba(0, 0, 0, 0.1) 0px 20=
px 25px -5px, rgba(0, 0, 0, 0.04) 0px 10px 10px -5px; inset: auto 24px 24px=
 auto; width: 376px; min-height: 400px; margin: 0px; padding: 0px; position=
: absolute; }

.DqModal__messageContainer--large .DqModal__content { position: absolute; i=
nset: 25% 40px 40px; overflow: auto; padding: 20px; margin: 0px auto; max-w=
idth: 640px; max-height: 400px; }

.DqModal__close { position: absolute; top: 1rem; right: 1rem; cursor: point=
er; opacity: 0.3; }

.DqModal__close:hover { opacity: 1; }

.rc-collapse-motion { transition: height 0.3s ease 0s, opacity 0.3s ease 0s=
; }

.rc-collapse-content-hidden { display: none; }

.rc-collapse { background-color: rgb(247, 247, 247); border-radius: 3px; bo=
rder: 1px solid rgb(217, 217, 217); }

.rc-collapse > .rc-collapse-item { border-top: 1px solid rgb(217, 217, 217)=
; }

.rc-collapse > .rc-collapse-item:first-child { border-top: none; }

.rc-collapse > .rc-collapse-item > .rc-collapse-header { display: flex; ali=
gn-items: center; line-height: 22px; padding: 10px 16px; color: rgb(102, 10=
2, 102); cursor: pointer; }

.rc-collapse > .rc-collapse-item > .rc-collapse-header .arrow { display: in=
line-block; content: " "; width: 0px; height: 0px; font-size: 0px; line-hei=
ght: 0; border-top: 3px solid transparent; border-bottom: 3px solid transpa=
rent; border-left: 4px solid rgb(102, 102, 102); vertical-align: middle; ma=
rgin-right: 8px; }

.rc-collapse > .rc-collapse-item > .rc-collapse-header .rc-collapse-extra {=
 margin: 0px 16px 0px auto; }

.rc-collapse > .rc-collapse-item .rc-collapse-header-collapsible-only { cur=
sor: default; }

.rc-collapse > .rc-collapse-item .rc-collapse-header-collapsible-only .rc-c=
ollapse-header-text { cursor: pointer; }

.rc-collapse > .rc-collapse-item-disabled > .rc-collapse-header { cursor: n=
ot-allowed; color: rgb(153, 153, 153); background-color: rgb(243, 243, 243)=
; }

.rc-collapse-content { overflow: hidden; color: rgb(102, 102, 102); padding=
: 0px 16px; background-color: rgb(255, 255, 255); }

.rc-collapse-content > .rc-collapse-content-box { margin-top: 16px; margin-=
bottom: 16px; }

.rc-collapse-item:last-child > .rc-collapse-content { border-radius: 0px 0p=
x 3px 3px; }

.rc-collapse > .rc-collapse-item-active > .rc-collapse-header .arrow { posi=
tion: relative; top: 2px; border-left: 3px solid transparent; border-right:=
 3px solid transparent; border-top: 4px solid rgb(102, 102, 102); margin-ri=
ght: 6px; }

.DqProgressBar__root { width: 100%; border-radius: 2.5px 2.5px 0px 0px; hei=
ght: 8px; overflow: hidden; }
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H----
Content-Type: text/html
Content-ID: <frame-7CC646BF14B230CE2101C98D767461C2@mhtml.blink>
Content-Transfer-Encoding: quoted-printable

<html><head><meta http-equiv=3D"Content-Type" content=3D"text/html; charset=
=3DUTF-8"></head><body></body></html>
------MultipartBoundary--X3Xu8PYM0kL675ULH2Vp7Mrsp7Sa7y6Kpr5pDt5d6H------
